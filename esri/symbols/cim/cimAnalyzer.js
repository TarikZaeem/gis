// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../Color ../../core/fontUtils ../../core/lang ../../core/Logger ../../core/maybe ../../core/screenUtils ../../core/string ../../support/arcadeOnDemand ./CIMSymbolHelper ./enums ./quantizeTime ./SDFHelper ./utils ./effects/CIMEffectHelper ../../views/2d/arcade/callExpressionWithFeature ../../views/2d/engine/webgl/definitions ../../views/2d/engine/webgl/grouping".split(" "),function(aa,qa,ra,sa,Y,ta,L,ia,C,V,Q,R,ua,Z,n,ja,W,va,wa){function ba(a){switch(a){case "Butt":return R.CapType.BUTT;
case "Square":return R.CapType.SQUARE;default:return R.CapType.ROUND}}function ca(a){switch(a){case "Bevel":return R.JoinType.BEVEL;case "Miter":return R.JoinType.MITER;default:return R.JoinType.ROUND}}function ka(a,l,f,h){let b;a[l]?b=a[l]:(b={},a[l]=b);b[f]=h}function la(a){return(a=a.markerPlacement)&&a.angleToLine?R.Alignment.MAP:R.Alignment.SCREEN}function da(){da=qa._asyncToGenerator(function*(a,l,f,h,b){h=h??[];if(!a)return h;let e;const g={};if("CIMSymbolReference"===a.type){if(e=a.symbol,
a=a.primitiveOverrides){var d=[];for(const m of a){var c=m.valueExpressionInfo;c&&l?(c=V.createRendererExpression(c.expression,l.spatialReference,l.fields).then(u=>{L.isNone(u)||ka(g,m.primitiveName,m.propertyName,u)}),d.push(c)):null!=m.value&&ka(g,m.primitiveName,m.propertyName,m.value)}0<d.length&&(yield Promise.all(d))}}else return ma.error("Expect cim type to be 'CIMSymbolReference'"),h;d=[];Q.CIMSymbolHelper.fetchResources(e,f,d);0<d.length&&(yield Promise.all(d));switch(e?.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":xa(e,
a,g,l,h,f,!!b)}return h});return da.apply(this,arguments)}function xa(a,l,f,h,b,e,g){if(a){var d=a.symbolLayers;if(d){var c=a.effects,m=R.Alignment.SCREEN,u=Q.CIMSymbolHelper.getSize(a)??0;"CIMPointSymbol"===a.type&&"Map"===a.angleAlignment&&(m=R.Alignment.MAP);for(var w=d.length;w--;){var k=d[w];if(!k||!1===k.enable)continue;let E;c&&c.length&&(E=[...c]);var r=k.effects;r&&r.length&&(c?E.push(...r):E=[...r]);r=[];Q.OverrideHelper.findEffectOverrides(E,l,r);r=0<r.length?ya(E,r,f,h):E;var v=[];Q.OverrideHelper.findApplicableOverrides(k,
l,v);switch(k.type){case "CIMSolidFill":za(k,r,f,v,h,b);break;case "CIMPictureFill":Aa(k,r,f,v,h,e,b);break;case "CIMHatchFill":Ba(k,r,f,v,h,b);break;case "CIMGradientFill":var t=f,q=h,x=b;const [M,S]=J(v,k.primitiveName,r,null,null);var z=C.numericHash(JSON.stringify(k)+S).toString();x.push({type:"fill",templateHash:z,materialHash:M?X(z,t,v,q):z,cim:k,materialOverrides:null,colorLocked:!!k.colorLocked,effects:r,color:{r:128,g:128,b:128,a:1},height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,applyRandomOffset:!1,
sampleAlphaOnly:!1});break;case "CIMSolidStroke":Ca(k,r,f,v,h,b,"CIMPolygonSymbol"===a.type,u);break;case "CIMPictureStroke":Da(k,r,f,v,h,b,"CIMPolygonSymbol"===a.type,u);break;case "CIMGradientStroke":t=f;q=h;x=b;z="CIMPolygonSymbol"===a.type;var y=u,D=k.primitiveName,I=null!=k.width?k.width:4,F=ba(k.capStyle),B=ca(k.joinStyle),A=k.miterLimit;const [G,K]=J(v,D,r,null,null),H=C.numericHash(JSON.stringify(k)+K).toString();x.push({type:"line",templateHash:H,materialHash:G?X(H,t,v,q):H,cim:k,materialOverrides:null,
isOutline:z,colorLocked:!!k.colorLocked,effects:r,color:{r:128,g:128,b:128,a:1},width:p(D,t,"Width",q,I),cap:p(D,t,"CapStyle",q,F),join:p(D,t,"JoinStyle",q,B),miterLimit:A&&p(D,t,"MiterLimit",q,A),referenceWidth:y,zOrder:ea(k.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1});break;case "CIMCharacterMarker":fa(k,r,f,v,h,b);break;case "CIMPictureMarker":if(fa(k,r,f,v,h,b))break;"CIMLineSymbol"===a.type&&(m=la(k));Ea(k,r,f,v,h,e,b,m,u);break;case "CIMVectorMarker":if(fa(k,r,f,v,h,b))break;"CIMLineSymbol"===
a.type&&(m=la(k));t=f;q=h;x=b;z=e;y=m;D=u;I=g;if(B=k.markerGraphics){F=0;k.scaleSymbolsProportionally&&(A=k.frame)&&(F=A.ymax-A.ymin);A=na(k.markerPlacement,v,t,q);for(const N of B)if(N&&(B=N.symbol))switch(B.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":Fa(k,r,A,null,N,v,t,q,x,z,y,D,F,!!I);break;case "CIMTextSymbol":Ga(k,r,A,N,t,v,q,x,y,D,F)}}break;default:ma.error("Cannot analyze CIM layer",k.type)}}}}}function za(a,l,f,h,b,e){const g=a.primitiveName,d=n.fromCIMColor(a.color),
[c,m]=J(h,g,l,null,null),u=C.numericHash(JSON.stringify(a)+m).toString();e.push({type:"fill",templateHash:u,materialHash:c?()=>u:u,cim:a,materialOverrides:null,colorLocked:!!a.colorLocked,color:p(g,f,"Color",b,d,O),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:l,applyRandomOffset:!1,sampleAlphaOnly:!0})}function Aa(a,l,f,h,b,e,g){const d=a.primitiveName,c=n.getTintColor(a),[m,u]=J(h,d,l,null,null);h=C.numericHash(JSON.stringify(a)+u).toString();const w=C.numericHash(`${a.url}${JSON.stringify(a.colorSubstitutions)}`).toString();
let k=n.getValue(a.scaleX);if("width"in a&&"number"===typeof a.width){const r=a.width;let v=1;e=e.getResource(a.url);L.isSome(e)&&(v=e.width/e.height);k/=a.height/r*v}g.push({type:"fill",templateHash:h,materialHash:m?()=>w:w,cim:a,materialOverrides:null,colorLocked:!!a.colorLocked,effects:l,color:p(d,f,"TintColor",b,c,O),height:p(d,f,"Height",b,a.height),scaleX:p(d,f,"ScaleX",b,k),angle:p(d,f,"Rotation",b,n.getValue(a.rotation)),offsetX:p(d,f,"OffsetX",b,n.getValue(a.offsetX)),offsetY:p(d,f,"OffsetY",
b,n.getValue(a.offsetY)),url:a.url,applyRandomOffset:!1,sampleAlphaOnly:!1})}function Ba(a,l,f,h,b,e){const g=["Rotation","OffsetX","OffsetY"],d=h.filter(t=>t.primitiveName!==a.primitiveName||!g.includes(t.propertyName)),c=a.primitiveName;let [m,u]=J(h,c,l,null,null);h=C.numericHash(JSON.stringify(a)+u).toString();const w=C.numericHash(`${a.separation}${JSON.stringify(a.lineSymbol)}`).toString();let k={r:255,g:255,b:255,a:1};var r=!1;const v=a.lineSymbol?.symbolLayers?.find(t=>"CIMSolidStroke"===
t.type&&null!=f[t.primitiveName]?.Color);v&&(k=n.fromCIMColor(v.color),k=p(v.primitiveName,f,"Color",b,k,O),r="function"===typeof k,m=m||r,r=null!=v.color||r);e.push({type:"fill",templateHash:h,materialHash:m?X(w,f,d,b):w,cim:a,materialOverrides:d,colorLocked:!!a.colorLocked,effects:l,color:k,height:p(c,f,"Separation",b,a.separation),scaleX:1,angle:p(c,f,"Rotation",b,n.getValue(a.rotation)),offsetX:p(c,f,"OffsetX",b,n.getValue(a.offsetX)),offsetY:p(c,f,"OffsetY",b,n.getValue(a.offsetY)),applyRandomOffset:!1,
sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!r})}function Ca(a,l,f,h,b,e,g,d){const c=a.primitiveName,m=n.fromCIMColor(a.color),u=null!=a.width?a.width:4,w=ba(a.capStyle),k=ca(a.joinStyle),r=a.miterLimit,[v,t]=J(h,c,l,null,null),q=C.numericHash(JSON.stringify(a)+t).toString();let x;if(l&&l instanceof Array&&0<l.length&&(h=l[l.length-1],"CIMGeometricEffectDashes"===h.type&&"NoConstraint"===h.lineDashEnding&&null===h.offsetAlongLine)){l=[...l];var z=l.pop();x=z.dashTemplate;z=z.scaleDash}e.push({type:"line",
templateHash:q,materialHash:v?()=>q:q,cim:a,materialOverrides:null,isOutline:g,colorLocked:!!a.colorLocked,effects:l,color:p(c,f,"Color",b,m,O),width:p(c,f,"Width",b,u),cap:p(c,f,"CapStyle",b,w),join:p(c,f,"JoinStyle",b,k),miterLimit:r&&p(c,f,"MiterLimit",b,r),referenceWidth:d,zOrder:ea(a.name),dashTemplate:x,scaleDash:z,sampleAlphaOnly:!0})}function Da(a,l,f,h,b,e,g,d){const c=C.numericHash(`${a.url}${JSON.stringify(a.colorSubstitutions)}`).toString(),m=a.primitiveName,u=n.getTintColor(a),w=null!=
a.width?a.width:4,k=ba(a.capStyle),r=ca(a.joinStyle),v=a.miterLimit,[t,q]=J(h,m,l,null,null);h=C.numericHash(JSON.stringify(a)+q).toString();e.push({type:"line",templateHash:h,materialHash:t?()=>c:c,cim:a,materialOverrides:null,isOutline:g,colorLocked:!!a.colorLocked,effects:l,color:p(m,f,"TintColor",b,u,O),width:p(m,f,"Width",b,w),cap:p(m,f,"CapStyle",b,k),join:p(m,f,"JoinStyle",b,r),miterLimit:v&&p(m,f,"MiterLimit",b,v),referenceWidth:d,zOrder:ea(a.name),dashTemplate:null,scaleDash:!1,url:a.url,
sampleAlphaOnly:!1})}function fa(a,l,f,h,b,e){const {markerPlacement:g,type:d}=a;if(!g||"CIMMarkerPlacementInsidePolygon"!==g.type)return!1;if("CIMVectorMarker"===d||"CIMPictureMarker"===d){var c=a.primitiveName;if(c&&([c]=J(h,c,l,null,null),c))return!1;if(c=g.primitiveName)if([c]=J(h,c,l,null,null),c)return!1;if("CIMVectorMarker"===d){if({markerGraphics:c}=a,c)for(var m of c)if({symbol:c}=m,"CIMPolygonSymbol"===c?.type&&c.symbolLayers){({symbolLayers:c}=c);for(var u of c)if("CIMSolidStroke"===u.type)return!1}}else if({animatedSymbolProperties:m}=
a,m)return!1}c=Math.abs(g.stepX);var w=Math.abs(g.stepY);if(0===c||0===w)return!0;const k=["Rotation","OffsetX","OffsetY"];m=h.filter(x=>x.primitiveName!==a.primitiveName||!k.includes(x.propertyName));u="url"in a&&"string"===typeof a.url?a.url:void 0;const [r,v]=J(h,g.primitiveName,l,null,null);h=C.numericHash(JSON.stringify(a)+v).toString();let t=null;if("Random"===g.gridType){var q=ia.px2pt(va.RANDOM_INSIDE_POLYGON_TEXTURE_SIZE);const x=Math.max(Math.floor(q/c),1),z=Math.max(Math.floor(q/w),1);
q=w*z;t=y=>y?y*z:0;c=x*c/q}else g.shiftOddRows?(q=2*w,t=x=>x?2*x:0,c=c/w*.5):(q=w,t=null,c/=w);w=n.getTintColor(a);e.push({type:"fill",templateHash:h,materialHash:r?X(h,f,m,b):h,cim:a,materialOverrides:m,colorLocked:!!a.colorLocked,effects:l,color:p(g.primitiveName,f,"TintColor",b,w,O),height:p(g.primitiveName,f,"StepY",b,q,t),scaleX:c,angle:p(g.primitiveName,f,"GridAngle",b,g.gridAngle),offsetX:p(g.primitiveName,f,"OffsetX",b,n.getValue(g.offsetX)),offsetY:p(g.primitiveName,f,"OffsetY",b,n.getValue(g.offsetY)),
url:u,applyRandomOffset:"Random"===g.gridType,sampleAlphaOnly:!u,hasUnresolvedReplacementColor:!0});return!0}function Ea(a,l,f,h,b,e,g,d,c){function m(B,A){return L.isSome(y)?n.evaluateValueOrFunction(y,B,A):null}const u=a.primitiveName,w=n.getValue(a.size);let k=n.getValue(a.scaleX,1);const r=n.getValue(a.rotation),v=n.getValue(a.offsetX),t=n.getValue(a.offsetY),q=n.getTintColor(a),x=C.numericHash(`${a.url}${JSON.stringify(a.colorSubstitutions)}${JSON.stringify(a.animatedSymbolProperties)}`).toString(),
z=na(a.markerPlacement,h,f,b),y=Ha(a.animatedSymbolProperties,h,f,b),[D,I]=J(h,u,l,z,y);h=C.numericHash(JSON.stringify(a)+I).toString();const F=a.anchorPoint??{x:0,y:0};if("width"in a&&"number"===typeof a.width){const B=a.width;let A=1;e=e.getResource(a.url);L.isSome(e)&&(A=e.width/e.height);k/=w/B*A}g.push({type:"marker",templateHash:h,materialHash:a.animatedSymbolProperties&&!0===a.animatedSymbolProperties.randomizeStartTime?(B,A,E,M)=>{E=wa.getMaterialGroup(M??0);B=m(B,A);return x+`-MATERIALGROUP(${E})`+
`-ASP(${JSON.stringify(B)})`}:D?(B,A)=>{B=m(B,A);return x+`-ASP(${JSON.stringify(B)})`}:x,cim:a,materialOverrides:null,colorLocked:!!a.colorLocked,effects:l,scaleSymbolsProportionally:!1,alignment:d,size:p(u,f,"Size",b,w),scaleX:p(u,f,"ScaleX",b,k),rotation:p(u,f,"Rotation",b,r),offsetX:p(u,f,"OffsetX",b,v),offsetY:p(u,f,"OffsetY",b,t),color:p(u,f,"TintColor",b,q,O),anchorPoint:{x:F.x,y:-F.y},isAbsoluteAnchorPoint:"Relative"!==a.anchorPointUnits,outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,frameHeight:0,
rotateClockwise:!!a.rotateClockwise,referenceSize:c,sizeRatio:1,markerPlacement:z,url:a.url,animatedSymbolProperties:y})}function Ga(a,l,f,h,b,e,g,d,c,m,u){Q.OverrideHelper.findApplicableOverrides(h,e,[]);var w=h.geometry;if("x"in w&&"y"in w){var k=h.symbol,r=n.fromCIMFontDecoration(k),v=n.fromCIMFontStyle(k.fontStyleName),t=sa.getFontFamily(k.fontFamilyName);k.font={family:t,decoration:r,...v};var q=a.frame,x=w.x-.5*(q.xmin+q.xmax),z=w.y-.5*(q.ymin+q.ymax),y=a.size/u;u=a.primitiveName;w=n.getValue(k.height)*
y;q=n.getValue(k.angle);x=n.getValue(a.offsetX)+(n.getValue(k.offsetX)+x)*y;z=n.getValue(a.offsetY)+(n.getValue(k.offsetY)+z)*y;var D=n.fromCIMColor(n.getFillColor(k)),I=n.fromCIMColor(n.getStrokeColor(k)),F=n.getStrokeWidth(k)??0;F||(I=n.fromCIMColor(n.getFillColor(k.haloSymbol)),k.haloSize&&(F=k.haloSize*y));var B=y=null,A=0;if(k.callout&&"CIMBackgroundCallout"===k.callout.type){var E=k.callout;if(E.backgroundSymbol&&(E=E.backgroundSymbol.symbolLayers))for(const H of E)"CIMSolidFill"===H.type?y=
n.fromCIMColor(H.color):"CIMSolidStroke"===H.type&&(B=n.fromCIMColor(H.color),A=n.getValue(H.width))}var [M,S]=J(e,u,l,f,null);e=JSON.stringify(a.effects)+Number(a.colorLocked).toString()+JSON.stringify(a.anchorPoint)+a.anchorPointUnits+JSON.stringify(a.markerPlacement)+a.size.toString();e=C.numericHash(JSON.stringify(h)+e+S).toString();var G=p(h.primitiveName,b,"TextString",g,h.textString??"",n.adjustTextCase,k.textCase);if(null!=G){({fontStyleName:h}=k);var K=t+(h?"-"+h.toLowerCase():"-regular");
"string"===typeof G&&G.includes("[")&&k.fieldMap&&(G=n.createLabelOverrideFunction(k.fieldMap,G,k.textCase));d.push({type:"text",templateHash:e,materialHash:M||"function"===typeof G||G.match(/\[(.*?)\]/)?(H,N,T)=>K+"-"+n.evaluateValueOrFunction(G,H,N,T):K+"-"+C.numericHash(G),cim:k,materialOverrides:null,colorLocked:!!a.colorLocked,effects:l,alignment:c,anchorPoint:{x:a.anchorPoint?a.anchorPoint.x:0,y:a.anchorPoint?a.anchorPoint.y:0},isAbsoluteAnchorPoint:"Relative"!==a.anchorPointUnits,fontName:K,
decoration:r,weight:p(u,b,"Weight",g,v.weight),style:p(u,b,"Size",g,v.style),size:p(u,b,"Size",g,w),angle:p(u,b,"Rotation",g,q),offsetX:p(u,b,"OffsetX",g,x),offsetY:p(u,b,"OffsetY",g,z),horizontalAlignment:n.fromCIMHorizontalAlignment(k.horizontalAlignment),verticalAlignment:n.fromCIMVerticalAlignment(k.verticalAlignment),text:G,color:D,outlineColor:I,outlineSize:F,backgroundColor:y,borderLineColor:B,borderLineWidth:A,referenceSize:m,sizeRatio:1,markerPlacement:f})}}}function Fa(a,l,f,h,b,e,g,d,c,
m,u,w,k,r){var v=b.symbol;const t=v.symbolLayers;if(t)if(r)oa(a,l,f,h,b,g,e,d,c,m,u,w,k);else if(r=t.length,t&&2===t.length&&t[0].enable&&t[1].enable&&"CIMSolidStroke"===t[0].type&&"CIMSolidFill"===t[1].type&&!t[0].effects&&!t[1].effects)Ia(a,l,f,h,b,t,e,g,d,c,u,w,k);else if(v=ja.CIMEffectHelper.applyEffects(v.effects,b.geometry,m.geometryEngine))for(;r--;){var q=t[r];if(q&&!1!==q.enable)switch(q.type){case "CIMSolidFill":case "CIMSolidStroke":var x=ja.CIMEffectHelper.applyEffects(q.effects,v,m.geometryEngine),
z=Z.getExtent(x);if(!z)continue;const I="Relative"!==a.anchorPointUnits,[F,B,A]=Z.getSDFMetrics(z,a.frame,a.size,a.anchorPoint,I);var y="CIMSolidFill"===q.type;x={type:"sdf",geom:x,asFill:y};var D=a.primitiveName;z=n.getValue(a.size)??10;const E=n.getValue(a.rotation),M=n.getValue(a.offsetX),S=n.getValue(a.offsetY),G=q.path,K=q.primitiveName,H=y?n.fromCIMColor(n.getFillColor(q)):n.fromCIMColor(n.getStrokeColor(q)),N=y?{r:0,g:0,b:0,a:0}:n.fromCIMColor(n.getStrokeColor(q)),T=n.getStrokeWidth(q)??0;
if(!y&&!T)break;y=!1;let P="";for(const U of e)if(U.primitiveName===K||U.primitiveName===D)void 0!==U.value?P+=`-${U.primitiveName}-${U.propertyName}-${JSON.stringify(U.value)}`:U.valueExpressionInfo&&(y=!0);if(L.isSome(l)&&"function"===typeof l||L.isSome(f)&&"function"===typeof f)y=!0;D=JSON.stringify({...a,markerGraphics:null});const pa=C.numericHash(JSON.stringify(x)+G).toString();q={type:"marker",templateHash:C.numericHash(JSON.stringify(b)+JSON.stringify(q)+D+P).toString(),materialHash:y?()=>
pa:pa,cim:x,materialOverrides:null,colorLocked:!!a.colorLocked,effects:l,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:u,anchorPoint:{x:B,y:A},isAbsoluteAnchorPoint:I,size:p(a.primitiveName,g,"Size",d,z),rotation:p(a.primitiveName,g,"Rotation",d,E),offsetX:p(a.primitiveName,g,"OffsetX",d,M),offsetY:p(a.primitiveName,g,"OffsetY",d,S),scaleX:1,frameHeight:k,rotateClockwise:!!a.rotateClockwise,referenceSize:w,sizeRatio:F,color:p(K,g,"Color",d,H,O),outlineColor:p(K,g,"Color",d,N,
O),outlineWidth:p(K,g,"Width",d,T),markerPlacement:f,animatedSymbolProperties:h,path:G};c.push(q);break;default:oa(a,l,f,h,b,g,e,d,c,m,u,w,k)}}}function Ia(a,l,f,h,b,e,g,d,c,m,u,w,k){var r=b.geometry;const v=e[0];e=e[1];var t=Z.getExtent(r);if(t){var q="Relative"!==a.anchorPointUnits,[x,z,y]=Z.getSDFMetrics(t,a.frame,a.size,a.anchorPoint,q);r={type:"sdf",geom:r,asFill:!0};var D=a.primitiveName;t=n.getValue(a.size);var I=n.getValue(a.rotation),F=n.getValue(a.offsetX),B=n.getValue(a.offsetY),A=e.path,
E=e.primitiveName,M=v.primitiveName,S=n.fromCIMColor(n.getFillColor(e)),G=n.fromCIMColor(n.getStrokeColor(v)),K=n.getStrokeWidth(v)??0,H=!1,N="";for(const P of g)if(P.primitiveName===E||P.primitiveName===M||P.primitiveName===D)void 0!==P.value?N+=`-${P.primitiveName}-${P.propertyName}-${JSON.stringify(P.value)}`:P.valueExpressionInfo&&(H=!0);L.isSome(f)&&"function"===typeof f&&(H=!0);g=JSON.stringify({...a,markerGraphics:null});var T=C.numericHash(JSON.stringify(r)+A).toString();a={type:"marker",
templateHash:C.numericHash(JSON.stringify(b)+JSON.stringify(e)+JSON.stringify(v)+g+N).toString(),materialHash:H?()=>T:T,cim:r,materialOverrides:null,colorLocked:!!a.colorLocked,effects:l,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:u,anchorPoint:{x:z,y},isAbsoluteAnchorPoint:q,size:p(a.primitiveName,d,"Size",c,t),rotation:p(a.primitiveName,d,"Rotation",c,I),offsetX:p(a.primitiveName,d,"OffsetX",c,F),offsetY:p(a.primitiveName,d,"OffsetY",c,B),scaleX:1,frameHeight:k,rotateClockwise:!!a.rotateClockwise,
referenceSize:w,sizeRatio:x,color:p(E,d,"Color",c,S,O),outlineColor:p(M,d,"Color",c,G,O),outlineWidth:p(M,d,"Width",c,K),markerPlacement:f,path:A,animatedSymbolProperties:h};m.push(a)}}function oa(a,l,f,h,b,e,g,d,c,m,u,w,k){b={type:a.type,enable:!0,name:a.name,colorLocked:a.colorLocked,primitiveName:a.primitiveName,anchorPoint:a.anchorPoint,anchorPointUnits:a.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:a.rotateClockwise,rotation:0,size:a.size,billboardMode3D:a.billboardMode3D,depth3D:a.depth3D,
frame:a.frame,markerGraphics:[b],scaleSymbolsProportionally:a.scaleSymbolsProportionally,respectFrame:a.respectFrame,clippingPath:a.clippingPath};const r=["Rotation","OffsetX","OffsetY"],v=g.filter(F=>F.primitiveName!==a.primitiveName||!r.includes(F.propertyName));var t="";for(var q of g)void 0!==q.value&&(t+=`-${q.primitiveName}-${q.propertyName}-${JSON.stringify(q.value)}`);const [x,z,y]=Q.CIMSymbolHelper.getTextureAnchor(b,m);g=a.primitiveName;m=n.getValue(a.rotation);q=n.getValue(a.offsetX);const D=
n.getValue(a.offsetY);t=C.numericHash(JSON.stringify(b)+t).toString();const I=0<v.length||L.isSome(l)&&"function"===typeof l;l={type:"marker",templateHash:t,materialHash:I?X(t,e,v,d):t,cim:b,materialOverrides:v,colorLocked:!!a.colorLocked,effects:l,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:u,anchorPoint:{x,y:z},isAbsoluteAnchorPoint:!1,size:n.getValue(a.size),rotation:p(g,e,"Rotation",d,m),offsetX:p(g,e,"OffsetX",d,q),offsetY:p(g,e,"OffsetY",d,D),color:{r:255,g:255,b:255,
a:1},outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,scaleX:1,frameHeight:k,rotateClockwise:!!a.rotateClockwise,referenceSize:w,sizeRatio:y/ia.pt2px(a.size),markerPlacement:f,animatedSymbolProperties:h,avoidSDFRasterization:!0};c.push(l)}function ea(a){return a&&0===a.indexOf("Level_")&&(a=parseInt(a.substr(6),10),!isNaN(a))?a:0}function O(a){if(!a||0===a.length)return null;a=(new ra(a)).toRgba();return{r:a[0],g:a[1],b:a[2],a:a[3]}}function p(a,l,f,h,b,e,g){if(null==a)return b;if(a=l[a]){const d=a[f];
if("string"===typeof d||"number"===typeof d||d instanceof Array)return e?e.call(null,d,g):d;if(null!=d&&d instanceof V.ArcadeExpression&&h?.geometryType)return(c,m,u)=>{c=W(d,c,{$view:u},h.geometryType,m);null!==c&&e&&(c=e.call(null,c,g));return null!==c?c:b}}return b}function ha(a){return a?a.charAt(0).toLowerCase()+a.substr(1):a}function ya(a,l,f,h){for(const b of l)if(b.valueExpressionInfo&&h?.geometryType){const e=f[b.primitiveName]&&f[b.primitiveName][b.propertyName];e instanceof V.ArcadeExpression&&
(b.fn=(g,d,c)=>W(e,g,{$view:c},h.geometryType,d))}return(b,e,g)=>{for(var d of l)d.fn&&(d.value=d.fn(b,e,g));b=[];for(let c of a){if(e=c?.primitiveName){g=!1;for(const m of l)m.primitiveName===e&&(d=ha(m.propertyName),null!=m.value&&m.value!==c[d]&&(g||(c=Y.clone(c),g=!0),c[d]=m.value))}b.push(c)}return b}}function na(a,l,f,h){const b=[];Q.OverrideHelper.findApplicableOverrides(a,l,b);if(null==a||0===b.length)return a;for(const e of b)if(e.valueExpressionInfo&&h?.geometryType){const g=f[e.primitiveName]&&
f[e.primitiveName][e.propertyName];g instanceof V.ArcadeExpression&&(e.fn=(d,c,m)=>W(g,d,{$view:m},h.geometryType,c))}return(e,g,d)=>{for(const c of b)c.fn&&(c.value=c.fn(e,g,d));e=Y.clone(a);g=a.primitiveName;for(const c of b)c.primitiveName===g&&(d=ha(c.propertyName),null!=c.value&&c.value!==e[d]&&(e[d]=c.value));return e}}function Ha(a,l,f,h){const b=[];Q.OverrideHelper.findApplicableOverrides(a,l,b);if(null==a||0===b.length)return a;for(const e of b)if(e.valueExpressionInfo&&h?.geometryType){const g=
f[e.primitiveName]&&f[e.primitiveName][e.propertyName];g instanceof V.ArcadeExpression&&(e.fn=(d,c,m)=>W(g,d,{$view:m},h.geometryType,c))}return(e,g,d)=>{for(var c of b)c.fn&&(c.value=c.fn(e,g,d));e=Y.clone(a);g=a.primitiveName;for(const m of b)m.primitiveName===g&&(d=ha(m.propertyName),null!=m.value&&(c=ua.quantizeIfNeeded(m.value,m.propertyName),c!==e[d]&&(e[d]=c)));return e}}function X(a,l,f,h){for(const b of f)if(b.valueExpressionInfo&&h?.geometryType){const e=l[b.primitiveName]&&l[b.primitiveName][b.propertyName];
e instanceof V.ArcadeExpression&&(b.fn=(g,d,c)=>W(e,g,{$view:c},h.geometryType,d))}return(b,e,g)=>{for(const d of f)d.fn&&(d.value=d.fn(b,e,g));return C.numericHash(a+Q.OverrideHelper.buildOverrideKey(f)).toString()}}function J(a,l,f,h,b){let e=!1,g="";for(const d of a)d.primitiveName===l&&(void 0!==d.value?g+=`-${d.primitiveName}-${d.propertyName}-${JSON.stringify(d.value)}`:d.valueExpressionInfo&&(e=!0));L.isSome(f)&&"function"===typeof f&&(e=!0);L.isSome(h)&&"function"===typeof h&&(e=!0);L.isSome(b)&&
"function"===typeof b&&(e=!0);return[e,g]}const ma=ta.getLogger("esri.symbols.cim.cimAnalyzer");aa.analyzeCIMResource=function(a,l){if(!l||0===l.length)return a;a=Y.clone(a);Q.OverrideHelper.applyOverrides(a,l);return a};aa.analyzeCIMSymbol=function(a,l,f,h,b){return da.apply(this,arguments)};Object.defineProperty(aa,Symbol.toStringTag,{value:"Module"})});