// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../core/Error ../../core/Logger ../../core/maybe ../../core/promiseUtils ./actions".split(" "),function(g,l,h,D,y,E,e){function z(a){const {selectedFeature:b,location:c,view:d}=a;return d?"3d"===d.type?b??c??null:a.get("selectedFeature.geometry")||c:null}function n(a){return!!a&&a.isAggregate&&"cluster"===a.sourceLayer?.featureReduction?.type}function F(a,b){return p.apply(this,arguments)}function p(){p=l._asyncToGenerator(function*(a,b){if("3d"!==
b?.type||!a||"esri.Graphic"!==a.declaredClass)return!0;if((b=b.getViewForGraphic(a))&&"whenGraphicBounds"in b){let c;try{c=yield b.whenGraphicBounds(a,{useViewElevation:!0})}catch(d){}return!c||!c.boundingBox||c.boundingBox[0]===c.boundingBox[3]&&c.boundingBox[1]===c.boundingBox[4]&&c.boundingBox[2]===c.boundingBox[5]}return!0});return p.apply(this,arguments)}function A(a){return q.apply(this,arguments)}function q(){q=l._asyncToGenerator(function*(a){const {location:b,selectedFeature:c,view:d,zoomFactor:k}=
a,f=z(a);if(!d||!f)throw a=new h("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:f,view:d}),m.error(a),a;const G=d.scale/k,r=a.selectedFeature?.geometry??b,B=y.isSome(r)&&"point"===r.type&&(yield F(c,d));e.zoomToFeature.active=!0;e.zoomToFeature.disabled=!0;try{yield a.zoomTo({target:{target:f,scale:B?G:void 0}})}catch(I){const H=new h("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:c});m.error(H)}finally{e.zoomToFeature.active=
!1,e.zoomToFeature.disabled=!1,a.zoomToLocation=null,B&&(a.location=r)}});return q.apply(this,arguments)}function C(a){return t.apply(this,arguments)}function t(){t=l._asyncToGenerator(function*(a){const {selectedFeature:b,view:c}=a;if("2d"!==c?.type)throw a=new h("zoomToCluster:invalid-view","View must be 2d MapView.",{view:c}),m.error(a),a;if(!b||!n(b))throw a=new h("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:b}),m.error(a),
a;const [d,k]=yield u(c,b);e.zoomToClusteredFeatures.active=!0;e.zoomToClusteredFeatures.disabled=!0;const {extent:f}=yield d.queryExtent(k);yield a.zoomTo({target:f});e.zoomToClusteredFeatures.active=!1;e.zoomToClusteredFeatures.disabled=!1});return t.apply(this,arguments)}function v(){v=l._asyncToGenerator(function*(a){const {view:b,selectedFeature:c}=a;if(b&&c){var [d,k]=yield u(b,c),{extent:f}=yield d.queryExtent(k);a.selectedClusterBoundaryFeature.geometry=f;b.graphics.add(a.selectedClusterBoundaryFeature)}});
return v.apply(this,arguments)}function w(){w=l._asyncToGenerator(function*(a){const {selectedFeature:b,view:c}=a;if(c&&b){var [d,k]=yield u(c,b);e.browseClusteredFeatures.active=!0;e.browseClusteredFeatures.disabled=!0;({features:a}=yield d.queryFeatures(k));e.browseClusteredFeatures.active=!1;e.browseClusteredFeatures.disabled=!1;c.popup?.open({features:[b].concat(a),featureMenuOpen:!0})}});return w.apply(this,arguments)}function u(a,b){return x.apply(this,arguments)}function x(){x=l._asyncToGenerator(function*(a,
b){a=yield a.whenLayerView(b.sourceLayer);const c=a.createQuery();b=b.getObjectId();c.aggregateIds=null!=b?[b]:[];return[a,c]});return x.apply(this,arguments)}const m=D.getLogger("esri.widgets.Popup.PopupViewModel");g.browseAggregateFeatures=function(a){return w.apply(this,arguments)};g.displayClusterExtent=function(a){return v.apply(this,arguments)};g.getPointFromGeometry=function(a){if(y.isNone(a))return null;switch(a.type){case "point":return a;case "extent":return a.center;case "polygon":return a.centroid;
case "multipoint":case "polyline":return a.extent?.center;default:return null}};g.getSelectedTarget=z;g.isClusterFeature=n;g.removeClusteredFeaturesForBrowsing=function(a){const b=a.features.filter(c=>n(c));b.length&&(a.features=b)};g.triggerAction=a=>{const {event:b,view:c}=a;({action:a}=b);var d=c&&c.popup;if(!a)return Promise.reject(new h("trigger-action:missing-arguments","Event has no action"));if(!d)return Promise.reject(new h("trigger-action:missing-arguments","view.popup is missing"));const {disabled:k,
id:f}=a;if(!f)return Promise.reject(new h("trigger-action:invalid-action","action.id is missing"));if(k)return Promise.reject(new h("trigger-action:invalid-action","Action is disabled"));if(f===e.zoomToFeature.id)return A(d.viewModel).catch(E.throwIfNotAbortError);if(f===e.zoomToClusteredFeatures.id)return C(d.viewModel);if(f===e.browseClusteredFeatures.id)return d.featureMenuOpen=!d.featureMenuOpen,d.viewModel.browseClusterEnabled=!d.viewModel.browseClusterEnabled,Promise.resolve();d.viewModel.browseClusterEnabled=
!1;if(f===e.removeSelectedFeature.id){d.close();({selectedFeature:a}=d);if(!a)return Promise.reject(new h(`trigger-action:${e.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:a}));({sourceLayer:d}=a);d?d.remove(a):c.graphics.remove(a)}return Promise.resolve()};g.zoomToClusterExtent=C;g.zoomToLocation=A;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});