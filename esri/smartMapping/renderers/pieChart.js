// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../Color ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../symbols ../../core/Error ../../core/maybe ../../core/screenUtils ../../intl/messages ../../layers/support/AggregateField ../../layers/support/ExpressionInfo ../../renderers/support/AttributeColorInfo ../heuristics/outline ../heuristics/sizeRange ./size ./support/utils ../statistics/predominantCategories ../statistics/support/utils ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/pieChart ../../symbols/support/cimSymbolUtils ../../symbols/SimpleLineSymbol".split(" "),
function(G,w,p,ra,sa,ta,ua,R,va,wa,xa,ya,za,l,z,U,H,A,B,V,W,X,Y,v,Z,aa,ba,ca,r,I,da,ea){function fa(a){return J.apply(this,arguments)}function J(){J=w._asyncToGenerator(function*(a){if(!(a&&a.layer&&a.view&&a.attributes?.length))throw new l("pie-chart-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(10<a.attributes.length)throw new l("pie-chart-renderer:invalid-parameters","PieChart renderer does not support more than 10 attributes");a.forBinning&&ba.verifyBinningParams(a,
"pie-chart-renderer");const b={...a};b.shape=b.shape||"pie";b.othersCategoryEnabled=null==b.othersCategoryEnabled?!0:b.othersCategoryEnabled;b.includeSizeVariable=a.includeSizeVariable||!1;var d=a.forBinning?r.binningCapableLayerTypes:K;a=r.createLayerAdapter(b.layer,d,a.forBinning);b.layer=a;if(!a)throw new l("pie-chart-renderer:invalid-parameters","'layer' must be one of these types: "+r.getLayerTypeLabels(d).join(", "));d=z.isSome(b.signal)?{signal:b.signal}:null;yield Promise.all([b.view.when(),
a.load(d)]);var c=a.geometryType;d="polygon"===c;c="point"===c||"multipoint"===c||d;b.outlineOptimizationEnabled=d?b.outlineOptimizationEnabled:!1;b.sizeOptimizationEnabled=c?b.sizeOptimizationEnabled:!1;if(!c)throw new l("pie-chart-renderer:not-supported","PieChart renderer is only supported for point and polygon layers");d=[];c=b.attributes;for(var g of c)c=yield ca.getFieldsList({field:g.field,valueExpression:g.valueExpression}),d.push(...c);if(g=v.verifyBasicFieldValidity(a,d.filter(Boolean),
"pie-chart-renderer:invalid-parameters"))throw g;return b});return J.apply(this,arguments)}function ha(a){return L.apply(this,arguments)}function L(){L=w._asyncToGenerator(function*(a){let b=a.pieChartScheme,d=null;var c=null;c=yield v.getBasemapInfo(a.basemap,a.view);d=z.isSome(c.basemapId)?c.basemapId:null;c=z.isSome(c.basemapTheme)?c.basemapTheme:null;if(b)return{scheme:I.cloneScheme(b),basemapId:d,basemapTheme:c};if(a=I.getSchemes({basemap:d,numColors:a.attributes.length,geometryType:a.layer.geometryType,
basemapTheme:c}))b=a.primaryScheme,d=a.basemapId,c=a.basemapTheme;return{scheme:b,basemapId:d,basemapTheme:c}});return L.apply(this,arguments)}function ia(a,b){return M.apply(this,arguments)}function M(){M=w._asyncToGenerator(function*(a,b){const {valueExpression:d,sqlExpression:c,sqlWhere:g}=aa.getSumOfAttributesExpr(a.attributes),k=yield H.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");return Y.createVisualVariables({layer:a.layer,basemap:a.basemap,valueExpression:d,sqlExpression:c,sqlWhere:g,
sizeScheme:b,sizeOptimizationEnabled:a.sizeOptimizationEnabled,legendOptions:{title:k.sumOfCategories},view:a.view,signal:a.signal})});return M.apply(this,arguments)}function N(){N=w._asyncToGenerator(function*(a){const [b,d]=yield Promise.all([fa(a),H.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]);a=yield ha(b);const c=a?.scheme;if(!c)throw new l("pie-chart-renderer:insufficient-info","Unable to find pie-chart scheme");var g=b.layer;const {includeSizeVariable:k,sizeOptimizationEnabled:n,
outlineOptimizationEnabled:t,view:h,signal:u}=b;var e=c.sizeScheme,m=b.attributes,q=m.map(f=>f.field);const [O,x,y,C]=yield Promise.all([1<q.length?Z({layer:g,fields:q,view:h,signal:u}):null,k?ia(b,e):null,!k&&n?X({layer:g,view:h,signal:u}):null,t?W({layer:g,view:h,signal:u}):null]);q=O&&O.predominantCategoryInfos?{uniqueValueInfos:O.predominantCategoryInfos}:{uniqueValueInfos:q.map(f=>({value:f,count:0}))};const ja=v.createColors(c.colors,m.length);m=m.map((f,D)=>({field:f.field,valueExpression:f.valueExpression,
label:f.label,valueExpressionTitle:f.valueExpressionTitle,color:ja[D]}));g=g.geometryType;e="background"in e&&e.background;e=new R({attributes:m,othersCategory:{label:d.other,color:b.othersCategoryEnabled?c.colorForOthersCategory:null,threshold:.04},holePercentage:"donut"===b.shape?.45:0,backgroundFillSymbol:e?v.createSymbol(g,{type:"2d",color:e.color,outline:v.getSymbolOutlineFromScheme(e,g,C?.opacity)}):null,size:U.toPt(c.size),outline:new ea(v.getSymbolOutlineFromScheme(c,"point",C?.opacity)),
legendOptions:b.legendOptions});x&&(n||x.visualVariables.forEach(f=>{"number"===typeof f.minSize&&"number"===typeof f.maxSize&&(f.minSize*=2.5,f.maxSize*=1.8)}),n&&"point"===g&&x.visualVariables.forEach(f=>{f?.minSize&&"object"===typeof f.minSize&&f.minSize?.stops.forEach(D=>{D.size*=1.8})}),e.authoringInfo=x.authoringInfo.clone(),e.visualVariables=x.visualVariables?.map(f=>f.clone()));C?.visualVariables?.length&&(m=C.visualVariables.map(f=>f.clone()),e.visualVariables?e.visualVariables.push(...m):
e.visualVariables=m);y?.minSize&&("point"===g&&y.minSize.stops.forEach(f=>{f.size*=2.5}),"polygon"===g&&y.minSize.stops.forEach(f=>{f.size*=1.8}),e.visualVariables?e.visualVariables.push(y.minSize):e.visualVariables=[y.minSize]);return{renderer:e,pieChartScheme:I.cloneScheme(c),size:x,basemapId:a.basemapId,basemapTheme:a.basemapTheme,statistics:q}});return N.apply(this,arguments)}function ka(a){return P.apply(this,arguments)}function P(){P=w._asyncToGenerator(function*(a){if(!a||!a.layer)throw new l("pie-chart-cluster-renderer:missing-parameters",
"'layer' parameter is required");const b={...a};b.shape=b.shape||"pie";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);a=a.layer;if(!r.getLayerTypes(K).includes(a.type))throw new l("pie-chart-cluster-renderer:invalid-parameters","'layer' must be one of these types: "+r.getLayerTypeLabels(K).join(", "));const d=z.isSome(b.signal)?{signal:b.signal}:null;yield a.load(d);if("point"!==a.geometryType)throw new l("pie-chart-cluster-renderer:invalid-parameters","Cluster renderers are only supported for point layers");
({renderer:a}=a);if(!a)throw new l("pie-chart-cluster-renderer:invalid-parameters","input layer does not have a renderer.");if(!la.includes(a.type))throw new l("pie-chart-cluster-renderer:invalid-parameters",`Cannot create a pie chart renderer for clusters based on a ${a.type} renderer.`);if("valueExpression"in a&&a.valueExpression)throw new l("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer whose renderer contains a valueExpression.");
if("unique-value"===a.type){if(a.field2)throw new l("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a UniqueValueRenderer using more than one field.");if(10<a.uniqueValueInfos.length)throw new l("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer cannot be created from a UniqueValueRenderer with more than 10 unique value infos.");}if("class-breaks"===a.type){if(2>a.classBreakInfos.length)throw new l("pie-chart-cluster-renderer:invalid-parameters",
"Cannot create a pie chart renderer for clusters from a layer renderer with a continuous color or size gradient.");if(10<a.classBreakInfos.length)throw new l("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with more than 10 class break infos.");if("class-breaks-size"===a?.authoringInfo?.type)throw new l("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with breaks varied by size instead of color.");
}return b});return P.apply(this,arguments)}function Q(){Q=w._asyncToGenerator(function*(a){a=yield ka(a);const {layer:b,shape:d,defaultSymbolEnabled:c,legendOptions:g}=a;var {renderer:k}=b,n=(yield H.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")).other;a=[];"unique-value"===k.type&&(a=ma({renderer:k,defaultSymbolEnabled:c,defaultLabelBackup:n}));"class-breaks"===k.type&&(a=na({renderer:k,defaultSymbolEnabled:c,defaultLabelBackup:n}));k=[];n=[];for(var t of a){const {field:h,color:u}=t;
k.push(h);n.push(new V({color:u,field:h.name,label:h.alias}))}t=new R({attributes:n,legendOptions:g,holePercentage:"donut"===d?.45:0,outline:null,size:18,othersCategory:null});return{fields:k,renderer:t}});return Q.apply(this,arguments)}function ma(a){const {renderer:b,defaultSymbolEnabled:d,defaultLabelBackup:c}=a,{field:g,uniqueValueInfos:k,defaultSymbol:n,defaultLabel:t}=b;var h=(a=n&&d)?9:10;const u=v.createColors(S,h);h=k.slice(0,h).map((e,m)=>{const q=e.label;m=u[m];return{field:new A({name:E(e.value?.toString()),
alias:q,onStatisticExpression:new B({title:`Field definition - ${q}`,expression:`Number(Text($feature["${g}"]) == "${e.value+""}")`,returnType:"number"}),statisticType:"sum"}),color:F(e.symbol,m)}});a&&(a=t||c,h.push({field:new A({name:E("cluster_default"),alias:a,onStatisticExpression:new B({title:`Field definition - ${a}`,expression:oa(g,k),returnType:"number"}),statisticType:"sum"}),color:F(n,T)}));return h}function na(a){const {renderer:b,defaultSymbolEnabled:d,defaultLabelBackup:c}=a,{field:g,
classBreakInfos:k,defaultSymbol:n,defaultLabel:t}=b;var h=(a=n&&d)?9:10;const u=v.createColors(S,h);h=k.slice(0,h).map((e,m)=>{const q=e.label||`${e.minValue} - ${e.maxValue}`;m=u[m];return{field:new A({name:E(q),alias:q,onStatisticExpression:new B({title:`Field definition - ${q}`,expression:`Number($feature["${g}"] >= ${e.minValue} && $feature["${g}"] < ${e.maxValue})`,returnType:"number"}),statisticType:"sum"}),color:F(e.symbol,m)}});a&&(a=t||c,h.push({field:new A({name:E("cluster_default"),alias:a,
onStatisticExpression:new B({title:`Field definition - ${a}`,expression:pa(g,k),returnType:"number"}),statisticType:"sum"}),color:F(n,T)}));return h}function E(a){return"SUM_"+(a+"").replace(/[^a-zA-Z0-9_]/g,"_")}function F(a,b){return"simple-marker"===a.type&&a.color?a.color.clone():"cim"===a.type&&(a=da.getCIMSymbolColor(a))?a.clone():b?b.clone():qa.clone()}function oa(a,b){return`Number(!(${b.map(d=>`(Text($feature["${a}"]) == "${d.value+""}")`).join(" || ")}))`}function pa(a,b){return`Number(!(${b.map(d=>
`($feature["${a}"] >= ${d.minValue} && $feature["${a}"] < ${d.maxValue})`).join(" || ")}))`}const K=[r.LayerType.CSVLayer,r.LayerType.FeatureLayer,r.LayerType.OGCFeatureLayer,r.LayerType.GeoJSONLayer,r.LayerType.WFSLayer],la=["unique-value","class-breaks"],qa=new p("#aaaaaa"),T=new p("#5c5c5c"),S=[new p("#e60049"),new p("#0bb4ff"),new p("#50e991"),new p("#e6d800"),new p("#9b19f5"),new p("#ffa300"),new p("#dc0ab4"),new p("#b3d4ff"),new p("#00bfa0"),new p("#f0cccc")];G.createRenderer=function(a){return N.apply(this,
arguments)};G.createRendererForClustering=function(a){return Q.apply(this,arguments)};Object.defineProperty(G,Symbol.toStringTag,{value:"Module"})});