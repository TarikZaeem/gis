// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/ellipsoidUtils ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,m,k,v,w,n,F,G,x,e,l,y,z,A,p,q,B,C,D){d.Fog=function(r){function f(a){var b=r.call(this,a)||this;b._passParameters=new A.FogHazePassParameters;b._vao=C.createQuadVAO(a.context.renderContext.rctx,B.Pos2Tex);b._technique=a.context.techniqueRepository.acquire(p.FogTechnique,new p.FogHazeTechniqueConfiguration);a=y.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=a.radius;b._atmosphereRadius=a.radius+z.atmosphereHeight;return b}m._inheritsLoose(f,r);var h=f.prototype;h.destroy=
function(){this._technique.release();this._vao.dispose()};h.render=function(a,b){this._update(a,b);if(!(0>=this._passParameters.fogAmount)){var c=this._technique;if(c.compiled){var g=a.offscreenRenderingHelper;g.renderDepthDetached(()=>{this._passParameters.depthTexture=g.depthTexture;const E=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderFog(E,a)})}else this.context.requestRender()}};h._renderFog=function(a,b){b=b.rctx;b.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);
b.drawArrays(D.PrimitiveType.TRIANGLE_STRIP,0,4)};h._update=function(a,b){var c=a.bindParameters.camera;e.normalize(t,c.eye);a=Math.max(0,e.dot(t,a.bindParameters.lighting.mainLight.direction));const g=b.color;e.scale(u,g,.1);e.lerp(this._passParameters.fogColor,u,g,a);c=e.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.fogAmount=(1-w.smoothstep(.95*q.weatherHeightLimit,1*q.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;
this._passParameters.fogStrength=b.strength};f.isSupported=function(a){return a.capabilities.depthTexture};m._createClass(f,[{key:"strength",get:function(){return this._passParameters.fogStrength},set:function(a){this._passParameters.fogStrength=a}}]);return f}(v);k.__decorate([n.property({constructOnly:!0})],d.Fog.prototype,"context",void 0);k.__decorate([n.property({constructOnly:!0})],d.Fog.prototype,"view",void 0);d.Fog=k.__decorate([x.subclass("esri.views.3d.environment.Fog")],d.Fog);const t=
l.create(),u=l.create();d.FogParameters=function(){this.color=l.create();this.amount=this.strength=0};Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});