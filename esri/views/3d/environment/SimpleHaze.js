// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/ellipsoidUtils ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./SimpleHazeTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,m,k,u,v,n,H,I,w,e,l,x,y,z,A,B,p,C,D,E){d.SimpleHaze=function(q){function f(a){var b=q.call(this,a)||this;b._passParameters=new z.FogHazePassParameters;b._vao=D.createQuadVAO(a.context.renderContext.rctx,C.Pos2Tex);var c=x.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=c.radius;b._atmosphereRadius=c.radius+y.atmosphereHeight;c=new A.FogHazeTechniqueConfiguration;c.haze=!0;b._hazeTechnique=a.context.techniqueRepository.acquire(B.SimpleHazeTechnique,c);return b}m._inheritsLoose(f,
q);var h=f.prototype;h.destroy=function(){this._hazeTechnique.release();this._vao.dispose()};h.render=function(a,b){if(0!==this.view.basemapTerrain.baseOpacity&&(this._update(a,b),!(0>=this._passParameters.hazeAmount))){var c=this._hazeTechnique;if(c.compiled){var g=a.offscreenRenderingHelper;g.renderDepthDetached(()=>{this._passParameters.depthTexture=g.depthTexture;const F=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderSimpleHaze(F,a)})}else this.context.requestRender()}};
h._renderSimpleHaze=function(a,b){b=b.rctx;b.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);b.drawArrays(E.PrimitiveType.TRIANGLE_STRIP,0,4)};h._update=function(a,b){var c=a.bindParameters.camera;e.normalize(r,c.eye);a=Math.max(0,e.dot(r,a.bindParameters.lighting.mainLight.direction));const g=G;e.scale(t,g,0);e.lerp(this._passParameters.hazeColor,t,g,a);c=e.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.hazeAmount=
(1-v.smoothstep(.7*p.weatherHeightLimit,1*p.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;this._passParameters.fogStrength=b.strength};f.isSupported=function(a){return a.capabilities.depthTexture};m._createClass(f,[{key:"strength",get:function(){return this._passParameters.hazeStrength},set:function(a){this._passParameters.hazeStrength=a}}]);return f}(u);k.__decorate([n.property({constructOnly:!0})],d.SimpleHaze.prototype,"context",void 0);k.__decorate([n.property({constructOnly:!0})],
d.SimpleHaze.prototype,"view",void 0);d.SimpleHaze=k.__decorate([w.subclass("esri.views.3d.environment.SimpleHaze")],d.SimpleHaze);const G=l.fromValues(.24,.44,.8),r=l.create(),t=l.create();d.HazeParameters=function(){this.amount=this.strength=0};Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});