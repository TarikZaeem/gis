// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/maybe ../../../../core/PooledArray ../../../../core/screenUtils ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../ViewingMode ../../support/geometryUtils/ray ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtils".split(" "),function(D,m,K,z,A,L,w,M,v,N,F,y,r,E){function G(n){B&&
B.viewingMode===n||(B=y.newIntersector(n));return B}let Q=function(){function n(b,a,c){this.viewingMode=b;this._forEachLayer=a;this._view=c;this._externalIntersectionHandlers=new K;this._tolerance=y.DEFAULT_TOLERANCE;this._tmpRay=M.create();this._tmpRegion=w.create();this._validateHUDIntersector=y.newIntersector(this.viewingMode);this._validateHUDIntersector.options.hud=!1}var g=n.prototype;g.intersectScreen=function(b,a,c){return this.intersectRay(this._getPickRay(b,this._tmpRay),G(this.viewingMode),
a,c)};g.intersectScreenFreePointFallback=function(b,a,c){return this.intersectRayFreePointFallback(this._getPickRay(b,this._tmpRay),a,c)};g.intersectRayFreePointFallback=function(b,a,c){return this.intersectRay(b,G(this.viewingMode),a,c)||this._intersectRayFreePointLocal(b,a)};g.intersectRay=function(b,a,c,f){a.options.selectionMode=!1;a.options.store=r.StoreResults.MIN;this.computeIntersection(b,a,f);return a.results.min?a.results.min.getIntersectionPoint(c):!1};g.getCenterRayWithSubpixelOffset=
function(b,a,c=.5,f=.5){b.getRenderCenter(x,c,f);x[0]+=.0466;x[1]-=.0123;return F.fromRenderAtEye(b,x,a)};g.intersectIntersectorScreen=function(b,a,c){this.computeIntersection(this._getPickRay(b,this._tmpRay),a,c)};g.intersectToolIntersectorScreen=function(b,a,c){b=this._getPickRay(b,this._tmpRay);this.intersectToolIntersectorRay(b,a,c)};g.intersectToolIntersectorRay=function(b,a,c){a.options.selectionMode=!0;this.computeIntersection(b,a,c);const f=a.results.min;this._view.basemapTerrain&&this._view.basemapTerrain.opaque||
E.isValidIntersectorResult(f)&&f.intersector!==r.IntersectorType.TERRAIN||(a.options.selectionMode=!1,this.computeIntersection(b,a,c))};g.setTolerance=function(b=y.DEFAULT_TOLERANCE){this._tolerance=b};g.addIntersectionHandler=function(b){this._externalIntersectionHandlers.push(b);this._externalIntersectionHandlers.sort((a,c)=>a.type===r.IntersectorType.TERRAIN?1:c.type===r.IntersectorType.TERRAIN?-1:0)};g.removeIntersectionHandler=function(b){null!=this._externalIntersectionHandlers.removeUnordered(b)&&
this._externalIntersectionHandlers.sort((a,c)=>a.type===r.IntersectorType.TERRAIN?1:c.type===r.IntersectorType.TERRAIN?-1:0)};g._getPickRay=function(b,a){return F.fromScreen(this._view.state.camera,b,a)};g._intersectRayFreePointLocal=function(b,a){if(this.viewingMode!==N.ViewingMode.Local||m.isNone(b))return!1;A.add(a,b.origin,A.normalize(v.sv3d.get(),b.direction));return!1};g.intersectElevationFromScreen=function(b,a,c=0,f=null){return this._intersectElevation(this._getPickRay(b,this._tmpRay),a,
c,f)};g._intersectElevation=function(b,a,c=0,f=null){if(m.isNone(b))return null;var e=m.isSome(a)?a.mode:"absolute-height",l=m.isSome(a)?m.unwrapOr(a.offset,0):0,p="on-the-ground"!==e?l+c:0;a=p/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===e)return this._view.renderCoordsHelper.intersectInfiniteManifold(b,p,C)?(c=this._view.computeMapPointFromVec3d(C),c.z??(c.z=0),c.z-=l,c):null;l=this._view.state.camera;const q=z.castRenderScreenPointArray3(v.sv3d.get());l.projectToRenderScreen(b.origin,
q);p=new H(null,this._forEachLayer);const t=this._view.slicePlane,u=m.isSome(t)?E.sliceFilterPredicate(t):null,h=y.newIntersector(this.viewingMode);h.options.store=r.StoreResults.MIN;h.options.verticalOffset=a;a=b.origin;b=A.add(v.sv3d.get(),a,b.direction);h.reset(a,b,l);h.point=q;const k=m.isSome(f)?"type"in f&&"graphics"===f.type?d=>d.metadata?.layerUid!==f.uid:d=>d.metadata?.graphicUid!==f.uid:null;switch(e){case "relative-to-scene":h.intersect(p.layers,q,this._tolerance,null,d=>(m.isNone(k)||
k(d))&&!!d.metadata?.isElevationSource);this._externalIntersectionHandlers.forAll(d=>{d.type!==r.IntersectorType.I3S&&d.type!==r.IntersectorType.TERRAIN||d.intersect(h,d.slicePlaneEnabled?u:null,h.rayBegin,h.rayEnd,q)});break;case "on-the-ground":case "relative-to-ground":this._externalIntersectionHandlers.forAll(d=>{d.isGround&&d.intersect(h,d.slicePlaneEnabled?u:null,h.rayBegin,h.rayEnd,q)})}return h.results.min.getIntersectionPoint(C)?(e=this._view.computeMapPointFromVec3d(C),e.z=c,e):null};g.computeIntersection=
function(b,a,c){if(!m.isNone(b)){var f=this._view.state.camera,e=z.castRenderScreenPointArray3(v.sv3d.get());f.projectToRenderScreen(b.origin,e);var l=new H(c,this._forEachLayer);a.options.selectOpaqueTerrainOnly=!c||!("include"in c||"exclude"in c);var p=b.origin,q=A.add(v.sv3d.get(),b.origin,b.direction);a.reset(p,q,f);a.intersect(l.layers,e,this._tolerance);b=this._view.slicePlane;var t=m.isSome(b)?E.sliceFilterPredicate(b):null;a.intersect(l.sliceableLayers,e,this._tolerance,t);var u=c&&(c.requiresGroundFeedback||
c.enableDraped);this._externalIntersectionHandlers.forAll(h=>{var k=h.layerUid;const d=Array.isArray(k);k=d?k:[k];d&&(a.options.filteredLayerUids=[]);let I=!1;for(const J of k)l.filterLayerUid(J)?I=!0:d&&a.options.filteredLayerUids.push(J);a.options.isFiltered=!I;(h.isGround&&u||!a.options.isFiltered)&&h.intersect(a,h.slicePlaneEnabled?t:null,p,q,e)});b=v.sv3d.get();f=this._view.basemapTerrain;if(c&&c.enableDraped&&m.isSome(f.spatialReference)&&a.results.ground.getIntersectionPoint(b)){c=f.overlayManager.renderer;
const h=this._view.renderCoordsHelper.spatialReference,k=v.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(b,k,f.spatialReference);k[2]=m.unwrapOr(this._view.elevationProvider?.getElevation(b[0],b[1],b[2],h,"ground"),0);c.intersect(a,k,a.results.ground,d=>l.filterRenderGeometry(d))}a.sortResults();this._processHUDResults(a)}};g._processHUDResults=function(b){var a=b.results.hud;w.copy(this._tmpRegion,w.NEGATIVE_INFINITY);const c=this._view.state.camera,f=[],e=this._tmpRegion;var l=k=>{const d=
new O(k);c.projectToRenderScreen(k.target.center,d.screenPoint);d.screenPoint[0]=Math.floor(d.screenPoint[0]);d.screenPoint[1]=Math.floor(d.screenPoint[1]);f.push(d);w.expandPointInPlace(e,d.screenPoint)};b.sortResults(a.all);m.isSome(a.min.dist)&&l(a.min);for(var p of a.all)a.min.target.object!==p.target.object&&a.max.target.object!==p.target.object&&l(p);m.isSome(a.max.dist)&&a.max.target.object!==a.min.target.object&&l(a.max);if(f.length){e[0]===e[2]&&(e[2]+=1);e[1]===e[3]&&(e[3]+=1);a=c.fullWidth;
l=c.fullHeight;var q=Math.max(0,e[0]-1),t=Math.max(0,e[1]-1);p=Math.min(w.width(e)+2,a-q);var u=Math.min(w.height(e)+2,l-t),h=new Uint8Array(p*u*4);this._view._stage.renderer.readHUDVisibility(q,t,p,u,h);q=!0;t=m.isNone(b.results.max.dist);u=0;for(const k of f)for(const d of P)if(h[4*(Math.min(k.screenPoint[0]+d[0],a)-e[0]+(Math.min(k.screenPoint[1]+d[1],l)-e[1])*p)]){q&&(b.results.min.copy(k.result),q=!1);t&&b.results.max.copy(k.result);b.options.store===r.StoreResults.ALL&&b.results.all.splice(u++,
0,k.result);break}}};return n}();const P=(()=>{const n=[];for(let g=-1;1>=g;g++)for(let b=-1;1>=b;b++)n.push([b+1,g+1]);return n})();let O=function(n){this.result=n;this.screenPoint=z.createRenderScreenPointArray3()},B,H=function(){function n(b,a){this.layers=[];this.sliceableLayers=[];this.include=b?.include;this.exclude=b?.exclude;a(c=>{c.pickable&&this.filterLayerUid(c.apiLayerUid)&&(c.sliceable?this.sliceableLayers:this.layers).push(c)})}var g=n.prototype;g.filterLayerUid=function(b){const {include:a,
exclude:c}=this;return m.isNone(b)?null==a&&null==c:(null==a||a.has(b))&&(null==c||!c.has(b))};g.filterRenderGeometry=function(b){return this.filterLayerUid(b.layerUid)};return n}();const C=L.create(),x=z.createRenderScreenPointArray3();D.SceneIntersectionHelper=Q;D.isIntersectionHandler=function(n){return"object"===typeof n&&"intersect"in n};Object.defineProperty(D,Symbol.toStringTag,{value:"Module"})});