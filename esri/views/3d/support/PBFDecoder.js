// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../Graphic ../../../core/maybe ../../../core/typedArrayUtil ../../../core/workers/WorkerHandle ../../../geometry/SpatialReference ../../../layers/support/Field".split(" "),function(n,p,u,v,q,w,r,x){function y(b){switch(b.type){case "polyline":b.paths.reduce((c,a)=>c+a.length,0)<q.NATIVE_ARRAY_MAX_SIZE&&(b.paths=b.hasZ||b.hasM?b.paths.map(c=>c.map(a=>[a[0],a[1],a[2]])):b.paths.map(c=>c.map(a=>[a[0],a[1]])));break;case "polygon":b.rings.reduce((c,
a)=>c+a.length,0)<q.NATIVE_ARRAY_MAX_SIZE&&(b.rings=b.hasZ||b.hasM?b.rings.map(c=>c.map(a=>[a[0],a[1],a[2]])):b.rings.map(c=>c.map(a=>[a[0],a[1]])))}}let C=function(){function b(a){this._controller=a;this._handle=new z(f=>a.schedule(f))}var c=b.prototype;c.destroy=function(){this._handle.destroy()};c.invoke=function(a,f){var t=this;if(!a.buffer||0===a.buffer.byteLength)return Promise.resolve(null);a.options.sourceSpatialReference&&a.options.sourceSpatialReference instanceof r&&(a.options={...a.options,
sourceSpatialReference:a.options.sourceSpatialReference.toJSON()});return this._handle.invoke(a,f).then(d=>{let g=0,h=0;const l=function(){var m=p._asyncToGenerator(function*(k){d.spatialReference=r.fromJSON(d.spatialReference);if(d.fields)for(;g<d.fields.length;)if(d.fields[g]=x.fromJSON(d.fields[g]),g++,k.madeProgress())return t._controller.reschedule(e=>l(e));const A=d.spatialReference;for(;h<d.features.length;){const e=d.features[h];++h;e.uid=u.generateUID();if(v.isSome(e.geometry)&&(e.geometry.spatialReference=
A,y(e.geometry),k.madeProgress()))return t._controller.reschedule(B=>l(B))}return d});return function(k){return m.apply(this,arguments)}}();return this._controller.schedule(m=>l(m))})};return b}(),z=function(b){function c(a){return b.call(this,"PBFDecoderWorker","_parseFeatureQuery",{_parseFeatureQuery:f=>[f.buffer]},a)||this}p._inheritsLoose(c,b);return c}(w.WorkerHandle);n.PBFDecoder=C;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});