// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/asyncUtils ../../../../core/has ../../../../core/lang ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/urlUtils ./enums ./I3SBinaryReader ./I3SMaterialUtil".split(" "),function(C,r,D,E,v,y,z,w,A,x){return function(){function t(b,a,d,c,f,e){this._streamDataController=a;this._logger=d;this._defaultGeometrySchema=c;this._requiredAttributes=f;this._options=e;this._logLayer=b;this._layerUrl=b.parsedUrl.path;this._geometryDefinitions=
b.geometryDefinitions;if(b.materialDefinitions){const g=b.textureSetDefinitions;this._materialAndTextures=b.materialDefinitions.map(h=>x.getMaterialAndTextures(g,h))}}var k=t.prototype;k._load=function(b,a,d){return this._streamDataController.request(b,a,d)};k._loadAttribute=function(b,a,d){return this._load(`${this._layerUrl}/nodes/${b.resources.attributes}/attributes/${a.key}/0`,"binary",d).then(c=>A.readBinaryAttribute(a,c))};k.loadAttributes=function(b,a,d){return y.eachAlways(a.map(c=>this._loadAttribute(b,
c.attributeStorageInfo,d))).then(c=>{const f={};for(let e=0;e<a.length;++e){const g=c[e].value;if(g)f[a[e].name]=g;else{if(y.isAbortError(c[e].error))throw c[e].error;this._logger.error("#loadAttributes",this._logLayer,`Failed to load attributeData for '${a[e].name}' on node '${b.id}'`,c[e].error)}}return f})};k.loadNodeData=function(){var b=C._asyncToGenerator(function*(a,d){var c=null!=this._requiredAttributes&&a.resources.attributes?r.result(this.loadAttributes(a,this._requiredAttributes,d)):null;
var f=this._geometryDefinitions;var e={bufferDefinition:null,bufferIndex:0};var g=a.resources.geometryDefinition;if(!(null==f||null==g||0>g)&&(f=0<=g?f[g].geometryBuffers:null,null!=f))for(g=0;g<f.length;g++){var h=f[g];if(null!=h.compressedAttributes){if("draco"===h.compressedAttributes.encoding&&!D("disable-feature:i3s-draco")){e.bufferIndex=g;e.bufferDefinition=h;break}}else e.bufferIndex=g,e.bufferDefinition=f[g]}const {bufferDefinition:p,bufferIndex:u}=e;g=(h=!!a.resources.geometry)?r.result(this._loadGeometry(a.resources.geometry,
u,d)):null;f=a.resources.hasSharedResource?yield this._loadShared(a,d):null;e=a.resources.materialDefinition;e=this._materialAndTextures&&null!=e&&0<=e?this._materialAndTextures[e]:null!=f?x.getMaterialAndTexturesFromShared(f):null;var l=e?.material;e=e?.textures??[];const F=`${a.id}`,B=!h&&this._options.loadFeatureData;h=B?yield this._loadFeatureData(F,d):null;if(B)a:{if(h)for(m of h.featureData)if(l=m.geometries,null!=l)for(var q of l){var m={featureIds:[m.id],featureDataPosition:m.position,geometries:[q]};
break a}m=null}else m={featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:l}}],featureDataPosition:[0,0,0]};if(v.isNone(m))if(h){q=[];for(n of h.featureData)null!=n.position&&q.push({featureIds:[n.id],featureDataPosition:n.position,geometries:[]});var n=q}else n=null;else n=null;q=0<e.length?r.result(this.loadTextures(a,e,d)):null;d=a=null;g&&(a=r.assertResult(yield g),(d=this._defaultGeometrySchema)&&f&&f.materialDefinitions&&(g=Object.keys(f.materialDefinitions)[0],!f.materialDefinitions[g].params.vertexRegions&&
d.vertexAttributes.region&&(d=E.clone(d),delete d.vertexAttributes.region)),d=A.createGeometryDescriptor(p,d));f=q?r.assertResult(yield q):null;c=(c=c?r.assertResult(yield c):{})?{attributeData:c,loadedAttributes:this._requiredAttributes}:null;if(v.isSome(m))return{geometryData:m,attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:e,textureData:f};if(v.isSome(n))return{pointData:n,attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:e,textureData:f};throw Error();
});return function(a,d){return b.apply(this,arguments)}}();t._addAbsoluteHrefTexture=function(b,a){b=b.textureDefinitions;if(null!=b)for(const d of Object.keys(b))for(const c of b[d].images)Array.isArray(c.href)?c.hrefConcat=c.href.map(f=>z.makeAbsolute(f,a)):c.hrefConcat=z.makeAbsolute(c.href,a)};t._fixTextureEncodings=function(b){b=b.textureDefinitions;if(null!=b)for(const d in b){const c=b[d];if(Array.isArray(c.encoding))for(var a=0;a<c.encoding.length;a++){const f=c.encoding[a];"data:"===f.substring(0,
5)&&(c.encoding[a]=f.substring(5))}else a=c.encoding,"data:"===a.substring(0,5)&&(c.encoding=a.substring(5))}};k._loadShared=function(b,a){const d=`${this._layerUrl}/nodes/${b.resources.geometry}/shared`;return this._load(d,"json",a).then(c=>{t._fixTextureEncodings(c);t._addAbsoluteHrefTexture(c,d);return c})};k._loadTexture=function(b,a,d,c,f,e){let g=!1;return f===w.TextureEncoding.DDS_S3TC||f===w.TextureEncoding.KTX2||f===w.TextureEncoding.Basis?this._load(b,"binary",e).then(h=>({id:a,usage:d,
data:h,encoding:f,downsampled:g})):this._load(b,"image",e).then(h=>{var p=h;if(c&&4096<=h.width*h.height){p=Math.ceil(h.width/2);const u=Math.ceil(h.height/2),l=document.createElement("canvas");l.width=p;l.height=u;l.getContext("2d").drawImage(h,0,0,p,u);p=l;g=!0}return{id:a,usage:d,data:p,encoding:f,downsampled:g}})};k.loadTextures=function(b,a,d){const c=!!this._options.uncompressedTextureDownsamplingEnabled,f=this._options.textureUsageMask;return Promise.all(a.map(e=>{if(0===(e.usage&f))return null;
const g=x.selectEncoding(e.encodings,this._options.textureEncodings);return null==g?(this._logger.error("#loadTextures",this._logLayer,`No known encoding for texture found on node ${b.id}`),Promise.reject()):this._loadTexture(`${this._layerUrl}/nodes/${b.resources.texture||b.id}/textures/${g.name}`,e.id,e.usage,c,g.encoding,d)}))};k._loadFeatureData=function(b,a){return this._load(`${this._layerUrl}/nodes/${b}/features/0`,"json",a)};k._loadGeometry=function(b,a,d){return this._load(`${this._layerUrl}/nodes/${b}/geometries/${a}`,
"binary",d)};return t}()});