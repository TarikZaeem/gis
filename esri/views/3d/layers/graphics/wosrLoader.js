// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../request ../../../../core/asyncUtils ../../../../core/byteSizeEstimations ../../../../core/Error ../../../../core/Logger ../../../../core/maybe ../../../../core/NestedMap ../../../../core/promiseUtils ../../../../core/Version ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingBox ../../../../support/requestImageUtils ../../webgl-engine/lib/Attribute ../../webgl-engine/lib/basicInterfaces ../../webgl-engine/lib/Geometry ../../webgl-engine/lib/Texture ../../webgl-engine/materials/DefaultMaterial ../../../webgl/enums".split(" "),
function(x,y,S,J,T,U,V,v,W,K,L,M,B,X,Y,t,Z,aa,ba,N){function C(){C=y._asyncToGenerator(function*(a,b){a=yield ca(a,b);b=yield O(a.textureDefinitions??{},b);let d=0;for(const l in b)if(b.hasOwnProperty(l)){const m=b[l];d+=m?.image?m.image.width*m.image.height*4:0}return{resource:a,textures:b,size:d+T.estimateNestedObjectSize(a)}});return C.apply(this,arguments)}function ca(a,b){return D.apply(this,arguments)}function D(){D=y._asyncToGenerator(function*(a,b){const d=v.isSome(b)&&b.streamDataRequester;
if(d)return da(a,d,b);a=yield J.result(S(a,v.unwrap(b)));if(!0===a.ok)return a.value.data;K.throwIfAbortError(a.error);P(a.error)});return D.apply(this,arguments)}function da(a,b,d){return E.apply(this,arguments)}function E(){E=y._asyncToGenerator(function*(a,b,d){a=yield J.result(b.request(a,"json",d));if(!0===a.ok)return a.value;K.throwIfAbortError(a.error);P(a.error.details.url)});return E.apply(this,arguments)}function P(a){throw new U("",`Request for object resource failed: ${a}`);}function ea(a){const b=
B.empty();a.forEach(d=>{d=d.boundingInfo;v.isSome(d)&&(B.expandWithVec3(b,d.bbMin),B.expandWithVec3(b,d.bbMax))});return b}function O(a,b){return F.apply(this,arguments)}function F(){F=y._asyncToGenerator(function*(a,b){const d=[];for(const r in a){var l=a[r],m=l.images[0].data;if(!m){n.warn("Externally referenced texture data is not yet supported");continue}m=l.encoding+";base64,"+m;const u="/textureDefinitions/"+r,w="rgba"===l.channels?l.alphaChannelUsage||"transparency":"none",z={noUnpackFlip:!0,
wrap:{s:N.TextureWrapMode.REPEAT,t:N.TextureWrapMode.REPEAT},preMultiplyAlpha:Q(w)!==t.AlphaDiscardMode.Opaque};l=v.isSome(b)&&b.disableTextures?Promise.resolve(null):X.requestImage(m,b);d.push(l.then(G=>({refId:u,image:G,params:z,alphaChannelUsage:w})))}a=yield Promise.all(d);b={};for(const r of a)b[r.refId]=r;return b});return F.apply(this,arguments)}function Q(a){switch(a){case "mask":return t.AlphaDiscardMode.Mask;case "maskAndTransparency":return t.AlphaDiscardMode.MaskBlend;case "none":return t.AlphaDiscardMode.Opaque;
case "transparency":return t.AlphaDiscardMode.Blend;default:return t.AlphaDiscardMode.Blend}}const n=V.getLogger("esri.views.3d.layers.graphics.objectResourceUtils"),fa=new L.Version(1,2,"wosr");x.createTextureResources=O;x.load=function(a,b){return C.apply(this,arguments)};x.processLoadResult=function(a,b){const d=[],l=[],m=[],r=new W.NestedMap,u=a.resource;var w=L.Version.parse(u.version||"1.0","wosr");fa.validate(w);w=u.model.name;const z=u.model.geometries,G=u.materialDefinitions??{};a=a.textures;
let R=0;const H=new Map;for(let I=0;I<z.length;I++){var f=z[I],h=f,c=h.params,p=c.topology,e=!0;c.vertexAttributes||(n.warn("Geometry must specify vertex attributes"),e=!1);switch(c.topology){case "PerAttributeArray":break;case "Indexed":case null:case void 0:p=c.faces;if(!p)n.warn("Indexed geometries must specify faces"),e=!1;else if(c.vertexAttributes)for(const k in c.vertexAttributes)(c=p[k])&&c.values?(null!=c.valueType&&"UInt32"!==c.valueType&&(n.warn(`Unsupported indexed geometry indices type '${c.valueType}', only UInt32 is currently supported`),
e=!1),null!=c.valuesPerElement&&1!==c.valuesPerElement&&(n.warn(`Unsupported indexed geometry values per element '${c.valuesPerElement}', only 1 is currently supported`),e=!1)):(n.warn(`Indexed geometry does not specify face indices for '${k}' attribute`),e=!1);break;default:n.warn(`Unsupported topology '${p}'`),e=!1}h.params.material||(n.warn("Geometry requires material"),e=!1);h=h.params.vertexAttributes;for(const k in h)h[k].values||(n.warn("Geometries with externally defined attributes are not yet supported"),
e=!1);if(e){e=f.params;p=e.material;c=e.texture;h=f.params.vertexAttributes;e=[];for(const k in h){var q=h[k];e.push([k,new Y.Attribute(q.values,q.valuesPerElement,!0)])}h=[];if("PerAttributeArray"!==f.params.topology){f=f.params.faces;for(const k in f)h.push([k,f[k].values])}f=c;if((c=a&&a[f])&&!H.has(f)){const {image:k,params:ha}=c;q=new aa.Texture(k,ha);l.push(q);H.set(f,q)}q=(q=H.get(f))?q.id:void 0;var g=r.get(p,f);if(v.isNone(g)){g=p.substring(p.lastIndexOf("/")+1);g=G[g].params;1===g.transparency&&
(g.transparency=0);var A=c&&c.alphaChannelUsage;A=0<g.transparency||"transparency"===A||"maskAndTransparency"===A;const k=c?Q(c.alphaChannelUsage):void 0;c={ambient:M.fromArray(g.diffuse),diffuse:M.fromArray(g.diffuse),opacity:1-(g.transparency||0),transparent:A,textureAlphaMode:k,textureAlphaCutoff:.33,textureId:q,initTextureTransparent:!0,doubleSided:!0,cullFace:t.CullFaceOptions.None,colorMixMode:g.externalColorMixMode||"tint",textureAlphaPremultiplied:c?!!c.params.preMultiplyAlpha:!1};v.isSome(b)&&
b.materialParamsMixin&&Object.assign(c,b.materialParamsMixin);g=new ba.DefaultMaterial(c);r.set(p,f,g)}m.push(g);e=new Z.Geometry(g,e,h);R+=h.position?h.position.length:0;d.push(e)}}return{engineResources:[{name:w,stageResources:{textures:l,materials:m,geometries:d},pivotOffset:u.model.pivotOffset,numberOfVertices:R,lodThreshold:null}],referenceBoundingBox:ea(d)}};Object.defineProperty(x,Symbol.toStringTag,{value:"Module"})});