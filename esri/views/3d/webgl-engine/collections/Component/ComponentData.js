// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","./IndexRange/ComponentRangeRunLengthEncoded"],function(l,e,m){function n(g,f,a){const b=[],c=[];let h=a.length,k=a.length;f.forEachComponent(d=>{0<g[d]?(h!==d-1&&(b.length&&b.push(a[h+1]-b[b.length-1]),b.push(a[d])),h=d):(k!==d-1&&(c.length&&c.push(a[k+1]-c[c.length-1]),c.push(a[d])),k=d);return!0});b.length&&b.push(a[h+1]-b[b.length-1]);c.length&&c.push(a[k+1]-c[c.length-1]);return{highlightRanges:b,defaultRanges:c}}
return function(){function g(a,b){this.cachedDefaultRanges=this.cachedHighlightRanges=this.cachedGeometryRanges=this.verticalOffsets=this.highlightCounts=this.pickability=null;this.offsets=b.slice();b=this.count;this.visibility=new m.ComponentRangeRunLengthEncoded(b);this.materialDataBuffer=a.getBuffer(b);this.materialDataIndices=new Uint16Array(b);for(a=0;a<b;a++)this.materialDataIndices[a]=this.materialDataBuffer.acquireIndex()}var f=g.prototype;f.destroy=function(){for(let a=0;a<this.count;a++)this.materialDataBuffer.releaseIndex(this.materialDataIndices[a])};
f.highlightsDirty=function(){this.cachedDefaultRanges=this.cachedHighlightRanges=null};f.visibilityDirty=function(){this.cachedGeometryRanges=null;this.highlightsDirty()};f._updateCachedHighlightRanges=function(){if((e.isNone(this.cachedHighlightRanges)||e.isNone(this.cachedDefaultRanges))&&e.isSome(this.highlightCounts)){const {highlightRanges:a,defaultRanges:b}=n(this.highlightCounts,this.visibility,this.offsets);this.cachedHighlightRanges=a;this.cachedDefaultRanges=b}};l._createClass(g,[{key:"count",
get:function(){return this.offsets.length-1}},{key:"geometryRanges",get:function(){e.isNone(this.cachedGeometryRanges)&&(this.cachedGeometryRanges=this.visibility.computeOffsetRanges(this.offsets));return this.cachedGeometryRanges}},{key:"highlightRanges",get:function(){if(e.isNone(this.highlightCounts))return null;this._updateCachedHighlightRanges();return this.cachedHighlightRanges}},{key:"defaultShadowMapRanges",get:function(){if(e.isNone(this.highlightCounts))return this.geometryRanges;this._updateCachedHighlightRanges();
return this.cachedDefaultRanges}}]);return g}()});