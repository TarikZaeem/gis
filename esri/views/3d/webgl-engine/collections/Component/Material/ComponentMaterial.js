// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../../chunks/tslib.es6 ../../../../../../core/maybe ../../../../../../chunks/mat3 ../../../../../../chunks/mat3f32 ../../../../../../chunks/vec3 ../../../../../../chunks/vec3f32 ../../../../../../chunks/vec4 ../../../../../../chunks/vec4f32 ../../../../../../chunks/vec4f64 ../../../../layers/support/symbolColorUtils ../../../../support/debugFlags ../../../../terrain/interfaces ./ComponentTechnique ./ComponentTechniqueConfiguration ./shader/ComponentData.glsl ../../../../../../chunks/ComponentShader.glsl ./shader/VertexDiscardByOpacity.glsl ../../../core/material/MaterialBase ../../../core/renderPasses/AllRenderPasses ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderLibrary/attributes/NormalAttribute.glsl ../../../core/shaderLibrary/shading/Normals.glsl ../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../../../core/shaderLibrary/util/AlphaCutoff ../../../core/shaderLibrary/util/EllipsoidMode ../../../core/util/TwoVectorPosition ../../../lib/basicInterfaces ../../../lib/TransparencyPassType".split(" "),
function(g,t,d,m,G,M,r,H,I,N,O,J,P,D,Q,u,K,R,w,c,x,y,E,L,B,S,T,U,C,V){let l=function(e){function q(h,n){var a=e.call(this)||this;a.toMapSpace=n;a.baseColor=N.fromValues(1,1,1,1);a.usePBR=!1;a.hasParametersFromSource=!1;a.mrrFactors=H.fromValues(1,1,.5);a.emissiveFactor=H.fromValues(0,0,0);a.baseColorTexture=null;a.metallicRoughnessTexture=null;a.emissionTexture=null;a.occlusionTexture=null;a.normalTexture=null;a.objectOpacity=1;a.commonMaterialParameters=new z;a.componentParameters=new A;a.textureAlphaCutoff=
S.defaultMaskAlphaCutoff;a.alphaDiscardMode=C.AlphaDiscardMode.Opaque;a.isIntegratedMesh=!1;a.polygonOffsetEnabled=!1;a.ellipsoidMode=T.EllipsoidMode.Earth;a.hasOccludees=!1;a._techniqueConfiguration=new u.ComponentTechniqueConfiguration;n=new U.TwoVectorPosition(h.position);const f=M.clone(h.rotationScale);G.invert(f,f);a.transformNormalGlobalFromModel=G.transpose(f,f);a.transformWorldFromModelTL=n.low;a.transformWorldFromModelTH=n.high;a.transformWorldFromModelRS=h.rotationScale;return a}t._inheritsLoose(q,
e);var k=q.prototype;k.dispose=function(){this._technique=m.releaseMaybe(this._technique);this.normalTexture=this.occlusionTexture=this.emissionTexture=this.metallicRoughnessTexture=this.baseColorTexture=null};k.prepareTechnique=function(h,n,a,f){const b=this._techniqueConfiguration;b.hasVertexColors=f.colors;b.hasNormals=f.normals;b.textureCoordinateType=f.textureCoordinates;b.hasMetallicRoughnessTexture=m.isSome(this.metallicRoughnessTexture);b.hasEmissionTexture=m.isSome(this.emissionTexture);
b.hasOcclusionTexture=m.isSome(this.occlusionTexture);b.hasNormalTexture=m.isSome(this.normalTexture);b.transparencyPassType=n.identifier===x.RenderPassIdentifier.Material&&null!=a.transparencyPassType?a.transparencyPassType:V.TransparencyPassType.NONE;b.hasMultipassTerrain=n.identifier===x.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.enabled:!1;b.cullAboveGround=n.identifier===x.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.cullAboveGround:
!1;b.ellipsoidMode=this.ellipsoidMode;b.componentData=this.componentParameters.type;b.cullFace=this.commonMaterialParameters.cullFace;b.doubleSidedMode=this.commonMaterialParameters.doubleSided?L.NormalsDoubleSidedMode.View:L.NormalsDoubleSidedMode.None;b.hasBaseColorTexture=m.isSome(this.baseColorTexture);f=this._computeWhichMaterialPass();b.blendingEnabled=f===p.Transparent||f===p.OpaqueAndTransparent;b.alphaDiscardMode=this.alphaDiscardMode;b.integratedMeshMode=this.isIntegratedMesh?(0===a.overlays.length?
0:m.isSome(a.overlays[D.OverlayIndex.INNER].getColorTextureNoRasterImage()))?R.getOverlayNormalTexture(a)?u.IntegratedMeshMode.ColorOverlayWithWater:u.IntegratedMeshMode.ColorOverlay:u.IntegratedMeshMode.NoOverlay:u.IntegratedMeshMode.None;b.useLegacyTerrainShading=this.isIntegratedMesh&&P.TERRAIN_USE_LEGACY_SHADING;b.hasPolygonOffset=this.polygonOffsetEnabled;f=this.hasParametersFromSource&&m.isNone(this.baseColorTexture);b.pbrMode=b.integratedMeshMode===u.IntegratedMeshMode.ColorOverlayWithWater?
B.PBRMode.WaterOnIntegratedMesh:this.usePBR?f?B.PBRMode.Schematic:B.PBRMode.Normal:B.PBRMode.Disabled;b.normalType=b.integratedMeshMode===u.IntegratedMeshMode.None?b.hasNormals?E.NormalAttributeType.CompressedAttribute:E.NormalAttributeType.ScreenDerivative:E.NormalAttributeType.Ground;b.hasSlicePlane=m.isSome(a.slicePlane)&&this.commonMaterialParameters.hasSlicePlane;if(n.identifier===x.RenderPassIdentifier.ShadowMap)b.output=y.ShaderOutput.Shadow,b.vertexDiscardMode=w.VertexDiscardMode.None;else if(n.identifier===
x.RenderPassIdentifier.Highlight)b.output=y.ShaderOutput.Highlight,b.vertexDiscardMode=w.VertexDiscardMode.None;else{this._computeWhichMaterialPass()===p.OpaqueAndTransparent?b.vertexDiscardMode=n.transparent?w.VertexDiscardMode.Opaque:w.VertexDiscardMode.Transparent:b.vertexDiscardMode=w.VertexDiscardMode.None;b.output=n.output;b.receiveAmbientOcclusion=!1;b.receiveShadows=!1;switch(n.output){case y.ShaderOutput.Color:b.receiveAmbientOcclusion=a.ssaoHelper.active;b.hasOccludees=a.hasOccludees;b.receiveShadows=
a.shadowMap.ready;b.hasScreenSpaceReflections=a.ssr.enabled;b.hasCloudsReflections=m.isSome(a.cloudsFade.data);break;case y.ShaderOutput.Alpha:b.hasOccludees=a.hasOccludees;break;case y.ShaderOutput.ObjectAndLayerIdColor:b.objectAndLayerIdColor=!0}b.snowCover=this.hasSnowCover(a)}this._technique=h.releaseAndAcquire(Q.ComponentTechnique,b,this._technique);this._setClean();return this._technique};k.hasSnowCover=function(h){return m.isSome(h.weather)&&h.weatherVisible&&"snowy"===h.weather.type&&"enabled"===
h.weather.snowCover};k.submit=function(h,n,a){if(0!==this.objectOpacity){var f=a.renderable.geometry,b=a.components;a=a.renderable.meta.cameraDepthSquared;var v=b.geometryRanges,F=b.highlightRanges;b=b.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case p.Opaque:h.materialOpaque.submitDraw(this,f,v,a);break;case p.Transparent:h.materialTransparent.submitDraw(this,f,v,a);break;case p.OpaqueAndTransparent:h.materialOpaque.submitDraw(this,f,v,a);h.materialTransparent.submitDraw(this,
f,v,a);break;case p.IntegratedMesh:h.materialIntegratedMesh.submitDraw(this,f,v,a),(0===n.overlays.length?0:m.isSome(n.overlays[D.OverlayIndex.INNER].getValidTexture(D.RenderTargetType.Highlight)))&&h.highlightIntegratedMesh.submitDraw(this,f,v,a)}(n=this.componentParameters.castShadows!==g.ComponentParameterSummary.None)&&h.shadowMap.submitDraw(this,f,v,a);m.isSome(F)&&(h.highlight.submitDraw(this,f,F,a),n&&h.highlightShadowMap.submitDraw(this,f,F,a));n&&m.isSome(b)&&h.defaultShadowMap.submitDraw(this,
f,b,a)}};k._computeWhichMaterialPass=function(){return this.isIntegratedMesh?p.IntegratedMesh:1>this.objectOpacity?p.Transparent:this.componentParameters.opaqueOverride===g.ComponentParameterSummary.All?p.Opaque:1>this.baseColor[3]||this.alphaDiscardMode===C.AlphaDiscardMode.Blend||this.alphaDiscardMode===C.AlphaDiscardMode.MaskBlend?p.Transparent:this.componentParameters.transparent===g.ComponentParameterSummary.None?p.Opaque:this.componentParameters.transparent===g.ComponentParameterSummary.All?
p.Transparent:p.OpaqueAndTransparent};t._createClass(q,[{key:"texture",get:function(){return m.isSome(this.baseColorTexture)?this.baseColorTexture.glTexture:null}},{key:"textureMetallicRoughness",get:function(){return m.isSome(this.metallicRoughnessTexture)?this.metallicRoughnessTexture.glTexture:null}},{key:"textureEmissive",get:function(){return m.isSome(this.emissionTexture)?this.emissionTexture.glTexture:null}},{key:"textureOcclusion",get:function(){return m.isSome(this.occlusionTexture)?this.occlusionTexture.glTexture:
null}},{key:"textureNormal",get:function(){return m.isSome(this.normalTexture)?this.normalTexture.glTexture:null}}]);return q}(c.MaterialBase);d.__decorate([c.parameter({vectorOps:I.vec4})],l.prototype,"baseColor",void 0);d.__decorate([c.parameter()],l.prototype,"usePBR",void 0);d.__decorate([c.parameter()],l.prototype,"hasParametersFromSource",void 0);d.__decorate([c.parameter({vectorOps:r.vec3})],l.prototype,"mrrFactors",void 0);d.__decorate([c.parameter({vectorOps:r.vec3})],l.prototype,"emissiveFactor",
void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"baseColorTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"metallicRoughnessTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"emissionTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"occlusionTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"normalTexture",void 0);d.__decorate([c.parameter()],l.prototype,"objectOpacity",void 0);d.__decorate([c.parameterBlock()],
l.prototype,"commonMaterialParameters",void 0);d.__decorate([c.parameterBlock()],l.prototype,"componentParameters",void 0);d.__decorate([c.parameter()],l.prototype,"textureAlphaCutoff",void 0);d.__decorate([c.parameter()],l.prototype,"alphaDiscardMode",void 0);d.__decorate([c.parameter()],l.prototype,"isIntegratedMesh",void 0);d.__decorate([c.parameter()],l.prototype,"polygonOffsetEnabled",void 0);d.__decorate([c.parameter()],l.prototype,"ellipsoidMode",void 0);d.__decorate([c.parameter()],l.prototype,
"hasOccludees",void 0);var p;(function(e){e[e.Opaque=0]="Opaque";e[e.Transparent=1]="Transparent";e[e.OpaqueAndTransparent=2]="OpaqueAndTransparent";e[e.IntegratedMesh=3]="IntegratedMesh"})(p||(p={}));let z=function(e){function q(){var k=e.apply(this,arguments)||this;k.doubleSided=!1;k.cullFace=C.CullFaceOptions.Back;k.hasSlicePlane=!0;return k}t._inheritsLoose(q,e);return q}(c.MaterialParameterBlock);d.__decorate([c.parameter()],z.prototype,"doubleSided",void 0);d.__decorate([c.parameter()],z.prototype,
"cullFace",void 0);d.__decorate([c.parameter()],z.prototype,"hasSlicePlane",void 0);let A=function(e){function q(){var k=e.apply(this,arguments)||this;k.externalColor=O.fromValues(1,1,1,1);k.externalColorMixMode=J.ColorMixModeEnum.Multiply;k.castShadows=g.ComponentParameterSummary.All;return k}t._inheritsLoose(q,e);t._createClass(q,[{key:"transparent",get:function(){return 1>this.externalColor[3]?g.ComponentParameterSummary.All:g.ComponentParameterSummary.None}},{key:"opaqueOverride",get:function(){return this.externalColorMixMode===
J.ColorMixModeEnum.Replace&&1===this.externalColor[3]?g.ComponentParameterSummary.All:g.ComponentParameterSummary.None}},{key:"visible",get:function(){return 0<this.externalColor[3]?g.ComponentParameterSummary.All:g.ComponentParameterSummary.None}},{key:"type",get:function(){return K.ComponentDataType.Uniform}}]);return q}(c.MaterialParameterBlock);d.__decorate([c.parameter({vectorOps:I.vec4})],A.prototype,"externalColor",void 0);d.__decorate([c.parameter()],A.prototype,"externalColorMixMode",void 0);
d.__decorate([c.parameter()],A.prototype,"castShadows",void 0);g.ComponentParameterSummary=void 0;(function(e){e[e.All=0]="All";e[e.Some=1]="Some";e[e.None=2]="None"})(g.ComponentParameterSummary||(g.ComponentParameterSummary={}));r=function(e){function q(){var k=e.apply(this,arguments)||this;k.texture=null;k.transparent=g.ComponentParameterSummary.None;k.opaqueOverride=g.ComponentParameterSummary.None;k.castShadows=g.ComponentParameterSummary.None;return k}t._inheritsLoose(q,e);t._createClass(q,
[{key:"type",get:function(){return K.ComponentDataType.Varying}}]);return q}(c.MaterialParameterBlock);d.__decorate([c.parameter()],r.prototype,"texture",void 0);d.__decorate([c.parameter()],r.prototype,"transparent",void 0);d.__decorate([c.parameter()],r.prototype,"opaqueOverride",void 0);d.__decorate([c.parameter()],r.prototype,"castShadows",void 0);g.CommonMaterialParameters=z;g.ComponentMaterial=l;g.ComponentParametersUniform=A;g.ComponentParametersVarying=r;Object.defineProperty(g,Symbol.toStringTag,
{value:"Module"})});