// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/has ../../../../core/mathUtils ../../../../core/maybe ../../../../chunks/mat3 ../../../../chunks/mat3f64 ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../core/libs/gl-matrix-2/types/mat4 ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/buffer/BufferView ../../support/debugFlags ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../core/shaderLibrary/hud/HUD.glsl ../lib/GLTextureMaterial ../lib/Material ../lib/RenderSlot ../lib/screenSizePerspectiveUtils ../lib/Util ../lib/VertexAttribute ./ScaleInfo ./internal/bufferWriterUtils ./internal/MaterialUtil ../../../../chunks/HUDMaterial.glsl ../shaders/HUDMaterialTechnique ../shaders/HUDMaterialTechniqueConfiguration".split(" "),
function(M,N,ja,ka,D,U,V,la,W,ma,X,k,H,O,na,oa,pa,qa,ra,E,Y,Z,aa,J,L,sa,h,ta,F,ua,ba,va,wa){function xa(r,q,c,a=ya){ma.copy(a,r.anchorPosition);a[0]*=-q[0];a[1]*=-q[1];a[0]+=r.screenOffset[0]*c;a[1]+=r.screenOffset[1]*c;return a}function ca(r,q,c,a,b,d,e,f){q=q-b-(0<f[0]?a[0]*f[0]:0);let m=q+a[0]+2*b;c=c-b-(0<f[1]?a[1]*f[1]:0);b=c+a[1]+2*b;f=e.distanceFieldBoundingBox;e.textureIsSignedDistanceField&&D.isSome(f)&&(q+=a[0]*f[0],c+=a[1]*f[1],m-=a[0]*(1-f[2]),b-=a[1]*(1-f[3]),q-=d,m+=d,c-=d,b+=d);return r[0]>
q&&r[0]<m&&r[1]>c&&r[1]<b}let Ea=function(r){function q(a){a=r.call(this,a,new da)||this;a._configuration=new wa.HUDMaterialTechniqueConfiguration;return a}N._inheritsLoose(q,r);var c=q.prototype;c.getConfiguration=function(a,b){this._configuration.output=a;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset;this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective;this._configuration.screenCenterOffsetUnitsEnabled=
"screen"===this.parameters.centerOffsetUnits?Y.HUDSpace.Screen:Y.HUDSpace.World;this._configuration.hasPolygonOffset=this.parameters.polygonOffset;this._configuration.isDraped=this.parameters.isDraped;this._configuration.occlusionTestEnabled=this.parameters.occlusionTest;this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled;this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField;this._configuration.vvSize=!!this.parameters.vvSizeEnabled;
this._configuration.vvColor=!!this.parameters.vvColorEnabled;this._configuration.occlusionPass=b.slot===J.RenderSlot.OCCLUSION_PIXELS&&this.parameters.occlusionTest&&(a===E.ShaderOutput.Color||a===E.ShaderOutput.Alpha);a===E.ShaderOutput.Color&&(this._configuration.debugDrawLabelBorder=!!qa.LABELS_SHOW_BORDER);a===E.ShaderOutput.Highlight&&(this._configuration.binaryHighlightOcclusionEnabled=this.parameters.binaryHighlightOcclusion);this._configuration.depthEnabled=this.parameters.depthEnabled;this._configuration.transparencyPassType=
b.transparencyPassType;this._configuration.hasMultipassGeometry=b.multipassGeometry.enabled;this._configuration.hasMultipassTerrain=b.multipassTerrain.enabled;this._configuration.cullAboveGround=b.multipassTerrain.cullAboveGround;return this._configuration};c.intersect=function(a,b,d,e,f,m){if(d.options.selectionMode&&d.options.hud&&a.visible){e=this.parameters;var l=f=1;U.fromMat4(P,b);if(D.isSome(a.shaderTransformer)){l=a.shaderTransformer(ea);f=l[0];l=l[5];var g=P,p=g[0],t=g[1],x=g[2],u=g[3],A=
g[4],B=g[5],z=g[6],n=g[7],C=g[8],I=1/Math.sqrt(p*p+t*t+x*x);const Q=1/Math.sqrt(u*u+A*A+B*B),R=1/Math.sqrt(z*z+n*n+C*C);g[0]=p*I;g[1]=t*I;g[2]=x*I;g[3]=u*Q;g[4]=A*Q;g[5]=B*Q;g[6]=z*R;g[7]=n*R;g[8]=C*R}g=a.vertexAttributes.get(h.VertexAttribute.POSITION);p=a.vertexAttributes.get(h.VertexAttribute.SIZE);t=a.vertexAttributes.get(h.VertexAttribute.NORMAL);a=a.vertexAttributes.get(h.VertexAttribute.AUXPOS1);sa.assert(3<=g.size);x=d.point;u=d.camera;A=ba.calculateAnchorPosForRendering(e);f*=u.pixelRatio;
l*=u.pixelRatio;B="screen"===this.parameters.centerOffsetUnits;for(z=0;z<g.data.length/g.size;z++)n=z*g.size,k.set(w,g.data[n],g.data[n+1],g.data[n+2]),k.transformMat4(w,w,b),n=z*p.size,G[0]=p.data[n]*f,G[1]=p.data[n+1]*l,k.transformMat4(w,w,u.viewMatrix),n=z*a.size,k.set(y,a.data[n+0],a.data[n+1],a.data[n+2]),B||(w[0]+=y[0],w[1]+=y[1],0!==y[2]&&(n=y[2],k.normalize(y,w),k.subtract(w,w,k.scale(y,y,n)))),n=z*t.size,k.set(K,t.data[n],t.data[n+1],t.data[n+2]),this._normalAndViewAngle(K,P,u,S),this._applyVerticalOffsetTransformationView(w,
S,u,T),u.applyProjection(w,v),-1<v[0]&&(v[0]=Math.floor(v[0]),v[1]=Math.floor(v[1]),B&&(y[0]||y[1])&&(v[0]+=y[0],0!==y[1]&&(v[1]+=L.applyScaleFactor(y[1],T.factorAlignment)),u.unapplyProjection(v,w)),v[0]+=this.parameters.screenOffset[0],v[1]+=this.parameters.screenOffset[1],L.applyPrecomputedScaleFactor(G,T.factor,G),n=1*u.pixelRatio,C=0,e.textureIsSignedDistanceField&&(C=e.outlineSize*u.pixelRatio/2),x&&ca(x,v[0],v[1],G,n,C,e,A)&&(C=d.ray,k.transformMat4(fa,w,la.invert(za,u.viewMatrix)),v[0]=x[0],
v[1]=x[1],u.unprojectFromRenderScreen(v,w)&&(n=H.create(),k.copy(n,C.direction),I=1/k.length(n),k.scale(n,n,I),C=k.distance(C.origin,w)*I,m(C,n,-1,!0,1,fa))))}};c.intersectDraped=function(a,b,d,e,f,m){b=a.vertexAttributes.get(h.VertexAttribute.POSITION);d=a.vertexAttributes.get(h.VertexAttribute.SIZE);const l=this.parameters,g=ba.calculateAnchorPosForRendering(l);let p=1;var t=1;D.isSome(a.shaderTransformer)&&(t=a.shaderTransformer(ea),p=t[0],t=t[5]);p*=a.screenToWorldRatio;t*=a.screenToWorldRatio;
const x=2*a.screenToWorldRatio;for(let B=0;B<b.data.length/b.size;B++){var u=B*b.size;const z=b.data[u];u=b.data[u+1];var A=B*d.size;G[0]=d.data[A]*p;G[1]=d.data[A+1]*t;A=0;l.textureIsSignedDistanceField&&(A=l.outlineSize*a.screenToWorldRatio/2);ca(e,z,u,G,x,A,l,g)&&f(m.dist,m.normal,-1,!1)}};c.createBufferWriter=function(){return new Aa(this)};c._normalAndViewAngle=function(a,b,d,e){na.isMat4(b)&&(b=U.fromMat4(Ba,b));k.transformMat3(e.normal,a,b);k.transformMat4(e.normal,e.normal,d.viewInverseTransposeMatrix);
e.cosAngle=k.dot(ha,Ca);return e};c._updateScaleInfo=function(a,b,d){const e=this.parameters;D.isSome(e.screenSizePerspective)?L.precomputeScaleFactor(d,b,e.screenSizePerspective,a.factor):(a.factor.scale=1,a.factor.factor=0,a.factor.minPixelSize=0,a.factor.paddingPixels=0);D.isSome(e.screenSizePerspectiveAlignment)?L.precomputeScaleFactor(d,b,e.screenSizePerspectiveAlignment,a.factorAlignment):(a.factorAlignment.factor=a.factor.factor,a.factorAlignment.scale=a.factor.scale,a.factorAlignment.minPixelSize=
a.factor.minPixelSize,a.factorAlignment.paddingPixels=a.factor.paddingPixels)};c.applyShaderOffsetsView=function(a,b,d,e,f,m,l){b=this._normalAndViewAngle(b,d,f,S);this._applyVerticalGroundOffsetView(a,b,f,l);this._applyVerticalOffsetTransformationView(l,b,f,m);this._applyPolygonOffsetView(l,b,e[3],f,l);this._applyCenterOffsetView(l,e,l);return l};c.applyShaderOffsetsNDC=function(a,b,d,e,f){this._applyCenterOffsetNDC(a,b,d,e);D.isSome(f)&&k.copy(f,e);this._applyPolygonOffsetNDC(e,b,d,e);return e};
c._applyPolygonOffsetView=function(a,b,d,e,f){var m=e.aboveGround?1:-1;d=Math.sign(d);0===d&&(d=m);m*=d;if(0>=this.parameters.shaderPolygonOffset)return k.copy(f,a);b=ka.clamp(Math.abs(b.cosAngle),.01,1);e=1-Math.sqrt(1-b*b)/b/e.viewport[2];0<m?k.scale(f,a,e):k.scale(f,a,1/e);return f};c._applyVerticalGroundOffsetView=function(a,b,d,e){const f=k.length(a),m=d.aboveGround?1:-1;d=.5*d.computeRenderPixelSizeAtDist(f);b=k.scale(w,b.normal,m*d);k.add(e,a,b);return e};c._applyVerticalOffsetTransformationView=
function(a,b,d,e){const f=this.parameters;if(!f.verticalOffset||!f.verticalOffset.screenLength){if(f.screenSizePerspective||f.screenSizePerspectiveAlignment){var m=k.length(a);this._updateScaleInfo(e,m,b.cosAngle)}else e.factor.scale=1,e.factorAlignment.scale=1;return a}m=k.length(a);const l=D.unwrapOr(f.screenSizePerspectiveAlignment,f.screenSizePerspective);d=ua.verticalOffsetAtDistance(d,m,f.verticalOffset,b.cosAngle,l);this._updateScaleInfo(e,m,b.cosAngle);k.scale(b.normal,b.normal,d);return k.add(a,
a,b.normal)};c._applyCenterOffsetView=function(a,b,d){const e="screen"!==this.parameters.centerOffsetUnits;d!==a&&k.copy(d,a);e&&(d[0]+=b[0],d[1]+=b[1],b[2]&&(k.normalize(K,d),k.add(d,d,k.scale(K,K,b[2]))));return d};c._applyCenterOffsetNDC=function(a,b,d,e){const f="screen"!==this.parameters.centerOffsetUnits;e!==a&&k.copy(e,a);f||(e[0]+=b[0]/d.fullWidth*2,e[1]+=b[1]/d.fullHeight*2);return e};c._applyPolygonOffsetNDC=function(a,b,d,e){const f=this.parameters.shaderPolygonOffset;a!==e&&k.copy(e,a);
f&&(a=d.aboveGround?1:-1,e[2]-=(a*Math.sign(b[3])||a)*f);return e};c.requiresSlot=function(a,b){if(b===E.ShaderOutput.Color||b===E.ShaderOutput.Alpha||b===E.ShaderOutput.Highlight||b===E.ShaderOutput.ObjectAndLayerIdColor){if(a===J.RenderSlot.DRAPED_MATERIAL)return!0;const {drawInSecondSlot:d,occlusionTest:e}=this.parameters;return a===(d?J.RenderSlot.LABEL_MATERIAL:J.RenderSlot.HUD_MATERIAL)||e&&a===J.RenderSlot.OCCLUSION_PIXELS}return!1};c.createGLMaterial=function(a){return new Da(a)};c.calculateRelativeScreenBounds=
function(a,b,d=oa.create()){xa(this.parameters,a,b,d);d[2]=d[0]+a[0];d[3]=d[1]+a[1];return d};return q}(aa.Material),Da=function(r){function q(a){return r.call(this,{...a,...a.material.parameters})||this}N._inheritsLoose(q,r);var c=q.prototype;c.selectProgram=function(a){return this.ensureTechnique(va.HUDMaterialTechnique,a)};c.beginSlot=function(a){this.updateTexture(this._material.parameters.textureId);this._material.setParameters(this.textureBindParameters);return this.selectProgram(a)};return q}(Z.GLTextureMaterial);
const T=new ta.ScaleInfo,ya=X.create(),w=H.create(),K=H.create(),v=O.create(),ha=H.create(),fa=H.create(),P=V.create(),Ba=V.create(),za=W.create(),y=H.create(),S={normal:ha,cosAngle:0},ea=W.create(),G=[0,0],Ca=H.fromValues(0,0,1);let da=function(r){function q(){var c=r.apply(this,arguments)||this;c.renderOccluded=aa.RenderOccludedFlag.Occlude;c.color=O.fromValues(1,1,1,1);c.texCoordScale=[1,1];c.polygonOffset=!1;c.anchorPosition=X.fromValues(.5,.5);c.screenOffset=[0,0];c.shaderPolygonOffset=1E-5;
c.textureIsSignedDistanceField=!1;c.outlineColor=O.fromValues(1,1,1,1);c.outlineSize=0;c.vvSizeEnabled=!1;c.vvSizeMinSize=[1,1,1];c.vvSizeMaxSize=[100,100,100];c.vvSizeOffset=[0,0,0];c.vvSizeFactor=[1,1,1];c.vvColorEnabled=!1;c.vvColorValues=[0,0,0,0,0,0,0,0];c.vvColorColors=[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0];c.hasSlicePlane=!1;c.pixelSnappingEnabled=!0;c.occlusionTest=!0;c.binaryHighlightOcclusion=!0;c.centerOffsetUnits="world";c.drawInSecondSlot=!1;c.depthEnabled=
!0;c.isDraped=!1;return c}N._inheritsLoose(q,r);return q}(Z.GLTextureMaterialBindParameters);const ia=ra.newLayout().vec3f(h.VertexAttribute.POSITION).vec3f(h.VertexAttribute.NORMAL).vec2f(h.VertexAttribute.UV0).vec4u8(h.VertexAttribute.COLOR).vec2f(h.VertexAttribute.SIZE).vec4f(h.VertexAttribute.AUXPOS1).vec4f(h.VertexAttribute.AUXPOS2),Fa=ia.clone().vec4u8(h.VertexAttribute.OBJECTANDLAYERIDCOLOR);let Aa=function(){function r(c){this._material=c;this.vertexBufferLayout=ja("enable-feature:objectAndLayerId-rendering")?
Fa:ia}var q=r.prototype;q.allocate=function(c){return this.vertexBufferLayout.createBuffer(c)};q.elementCount=function(c){return 6*c.indices.get(h.VertexAttribute.POSITION).length};q.write=function(c,a,b,d,e){F.writePosition(b.indices.get(h.VertexAttribute.POSITION),b.vertexAttributes.get(h.VertexAttribute.POSITION).data,c,d.position,e,6);F.writeNormal(b.indices.get(h.VertexAttribute.NORMAL),b.vertexAttributes.get(h.VertexAttribute.NORMAL).data,a,d.normal,e,6);c=b.vertexAttributes.get(h.VertexAttribute.UV0).data;
var f;if(null==c||4>c.length){c=this._material.parameters;var m=f=0;var l=c.texCoordScale[0];var g=c.texCoordScale[1]}else f=c[0],m=c[1],l=c[2],g=c[3];l=Math.min(1.99999,l+1);g=Math.min(1.99999,g+1);c=b.indices.get(h.VertexAttribute.POSITION).length;a=e;var p=d.uv0;for(var t=0;t<c;++t)p.set(a,0,f),p.set(a,1,m),a+=1,p.set(a,0,l),p.set(a,1,m),a+=1,p.set(a,0,l),p.set(a,1,g),a+=1,p.set(a,0,l),p.set(a,1,g),a+=1,p.set(a,0,f),p.set(a,1,g),a+=1,p.set(a,0,f),p.set(a,1,m),a+=1;F.writeColor(b.indices.get(h.VertexAttribute.COLOR),
b.vertexAttributes.get(h.VertexAttribute.COLOR).data,4,d.color,e,6);f=b.indices.get(h.VertexAttribute.SIZE);m=b.vertexAttributes.get(h.VertexAttribute.SIZE).data;c=f.length;l=d.size;a=e;for(g=0;g<c;++g){p=m[2*f[g]];t=m[2*f[g]+1];for(let x=0;6>x;++x)l.set(a,0,p),l.set(a,1,t),a+=1}b.indices.get(h.VertexAttribute.AUXPOS1)&&b.vertexAttributes.get(h.VertexAttribute.AUXPOS1)?F.writeBufferVec4(b.indices.get(h.VertexAttribute.AUXPOS1),b.vertexAttributes.get(h.VertexAttribute.AUXPOS1).data,d.auxpos1,e,6):
F.writeBufferVec4Zeros(d.auxpos1,e,6*c);b.indices.get(h.VertexAttribute.AUXPOS2)&&b.vertexAttributes.get(h.VertexAttribute.AUXPOS2)?F.writeBufferVec4(b.indices.get(h.VertexAttribute.AUXPOS2),b.vertexAttributes.get(h.VertexAttribute.AUXPOS2).data,d.auxpos2,e,6):F.writeBufferVec4Zeros(d.auxpos2,e,6*c);D.isSome(b.objectAndLayerIdColor)&&b.indices.get(h.VertexAttribute.POSITION)&&(c=b.indices.get(h.VertexAttribute.POSITION).length,d=d.getField(h.VertexAttribute.OBJECTANDLAYERIDCOLOR,pa.BufferViewVec4u8),
F.writeObjectAndLayerIdColor(b.objectAndLayerIdColor,d,c,e,6))};return r}();M.HUDMaterial=Ea;M.Parameters=da;Object.defineProperty(M,Symbol.toStringTag,{value:"Module"})});