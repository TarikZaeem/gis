// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/Accessor ../core/Error ../core/Logger ../core/MapUtils ../core/maybe ../core/promiseUtils ../core/reactiveUtils ../core/scheduling ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/accessorSupport/decorators/subclass ../core/support/WatchUpdatingTracking".split(" "),function(w,p,k,u,A,B,t,m,z,C,q,G,H,D,E){let F=function(){function v(g,b,a){this.layer=g;this.view=b;this.layerViewImporter=
a;this._controller=new AbortController;this._deferred=m.createDeferred();this.done=this._started=!1;this.promise=this._deferred.promise;m.onAbort(this._controller.signal,()=>{const c=new u("cancelled:layerview-create","layerview creation cancelled",{layer:g});this._deferred.reject(c)})}var r=v.prototype;r.tryRecycle=function(g){if(!(this.done&&this.layerView&&"tryRecycleWith"in this.layerView))return null;const b=this.layer.type,a=this._controller.signal;for(let c=0;c<g.length;c++){const e=g[c];if(e.type!==
b)continue;const d=this.layerView.tryRecycleWith(e,{signal:a});if(d){g.splice(c,1);this.layer=e;const l=this.layerView,n=l.view;return this.promise=Promise.race([d.then(()=>{m.throwIfAborted(this._controller.signal);e.emit("layerview-destroy",{view:n,layerView:l});n.emit("layerview-destroy",{view:n,layerView:l});e.emit("layerview-create",{view:n,layerView:l});n.emit("layerview-create",{view:n,layerView:l});return l}),new Promise((x,y)=>m.onAbort(this._controller.signal,()=>y(m.createAbortError())))])}}return null};
r.destroy=function(){this._controller.abort();const {layerView:g}=this;if(g){var {layer:b,view:a}=this;b.emit("layerview-destroy",{view:a,layerView:g});a.emit("layerview-destroy",{layer:b,layerView:g});this.done=!0;this.layerViewImporter=this.view=this.layerView=this.layer=null}};r.start=function(){var g=w._asyncToGenerator(function*(){if(!this._started){this._started=!0;var {_controller:{signal:b},layer:a,view:c}=this;this._map=c.map;try{yield a.load({signal:b});"prefetchResources"in a&&(yield a.prefetchResources?.({signal:b}));
let d;if("createLayerView"in a&&null!=a.createLayerView)d=yield a.createLayerView(c,{signal:b});else{if(!this.layerViewImporter.hasLayerViewModule(a))throw new u("layer:view-not-supported","No layerview implementation was found");var e=yield this.layerViewImporter.importLayerView(a);m.throwIfAborted(b);d="default"in e?new e.default({layer:a,view:c}):new e({layer:a,view:c})}let l;e=()=>{l=t.removeMaybe(l);d.destroyed||d.destroy();d.layer=null;d.parent=null;d.view=null;this.done=!0};l=m.onAbort(b,e);
m.throwIfAborted(b);try{yield d.when()}catch(n){throw e(),n;}this._map?.allLayers?.includes(a)?(this.layerView=d,a.emit("layerview-create",{view:c,layerView:d}),c.emit("layerview-create",{layer:a,layerView:d}),this.done=!0,this._deferred.resolve(d)):(e(),this._deferred.reject(new u("view:no-layerview-for-layer","The layer has been removed from the map",{layer:a})))}catch(d){a.emit("layerview-create-error",{view:c,error:d}),c.emit("layerview-create-error",{layer:a,error:d}),this.done=!0,this._deferred.reject(new u("layerview:create-error",
"layerview creation failed",{layer:a,error:d}))}}});return function(){return g.apply(this,arguments)}}();return v}();k=function(v){function r(b){var a=v.call(this,b)||this;a._layerLayerViewInfoMap=new Map;a._recyclingInfoMap=new Map;a._watchUpdatingTracking=new E.WatchUpdatingTracking;a.supportsGround=!0;a._preloadLayerViewModules=()=>{const c=a.view.map?.allLayers;if(c)for(const e of c)a.layerViewImporter.hasLayerViewModule(e)&&a.layerViewImporter.importLayerView(e)};a._reschedule=()=>{t.isNone(a._workPromise)&&
(a._workPromise=m.createDeferred(),a._workPromise.promise.catch(()=>{}));a.removeHandles("reschedule");a.addHandles(C.schedule(a._doWork),"reschedule");return a._workPromise.promise};a._doWork=()=>{const c=a.view.map;a._map!==c&&(a.clear(),a._map=c);if(t.isNone(a._workPromise))a.notifyChange("updating");else{a.removeHandles("reschedule");a.removeHandles("collection-change");var e=new Set,d=[],l=a.view.ready,n=h=>{if(!t.isNone(h))for(const f of h)f&&(e.add(f),(h=a._layerLayerViewInfoMap.get(f))&&l?
h.start():h||a._recyclingInfoMap.has(f)||d.push(f),"layers"in f&&f.layers&&n(f.layers))};for(var x of a._rootCollectionNames)n(a.get(x));for(const [h,f]of a._layerLayerViewInfoMap)e.has(h)||(a._layerLayerViewInfoMap.delete(f.layer),(x=f.tryRecycle(d))?(a._recyclingInfoMap.set(f.layer,f),x.then(()=>{a._recyclingInfoMap.delete(f.layer);a._layerLayerViewInfoMap.set(f.layer,f);a._reschedule()}).catch(()=>{a._recyclingInfoMap.delete(f.layer);f.destroy();a._reschedule()})):f.destroy());for(const [h,f]of a._recyclingInfoMap)e.has(h)||
(a._recyclingInfoMap.delete(f.layer),f.destroy());for(const h of d)a._createLayerView(h);a._refreshCollections();var y=[c?.ground?.layers,c?.basemap?.baseLayers,c?.basemap?.referenceLayers,c?.layers].filter(h=>!!h);e.forEach(h=>"layers"in h&&y.push(h.layers));a.addHandles(y.map(h=>a._watchUpdatingTracking.addOnCollectionChange(()=>h,a._reschedule)),"collection-change");a._workPromise.resolve();a._workPromise=null}};return a}w._inheritsLoose(r,v);var g=r.prototype;g.initialize=function(){this.own([z.on(()=>
this.view?.map?.allLayers,"change",this._preloadLayerViewModules,{onListenerAdd:this._preloadLayerViewModules}),z.watch(()=>{const b=this.view,a=b?.map;return[a?.basemap,a?.ground,a?.layers,b?.ready]},()=>this._reschedule(),z.syncAndInitial)]);this._preloadLayerViewModules();this._reschedule()};g.destroy=function(){this.clear();this._watchUpdatingTracking.destroy();this._map=null;t.isSome(this._workPromise)&&(this._workPromise.reject(m.createAbortError()),this._workPromise=null)};g.clear=function(){if(!this.destroyed){for(const b of this._layerLayerViewInfoMap.values())b.destroy();
this._layerLayerViewInfoMap.clear();this._refreshCollections()}};g.whenLayerView=function(){var b=w._asyncToGenerator(function*(a){yield this._reschedule();if(!this._layerLayerViewInfoMap.has(a)){if(this._recyclingInfoMap.has(a))return this._recyclingInfoMap.get(a).promise;throw new u("view:no-layerview-for-layer","No layerview has been found for the layer",{layer:a});}return this._layerLayerViewInfoMap.get(a).promise});return function(a){return b.apply(this,arguments)}}();g._refreshCollections=function(){for(const [b,
a]of this._layersToLayerViews)this._populateLayerViewsOwners(this.get(b),this.get(a),this.view);this.notifyChange("updating");this.notifyChange("updatingRemaining")};g._populateLayerViewsOwners=function(b,a,c){if(b&&a){var e=0;for(const d of b)(b=this._layerLayerViewInfoMap.get(d))&&b.layerView&&(b=b.layerView,b.layer=d,b.parent=c,a.getItemAt(e)!==b&&a.splice(e,0,b),d.layers&&this._populateLayerViewsOwners(d.layers,b.layerViews,b),e+=1);e<a.length&&a.splice(e,a.length)}else a&&a.removeAll()};g._createLayerView=
function(b){b.load().catch(()=>{});this.layerViewImporter.hasLayerViewModule(b)&&this.layerViewImporter.importLayerView(b);const a=new F(b,this.view,this.layerViewImporter);a.promise.then(()=>this._refreshCollections(),c=>{c&&(m.isAbortError(c)||"cancelled:layerview-create"===c.name)||A.getLogger(this.declaredClass).error(`Failed to create layerview for layer title:'${b.title??"no title"}', id:'${b.id??"no id"}' of type '${b.type}'.`,{layer:b,error:c});this._refreshCollections()});this._layerLayerViewInfoMap.set(b,
a);this.view.ready&&a.start();this.notifyChange("updating");this.notifyChange("updatingRemaining")};w._createClass(r,[{key:"_layersToLayerViews",get:function(){const b=[["view.map.basemap.baseLayers","view.basemapView.baseLayerViews"],["view.map.layers","view.layerViews"],["view.map.basemap.referenceLayers","view.basemapView.referenceLayerViews"]];this.supportsGround&&b.push(["view.map.ground.layers","view.groundView.layerViews"]);return new Map(b)}},{key:"_rootCollectionNames",get:function(){return Array.from(this._layersToLayerViews.keys())}},
{key:"updating",get:function(){return t.isSome(this._workPromise)||this._watchUpdatingTracking.updating||B.someMap(this._layerLayerViewInfoMap,b=>!b.done)}},{key:"updatingRemaining",get:function(){let b=0;for(const a of this._layerLayerViewInfoMap.values())a.done||++b;return b}}]);return r}(k);p.__decorate([q.property()],k.prototype,"_workPromise",void 0);p.__decorate([q.property({readOnly:!0})],k.prototype,"_watchUpdatingTracking",void 0);p.__decorate([q.property({readOnly:!0})],k.prototype,"_layersToLayerViews",
null);p.__decorate([q.property({readOnly:!0})],k.prototype,"_rootCollectionNames",null);p.__decorate([q.property()],k.prototype,"layerViewImporter",void 0);p.__decorate([q.property()],k.prototype,"supportsGround",void 0);p.__decorate([q.property({readOnly:!0})],k.prototype,"updating",null);p.__decorate([q.property({readOnly:!0})],k.prototype,"updatingRemaining",null);p.__decorate([q.property({constructOnly:!0})],k.prototype,"view",void 0);return k=p.__decorate([D.subclass("esri.views.LayerViewManager")],
k)});