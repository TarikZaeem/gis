// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../core/workers/workers ./GlyphMosaic ./GlyphSource ./SpriteMosaic ../../tiling/TileKey".split(" "),function(r,k,m,t,x,u,v,p,w){let y=function(){function q(b,a,c){this._layer=b;this._styleRepository=a;this.devicePixelRatio=c;this._connection=this._glyphMosaic=this._spriteMosaic=null}var f=q.prototype;f.destroy=function(){this._connection?.close();this._glyphMosaic=this._spriteMosaic=
this._layer=this._styleRepository=this._connection=null};f.start=function(){var b=k._asyncToGenerator(function*(a){this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,a);this._spriteSourcePromise.then(d=>{this._spriteMosaic=new p(1024,1024,250);this._spriteMosaic.setSpriteSource(d)});var c=this._layer.currentStyleInfo.glyphsUrl;c=new v(c?t.addQueryParameters(c,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new u(1024,1024,c);this._broadcastPromise=
x.open("WorkerTileHandler",{client:this,schedule:a.schedule,signal:a.signal}).then(d=>{this._connection=d;this._layer&&!this._connection.closed&&(d=d.broadcast("setStyle",this._layer.currentStyleInfo.style,a),Promise.all(d).catch(e=>m.throwIfNotAbortError(e)))})});return function(a){return b.apply(this,arguments)}}();f.updateStyle=function(){var b=k._asyncToGenerator(function*(a){yield this._broadcastPromise;return this._broadcastPromise=Promise.all(this._connection.broadcast("updateStyle",a))});
return function(a){return b.apply(this,arguments)}}();f.setSpriteSource=function(b){const a=new p(1024,1024,250);a.setSpriteSource(b);this._spriteMosaic=a;this._spriteSourcePromise=Promise.resolve(b);return a};f.setStyle=function(){var b=k._asyncToGenerator(function*(a,c){yield this._broadcastPromise;this._styleRepository=a;this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,null);this._spriteSourcePromise.then(d=>{this._spriteMosaic=new p(1024,1024,250);this._spriteMosaic.setSpriteSource(d)});
a=new v(this._layer.currentStyleInfo.glyphsUrl?t.addQueryParameters(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new u(1024,1024,a);return this._broadcastPromise=Promise.all(this._connection.broadcast("setStyle",c))});return function(a,c){return b.apply(this,arguments)}}();f.fetchTileData=function(b,a){return this._getRefKeys(b,a).then(c=>{const d=this._layer.sourceNameToSource,e=[];for(const g in d)e.push(g);return this._getSourcesData(e,
c,a)})};f.parseTileData=function(b,a){const c=b&&b.data;if(!c)return Promise.resolve(null);const {sourceName2DataAndRefKey:d,transferList:e}=c;return 0===Object.keys(d).length?Promise.resolve(null):this._broadcastPromise.then(()=>this._connection.invoke("createTileAndParse",{key:b.key.id,sourceName2DataAndRefKey:d,styleLayerUIDs:b.styleLayerUIDs},{...a,transferList:e}))};f.getSprites=function(){var b=k._asyncToGenerator(function*(a){yield this._spriteSourcePromise;return this._spriteMosaic.getSpriteItems(a)});
return function(a){return b.apply(this,arguments)}}();f.getGlyphs=function(b){return this._glyphMosaic.getGlyphItems(b.font,b.codePoints)};f._getTilePayload=function(){var b=k._asyncToGenerator(function*(a,c,d){a=w.pool.acquire(a.id);const e=this._layer.sourceNameToSource[c],{level:g,row:n,col:l}=a;w.pool.release(a);try{return{protobuff:yield e.requestTile(g,n,l,d),sourceName:c}}catch(h){if(m.isAbortError(h))throw h;return{protobuff:null,sourceName:c}}});return function(a,c,d){return b.apply(this,
arguments)}}();f._getRefKeys=function(b,a){const c=this._layer.sourceNameToSource,d=[];for(const e in c){const g=c[e].getRefKey(b,a);d.push(g)}return m.eachAlways(d)};f._getSourcesData=function(b,a,c){const d=[];for(let e=0;e<a.length;e++)if(null==a[e].value||null==b[e])d.push(null);else{const g=this._getTilePayload(a[e].value,b[e],c);d.push(g)}return m.eachAlways(d).then(e=>{const g={},n=[];for(let l=0;l<e.length;l++){const h=e[l].value;h&&h.protobuff&&0<h.protobuff.byteLength&&(g[h.sourceName]=
{refKey:a[l].value.id,protobuff:h.protobuff},n.push(h.protobuff))}return{sourceName2DataAndRefKey:g,transferList:n}})};k._createClass(q,[{key:"spriteMosaic",get:function(){return this._spriteSourcePromise.then(()=>this._spriteMosaic)}},{key:"glyphMosaic",get:function(){return this._glyphMosaic}}]);return q}();r.TileHandler=y;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});