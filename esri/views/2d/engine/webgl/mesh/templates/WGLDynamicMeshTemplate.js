// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/Logger","../../../../../../symbols/cim/cimAnalyzer","../../../../../../symbols/cim/utils","./WGLMeshTemplate"],function(v,w,x,k,y){const n=w.getLogger("esri.views.2d.engine.webgl.WGLDynamicMeshTemplate");return function(p){function m(d){var a=p.call(this)||this;a._ongoingMaterialRequestMap=new Map;a._materialCache=new Map;a._dynamicPropertyMap=new Map;a._cimLayer=d;return a}v._inheritsLoose(m,p);m.prototype.analyze=
function(d,a,e,f,g){if(g&&0===g.length)return null;const q=g&&0<g.length,h=a.readLegacyFeature();a=a.getObjectId();const r=this._materialCache;var b=this._cimLayer.materialHash;if(!b)return n.error("A Dynamic mesh template must have a material hash value or function!"),Promise.reject(null);const c="function"===typeof b?b(h,e,f,a):b;b=r.get(c);if(null!=b)return Promise.resolve(b);if(b=this._ongoingMaterialRequestMap.get(c))return b;b=this._cimLayer;const t=x.analyzeCIMResource(b.cim,this._cimLayer.materialOverrides);
t.mosaicHash=c;const {type:u,url:z}=b;a={cim:t,type:u,mosaicHash:c,url:z,size:null,dashTemplate:null,text:null,fontName:null,objectId:a,animatedSymbolProperties:null};switch(u){case "marker":a.size=k.evaluateValueOrFunction(b.size,h,e,f);a.animatedSymbolProperties=k.evaluateValueOrFunction(b.animatedSymbolProperties,h,e,f);break;case "line":a.dashTemplate=b.dashTemplate;break;case "text":a.text=k.evaluateValueOrFunction(b.text,h,e,f),a.fontName=k.evaluateValueOrFunction(b.fontName,h,e,f)}d=d.getMosaicItem(a,
g).then(l=>{q||(this._ongoingMaterialRequestMap.delete(c),r.set(c,l));return l}).catch(l=>{this._ongoingMaterialRequestMap.delete(c);n.error(".analyze()",l.message);return null});q||this._ongoingMaterialRequestMap.set(c,d);return d};return m}(y)});