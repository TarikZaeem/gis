// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/screenUtils ../../../../chunks/mat3 ../../../../chunks/mat3f32 ../../../../chunks/vec2f32 ../../../../chunks/vec3f32 ../../../../geometry/support/normalizeUtils ../../../../geometry/support/spatialReferenceUtils ../../viewpointUtils ../brushes ./enums ./WGLContainer".split(" "),function(A,E,F,m,G,H,I,J,K,L,M,N,O){return function(x){function q(){var a=x.apply(this,arguments)||this;a._localOrigin=F.createScreenPoint(0,
0);a._viewStateId=-1;a._dvsMat3=G.create();a.requiresDedicatedFBO=!1;return a}A._inheritsLoose(q,x);var r=q.prototype;r.beforeRender=function(a){this._updateMatrices(a);this._updateOverlays(a,this.children);for(const b of this.children)b.beforeRender(a)};r.prepareRenderPasses=function(a){const b=a.registerRenderPass({name:"overlay",brushes:[M.brushes.overlay],target:()=>this.children,drawPhase:N.WGLDrawPhase.MAP});return[...x.prototype.prepareRenderPasses.call(this,a),b]};r._updateMatrices=function(a){var {state:b}=
a;const {id:f,size:t,pixelRatio:h,resolution:n,rotation:u,viewpoint:y,displayMat3:k}=b;if(this._viewStateId!==f){a=Math.PI/180*u;var c=h*t[0],d=h*t[1],{x:g,y:l}=y.targetGeometry;b=J.normalizeMapX(g,b.spatialReference);this._localOrigin.x=b;this._localOrigin.y=l;b=n*c;var p=n*d,e=m.identity(this._dvsMat3);m.multiply(e,e,k);m.translate(e,e,H.fromValues(c/2,d/2));m.scale(e,e,I.fromValues(c/b,-d/p,1));m.rotate(e,e,-a);this._viewStateId=f}};r._updateOverlays=function(a,b){const {state:f}=a,{rotation:t,
spatialReference:h,worldScreenWidth:n,size:u,viewpoint:y}=f;a=this._localOrigin;let k=0;var c=K.getInfo(h);if(c&&h.isWrappable){var d=180/Math.PI*t,g=Math.round(u[0]*Math.abs(Math.cos(d))+u[1]*Math.abs(Math.sin(d)));const [p,e]=c.valid;c=L.getWorldWidth(h);const {x:B,y:P}=y.targetGeometry;d=[0,0];f.toScreen(d,[B,P]);const v=[0,0];g=g>n?.5*n:.5*g;var l=Math.floor((B+.5*c)/c);const Q=p+l*c;l=e+l*c;const z=[d[0]+g,0];f.toMap(v,z);v[0]>l&&(k=c);z[0]=d[0]-g;f.toMap(v,z);v[0]<Q&&(k=-c);for(const w of b){b=
w.elementView.bounds;if(E.isNone(b))continue;const [C,,D]=b;C<p&&D>p?w.updateDrawCoords(a,c):D>e&&C<e?w.updateDrawCoords(a,-c):w.updateDrawCoords(a,k)}}else for(d of b)d.updateDrawCoords(a,k)};A._createClass(q,[{key:"dvsMat3",get:function(){return this._dvsMat3}}]);return q}(O)});