// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../../../chunks/earcut ../../../geometry/support/aaBoundingRect ../../../geometry/support/coordsUtils ../../../geometry/support/normalizeUtilsSync ../../../geometry/support/spatialReferenceUtils ../../../layers/graphics/data/projectionSupport ../tiling/PagedTileQueue ../tiling/TileInfoView ../tiling/TileKey ../tiling/TileQueue ../tiling/TileStrategy ../engine/webgl/definitions ../engine/webgl/TurboLine ./LayerView2D ./support/DisplayGL ./support/util ../../layers/LayerView ../../layers/RefreshableLayerView".split(" "),
function(n,t,x,p,V,D,E,F,G,H,I,z,W,J,X,Y,Z,K,L,M,N,A,O,P){const y=new Set,u=[],v=[];let Q=function(w,r,f,b,a,c,e,d=[0,0],g=F.create()){this.id=w;this.level=r;this.row=f;this.col=b;this.world=a;this.resolution=c;this.scale=e;this.coords=d;this.bounds=g};p=function(w){function r(b){b=w.call(this,b)||this;b._tileMap=new Map;b.container=new N(n._assertThisInitialized(b));b.layer=null;b.tiles=[];b._renderTarget={framebuffer:null,viewport:[0,0,0,0]};return b}n._inheritsLoose(r,w);var f=r.prototype;f.attach=
function(){};f.detach=function(){};f.requestRender=function(){this.container.requestRender()};f.tilesChanged=function(b,a){};f.supportsSpatialReference=function(b){const a=this.layer?.tileInfo;return a?I.equals(a.spatialReference,b):!0};f.doRefresh=function(){var b=n._asyncToGenerator(function*(){});return function(){return b.apply(this,arguments)}}();f.isUpdating=function(){return!1};f.update=function(b){var a=this._tileInfoView;const c=this.tiles;if(a){b=a.getTileCoverage(b.state,0);var e=b?.spans;
b=b?.lodInfo;if(e?.length&&b){a=b.level;for(const {row:g,colFrom:k,colTo:l}of e)for(e=k;e<=l;e++){var d=b.normalizeCol(e);const h=b.getWorldForColumn(e),m=`${a}/${g}/${d}/${h}`;this._tileMap.has(m)||(d=new Q(m,a,g,d,h,b.resolution,b.scale),b.getTileCoords(d.coords,d,!1),b.getTileBounds(d.bounds,d,!0),this._tileMap.set(m,d),c.push(d),u.push(d));y.add(m)}}}for(b=c.length-1;0<=b;b--)a=c[b],y.has(a.id)||(c.splice(b,1),v.push(a),this._tileMap.delete(a.id));if(u.length||v.length)this.tilesChanged(u,v),
u.length=v.length=0;y.clear();this.requestRender()};f.moveStart=function(){};f.viewChange=function(){this.requestUpdate()};f.moveEnd=function(){};f.bindRenderTarget=function(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,this._renderTarget.framebuffer);this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])};f.getRenderTarget=function(){return this._renderTarget};f.tessellateExtent=function(){var b=
n._asyncToGenerator(function*(a){const c={vertices:[],indices:[]};a=yield this._projectAndNormalizeGeometry(a);const e=c.vertices.length;c.vertices.push({x:a.xmin,y:a.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0});c.vertices.push({x:a.xmax,y:a.ymin,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0});c.vertices.push({x:a.xmin,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0});c.vertices.push({x:a.xmax,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0});
c.indices.push(e+0,e+1,e+2,e+1,e+3,e+2);return c});return function(a){return b.apply(this,arguments)}}();f.tessellatePoint=function(){var b=n._asyncToGenerator(function*(a,c){a=yield this._projectAndNormalizeGeometry(a);return this._tessellatePoints([a],c)});return function(a,c){return b.apply(this,arguments)}}();f.tessellateMultipoint=function(){var b=n._asyncToGenerator(function*(a,c){const e=yield this._projectAndNormalizeGeometry(a);a=e.points.map(d=>({x:d[0],y:d[1],spatialReference:e.spatialReference}));
return this._tessellatePoints(a,c)});return function(a,c){return b.apply(this,arguments)}}();f._tessellatePoints=function(){var b=n._asyncToGenerator(function*(a,c){const e={vertices:[],indices:[]};for(const d of a)a=e.vertices.length,e.vertices.push({x:d.x,y:d.y,xOffset:c.x,yOffset:c.y+c.height,uTexcoord:0,vTexcoord:0,distance:0}),e.vertices.push({x:d.x,y:d.y,xOffset:c.x+c.width,yOffset:c.y+c.height,uTexcoord:1,vTexcoord:0,distance:0}),e.vertices.push({x:d.x,y:d.y,xOffset:c.x,yOffset:c.y,uTexcoord:0,
vTexcoord:1,distance:0}),e.vertices.push({x:d.x,y:d.y,xOffset:c.x+c.width,yOffset:c.y,uTexcoord:1,vTexcoord:1,distance:0}),e.indices.push(a+0,a+1,a+2,a+1,a+3,a+2);return e});return function(a,c){return b.apply(this,arguments)}}();f.tessellatePolyline=function(){var b=n._asyncToGenerator(function*(a,c){const e={vertices:[],indices:[]};var d=(yield this._projectAndNormalizeGeometry(a)).paths;if(!d||!d.length)return e;let g;a=new L.LineTessellation((k,l,h,m,q,B,R,S,aa,T,C)=>{h=e.vertices.length;e.vertices.push({x:k,
y:-l,xOffset:R*c/2,yOffset:S*c/2,uTexcoord:C/g,vTexcoord:(T+1)/2,distance:C});return h},(k,l,h)=>{e.indices.push(k,l,h)},!0);for(const k of d){g=0;for(d=1;d<k.length;++d){const l=k[d][0]-k[d-1][0],h=k[d][1]-k[d-1][1];g+=Math.sqrt(l*l+h*h)}d=k.map(l=>({x:l[0],y:-l[1]}));a.tessellate(d,U)}return e});return function(a,c){return b.apply(this,arguments)}}();f.tessellatePolygon=function(){var b=n._asyncToGenerator(function*(a){const c={vertices:[],indices:[]};a=yield this._projectAndNormalizeGeometry(a);
const e=a.rings;if(!e||!e.length)return c;G.closeRings(a);for(const h of a.rings)for(const m of h)m[1]=-m[1];let d=Infinity,g=Infinity,k=-Infinity,l=-Infinity;A.analyzeRings(a.rings,()=>{},(h,m,q)=>{for(;h<m;h+=2)d=Math.min(d,q[h]),g=Math.min(g,q[h+1]),k=Math.max(k,q[h]),l=Math.max(l,q[h+1])});A.analyzeRings(a.rings,()=>{},(h,m,q,B)=>{this._invokeEarcut(c,h,m,q,B,[d,g,k,l])});return c});return function(a){return b.apply(this,arguments)}}();f._invokeEarcut=function(b,a,c,e,d,g){a=e.slice(a,c);d=E.earcut(a,
d,2);c=b.vertices.length;for(e=0;e<a.length;e+=2){const k=a[e],l=a[e+1];b.vertices.push({x:k,y:-l,xOffset:0,yOffset:0,uTexcoord:(k-g[0])/(g[2]-g[0]),vTexcoord:1-(l-g[1])/(g[3]-g[1]),distance:0})}for(g=0;g<d.length;++g)b.indices.push(c+d[g])};f._projectAndNormalizeGeometry=function(){var b=n._asyncToGenerator(function*(a){yield z.checkProjectionSupport(a.spatialReference,this.view.spatialReference);const c=H.normalizeCentralMeridianForDisplay(a);return z.project(c,a.spatialReference,this.view.spatialReference)});
return function(a){return b.apply(this,arguments)}}();n._createClass(r,[{key:"_tileInfoView",get:function(){const b=this.layer&&this.layer.tileInfo;return b?new J(b):null}},{key:"context",get:function(){return this.view._stage.context.gl}}]);return r}(P(M.LayerView2DMixin(O)));t.__decorate([x.property()],p.prototype,"_tileInfoView",null);t.__decorate([x.property()],p.prototype,"layer",void 0);t.__decorate([x.property()],p.prototype,"context",null);p=t.__decorate([D.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],
p);const U={pixelCoordRatio:1,wrapDistance:1E11,halfWidth:K.THIN_LINE_HALF_WIDTH_THRESHOLD+1,initialDistance:0,textured:!0,offset:0};return p});