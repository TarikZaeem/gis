// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/BidiText ../../../../core/HandleOwner ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/SpatialReference ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/coordsUtils ../../../../geometry/support/jsonUtils ../../../../geometry/support/normalizeUtilsSync ../../../../geometry/support/spatialReferenceUtils ../../../../layers/graphics/data/projectionSupport ../../../../symbols/cim/CIMSymbolHelper ../../../../symbols/support/defaults ../../engine/webgl/definitions ../../engine/webgl/enums ../../engine/webgl/GraphicTile ../../engine/webgl/TileData ../../engine/webgl/WGLDisplayObject ../../engine/webgl/mesh/MeshData ../../engine/webgl/mesh/factories/WGLMeshFactory ../../engine/webgl/mesh/templates/WGLTemplateStore ../../engine/webgl/util/Matcher ../features/schemaUtils ../features/support/AttributeStore ../features/support/ComputedAttributeStorage ../features/support/GraphicsReader ./GraphicStore ./graphicsUtils ../support/cimSymbolUtils ../../../layers/GraphicsView ../../../webgl/capabilities ../features/createSymbolSchema".split(" "),
function(x,z,t,L,M,N,w,l,O,A,ma,na,P,Q,D,R,q,S,I,J,T,E,U,V,W,K,X,Y,Z,aa,ba,F,ca,da,ea,fa,p,ha,ia,ja,ka){function G(C,B,f){let a=f.get(C);a||(a={tile:B,addedOrModified:[],removed:[]},f.set(C,a));return a}const la=N("esri-2d-graphic-debug");t=function(C){function B(a){a=C.call(this,a)||this;a._storage=new da.ComputedAttributeStorage;a._displayIds=new Map;a._controller=new AbortController;a._tiles=new Map;a._graphicStoreUpdate=!1;a._graphicsSet=new Set;a._matcher=Promise.resolve(null);a._tileUpdateSet=
new Set;a._tilesToUpdate=new Map;a._graphicIdToAbortController=new Map;a._attached=!1;a._updatingGraphicsTimer=null;a._hashToExpandedSymbol=new Map;a._hashToExpandedSymbolPromise=new Map;a._hashToCIMSymbolPromise=new Map;a._hashToCIM=new Map;a._processing=!1;a._needsProcessing=!1;a._pendingUpdate={added:new Set,updated:new Set,removed:new Set};a.lastUpdateId=-1;a.updateRequested=!1;a.defaultPointSymbolEnabled=!0;a.graphicUpdateHandler=a.graphicUpdateHandler.bind(x._assertThisInitialized(a));return a}
x._inheritsLoose(B,C);var f=B.prototype;f.destroy=function(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating"));this._controller.abort();this.container.destroy();this._set("graphics",null);this._graphicStore.clear();this._attributeStore=null;this._hashToExpandedSymbol.clear();this.renderer=this.view=null;this._hashToCIM.clear();this._hashToCIMSymbolPromise.clear();this._hashToExpandedSymbolPromise.clear()};f._createMatcher=
function(a,b,c){if(a){const d=F.createSymbolSchemaOptions(a);a=F.createMatcherSchema({indexCount:0,fields:{}},"feature",a,d);this._matcher=ba.createMatcher(a,b,null,c)}};f._createDisplayId=function(a){let b=this._displayIds.get(a);b||(b=this._storage.createDisplayId(),this._displayIds.set(a,b));return b};f.initialize=function(){this._attributeStore=new ca({type:"local",initialize:b=>Promise.resolve(this.container.attributeView.initialize(b)),update:b=>this.container.attributeView.requestUpdate(b),
render:()=>this.container.requestRender()},ja.getWebGLCapabilities("2d"),()=>this.notifyChange("updating"));this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const a=new aa.WGLTemplateStore(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new fa(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,b=>{this._createDisplayId(b.uid);this._setFilterState(b.uid,b.visible)},b=>{const c=this._displayIds.get(b.uid);
this._displayIds.delete(b.uid);this._storage.releaseDisplayId(c)},this._hashToCIM);this._meshFactory=new Z.WGLMeshFactory(null,this.uid,a);this._templateStore=a;this.handles.add([O.watch(()=>this.renderer,b=>{this._createMatcher(b,a,this.container.stage.resourceManager);for(const c of this.graphics)this._pendingUpdate.updated.add(c);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{la&&this.container.enableRenderingBounds(()=>
this._graphicStore.getAllBounds());0<this.graphics.items.length&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]});this.handles.add(this.graphics.on("change",c=>this._graphicsChangeHandler(c)),"graphics");const b=this.container.stage.resourceManager;this._createMatcher(this.renderer,a,b);this._graphicStore.setResourceManager(b);this._attached=!0;this.notifyChange("updating")})]);this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})};
f.hitTest=function(a){if(!this.view||!this.view.position)return[];const {resolution:b,rotation:c}=this.view.state;return this._graphicStore.hitTest(a.x,a.y,2,b,c)};f.update=function(a){l.throwIfAborted(this._controller.signal);({resolution:a}=a.state);this._graphicStore.updateLevel(a);this._graphicStoreUpdate=!0;this.updateRequested=!1;0<this._pendingUpdate.updated.size&&(this._processing?this._needsProcessing=!0:this._updateGraphics())};f.viewChange=function(){this.requestUpdate()};f.requestUpdate=
function(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())};f.processUpdate=function(a){this.updateRequested&&(this.updateRequested=!1,this.update(a))};f.graphicUpdateHandler=function(a){const {graphic:b,property:c}=a;switch(c){case "attributes":case "geometry":case "symbol":this._pendingUpdate.updated.add(b);this.requestUpdate();break;case "visible":this._setFilterState(b.uid,b.visible),this._attributeStore.sendUpdates()}};f.setHighlight=function(a){const b=a.map(c=>
this._displayIds.get(c)).filter(w.isSome);this._attributeStore.setHighlight(a,b)};f._getIntersectingTiles=function(a){a=this._graphicStore.getBounds(a);if(!a||0===D.width(a)||0===D.height(a))return[];const b=p.intersectingInternationalDateline(a,this.view.spatialReference);return w.isSome(b)?[...(new Set([...this.view.graphicsTileStore.boundsIntersections(b[0]),...this.view.graphicsTileStore.boundsIntersections(b[1])]))]:this.view.graphicsTileStore.boundsIntersections(a)};f._updateTile=function(){var a=
x._asyncToGenerator(function*(b){l.throwIfAborted(this._controller.signal);const c=b.tile;var d=this._getGraphicsData(this._templateStore,c,b.addedOrModified);d=yield this._processGraphics(c,d);l.throwIfAborted(this._controller.signal);this._patchTile(c.key,{type:"update",addOrUpdate:d,remove:b.removed,end:!0,clear:!1,sort:!1});return d});return function(b){return a.apply(this,arguments)}}();f._patchTile=function(a,b){if(a=this._tiles.get(a))this.container.onTileData(a,b),this.container.requestRender()};
f._graphicsChangeHandler=function(a){const b=this._pendingUpdate;for(const c of a.added)b.added.add(c);for(const c of a.moved)b.updated.add(c);for(const c of a.removed)this._pendingUpdate.added.has(c)?b.added.delete(c):b.removed.add(c);this._processing?this._needsProcessing=!0:this._updateGraphics()};f._getGraphicsToUpdate=function(){const a={added:[],removed:[],updated:[]};if(!this.graphics)return a;const b=this._pendingUpdate;for(const c of this.graphics.items)b.added.has(c)?a.added.push(c):b.updated.has(c)&&
a.updated.push(c);for(const c of b.removed)this._graphicStore.has(c)&&a.removed.push(c);b.added.clear();b.removed.clear();b.updated.clear();return a};f._updateGraphics=function(){var a=x._asyncToGenerator(function*(){this._processing=!0;const {added:b,removed:c,updated:d}=this._getGraphicsToUpdate(),e=this._tilesToUpdate;try{if(!this._graphicStoreUpdate){var {resolution:g}=this.view.state;this._graphicStore.updateLevel(g)}g=[];const u=Array(b.length+c.length);for(let k=0;k<d.length;k++){var h=d[k];
const r=this._getIntersectingTiles(h);for(const y of r){var m=y.id;G(m,y,e).removed.push(this._displayIds.get(h.uid))}g.push(this._updateGraphic(h,null));u[k]=h}var v=d.length;for(h=0;h<b.length;h++){const k=b[h];u[v+h]=k;this._graphicsSet.add(k);g.push(this._addGraphic(k))}for(const k of c){this._abortProcessingGraphic(k.uid);const r=this._getIntersectingTiles(k);for(const y of r)m=y.id,G(m,y,e).removed.push(this._displayIds.get(k.uid));this._graphicsSet.delete(k);this._graphicStore.remove(k)}this._flipUpdatingGraphics();
yield Promise.all(g);let n;for(v=0;v<u.length;v++){n=u[v];const k=this._getIntersectingTiles(n);for(const r of k)m=r.id,G(m,r,e).addedOrModified.push(n)}this._graphicStore.updateZ();m=[];for(const [,k]of e)m.push(this._updateTile(k));yield Promise.all(m)}catch(u){l.isAbortError(u)}for(const u of c)try{const n=yield this._getSymbolForGraphic(u,null);if(n){const k=n.hash();this._hashToExpandedSymbol.delete(k)}}catch(n){l.isAbortError(n)}e.clear();this.notifyChange("updating");this._processing=!1;this._needsProcessing&&
(this._needsProcessing=!1,this._updateGraphics())});return function(){return a.apply(this,arguments)}}();f._getArcadeInfo=function(a){const b=(a.attributes?Object.keys(a.attributes):[]).map(c=>({name:c,alias:c,type:"string"===typeof a.attributes[c]?"esriFieldTypeString":"esriFieldTypeDouble"}));return w.isNone(a.geometry)?null:{geometryType:q.getJsonType(a.geometry),spatialReference:Q.fromJSON(a.geometry.spatialReference),fields:b}};f._getSymbolForGraphic=function(a,b){l.throwIfAborted(this._controller.signal);
return w.isSome(a.symbol)?Promise.resolve(a.symbol):w.isSome(this.renderer)?this.renderer.getSymbolAsync(a,{scale:this.view.scale,signal:w.isSome(b)?b.signal:null}):Promise.resolve(this._getNullSymbol(a))};f._getCIMSymbol=function(a,b,c){var d=this._hashToCIM.get(b);if(d)return Promise.resolve(d);a=T.symbolToCIM(a);if(w.isSome(a)){if("CIMSymbolReference"===a.type)return d=a,this._hashToCIM.set(b,d),Promise.resolve(d);if(d=this._hashToCIMSymbolPromise.get(b))return d;d=a.fetchCIMSymbol(c).then(e=>
{this._hashToCIM.set(b,e.data);this._hashToCIMSymbolPromise.delete(b);return e}).catch(e=>{this._hashToCIMSymbolPromise.delete(b);l.throwIfAbortError(e);return null});this._hashToCIMSymbolPromise.set(b,d);return d}return Promise.resolve(null)};f._expandCIMSymbol=function(a,b,c,d){var e=this._hashToExpandedSymbol.get(c);if(e)return Promise.resolve(e);if(e=this._hashToExpandedSymbolPromise.get(c))return e;e=this.container.stage;b=this._getArcadeInfo(b);const g=F.createSymbolSchemaOptions(null);a=ka.createSymbolSchema(a,
g);e=ha.expandSymbol(a,b,e.resourceManager,d);this._hashToExpandedSymbolPromise.set(c,e);e.then(h=>{this._hashToExpandedSymbol.set(c,h);this._hashToExpandedSymbolPromise.delete(c);return h});return e};f._getSymbolResources=function(){var a=x._asyncToGenerator(function*(b,c){l.throwIfAborted(this._controller.signal);return this.container.stage?this._getSymbolForGraphic(b,c).then(d=>{if(!d)return null;const e=d.hash();return this._getCIMSymbol(d,e,c).then(g=>w.isNone(g)?null:this._expandCIMSymbol(g,
b,e,c).then(h=>{const m=h.layers.filter(v=>"text"===v.type&&"string"===typeof v.text);if(m&&0<m.length){const v=Array(m.length);for(let n=0;n<m.length;n++){const k=m[n],r=[],[y]=L.bidiText(k.text);k.text=y;for(let H=0;H<y.length;H++)r.push(y.charCodeAt(H));v[n]={symbol:k,id:n,glyphIds:r}}const u=new Map;return this.container.getMaterialItems(v).then(n=>{w.assertIsSome(n);for(let k=0;k<m.length;k++){const r=m[k];u.set(r.cim,{text:r.text,mosaicItem:n[k].mosaicItem})}return{symbol:h,textInfo:u,hash:e}})}return{symbol:h,
hash:e}}))}).catch(d=>{l.throwIfAbortError(d);return null}):null});return function(b,c){return a.apply(this,arguments)}}();f._projectAndNormalizeGeometry=function(){var a=x._asyncToGenerator(function*(b,c){l.throwIfAborted(this._controller.signal);if(w.isNone(b.geometry)||"mesh"===b.geometry.type)return null;var d=b.geometry;q.isPolygon(d)?d.rings=d.rings:q.isPolyline(d)?d.paths=d.paths:q.isExtent(d)&&(b=yield this._getSymbolForGraphic(b,c),l.throwIfAborted(this._controller.signal),d=b&&(p.isMarkerSymbol(b.type)||
p.isTextSymbol(b.type))?d.center:p.polygonFromExtent(d));yield J.checkProjectionSupport(d.spatialReference,this.view.spatialReference);b=S.normalizeCentralMeridianForDisplay(d);(d=J.project(b,d.spatialReference,this.view.spatialReference))&&R.closeRingsAndFixWinding(d);return d});return function(b,c){return a.apply(this,arguments)}}();f._onTileUpdate=function(a){const b=I.getInfo(this.view.spatialReference);if(a.added&&0<a.added.length)for(const c of a.added)this._addNewTile(c,b);if(a.removed&&0<
a.removed.length)for(const c of a.removed)this._removeTile(c.key)};f._addGraphic=function(){var a=x._asyncToGenerator(function*(b){this._abortProcessingGraphic(b.uid);l.throwIfAborted(this._controller.signal);var c=new AbortController;this._graphicIdToAbortController.set(b.uid,c);c={signal:c.signal};try{yield this._addOrUpdateGraphic(b,c),l.throwIfAborted(this._controller.signal),this._graphicIdToAbortController.delete(b.uid)}catch(d){if(this._graphicIdToAbortController.delete(b.uid),!l.isAbortError(d))throw d;
}});return function(b){return a.apply(this,arguments)}}();f._updateGraphic=function(a,b){l.throwIfAborted(this._controller.signal);const c=this._projectAndNormalizeGeometry(a,b);b=this._getSymbolResources(a,b);return Promise.all([c,b]).then(([d,e])=>{l.throwIfAborted(this._controller.signal);this._graphicStore.addOrModify(a,e,d)})};f._addOrUpdateGraphic=function(a,b){l.throwIfAborted(this._controller.signal);const c=this._projectAndNormalizeGeometry(a,b);b=this._getSymbolResources(a,b);return Promise.all([c,
b]).then(([d,e])=>{l.throwIfAborted(this._controller.signal);this._graphicsSet.has(a)&&this._graphicStore.addOrModify(a,e,d)})};f._addTile=function(a){var b=this.view.featuresTilingScheme.getTileBounds(D.create(),a);const c=this.view.featuresTilingScheme.getTileResolution(a.level);b=new W.GraphicTile(a,c,b[0],b[3]);this._tiles.set(a,b);this.container.addChild(b);return b};f._addNewTile=function(){var a=x._asyncToGenerator(function*(b,c){const d=this._addTile(b.key),e=this._graphicStore.queryTileData(this._templateStore,
b);if(0!==e.length){if(c){c=Math.round((c.valid[1]-c.valid[0])/b.resolution);for(var g of e)g.geometry&&(q.isPoint(g.geometry)||q.isMultipoint(g.geometry))&&this._wrapPoints(g,c)}g=b.key;this._tileUpdateSet.add(b.key);this.notifyChange("updating");try{const h={type:"update",clear:!1,addOrUpdate:yield this._processGraphics(b,e),remove:[],end:!0,sort:!1};d.patch(h);this._tileUpdateSet.delete(g);this.notifyChange("updating")}catch(h){if(this._tileUpdateSet.delete(g),this.notifyChange("updating"),!l.isAbortError(h))throw h;
}}});return function(b,c){return a.apply(this,arguments)}}();f._removeTile=function(a){if(this._tiles.has(a)){var b=this._tiles.get(a);this.container.removeChild(b);b.destroy();this._tiles.delete(a)}};f._setFilterState=function(a,b){const c=this._displayIds.get(a);a=this._attributeStore.getHighlightFlag(a);this._attributeStore.setData(c,0,0,a|(b?U.FILTER_FLAG_0:0))};f._getGraphicsData=function(a,b,c){const d=I.getInfo(this.view.spatialReference);a=this._graphicStore.getGraphicsData(a,b,c);if(d){b=
Math.round((d.valid[1]-d.valid[0])/b.resolution);for(const e of a)e.geometry&&(q.isPoint(e.geometry)||q.isMultipoint(e.geometry))&&this._wrapPoints(e,b)}return a};f._wrapPoints=function(a,b){const c=a.geometry;q.isMultipoint(c)?this._wrapMultipoint(c,b):this._wrapPoint(a,b)};f._wrapMultipoint=function(a,b){var c=a.points;const d=[];let e=0,g=0;for(const [h,m]of c)d.push([h+e,m]),e=0,b===p.TILE_SIZE?(c=5*p.PIXEL_BUFFER,h+g<c?(d.push([b,0]),e=-b):h+g>p.TILE_SIZE-c&&(d.push([-b,0]),e=b)):h+g<-p.PIXEL_BUFFER?
(d.push([b,0]),e=-b):h+g>p.TILE_SIZE+p.PIXEL_BUFFER&&(d.push([-b,0]),e=b),g+=h;a.points=d};f._wrapPoint=function(a,b){const c=a.geometry;if(b===p.TILE_SIZE){const d=5*p.PIXEL_BUFFER;c.x<d?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>p.TILE_SIZE-d&&(a.geometry={points:[[c.x,c.y],[-b,0]]})}else c.x<-p.PIXEL_BUFFER?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>p.TILE_SIZE+p.PIXEL_BUFFER&&(a.geometry={points:[[c.x,c.y],[-b,0]]})};f._processGraphics=function(a,b,c){if(!b||!b.length||!this._meshFactory)return Promise.resolve(null);
const d=ea.GraphicsReader.from(b,this.uid,a.transform),e=this._meshFactory;return this._matcher.then(g=>e.analyzeGraphics(d,this.container.stage.resourceManager,g,null,null,c).then(()=>{this._attributeStore.sendUpdates();return this._processAnalyzedGraphics(a,d)}))};f._processAnalyzedGraphics=function(a,b){const c=this._meshFactory;var d=b.getSize();b=b.getCursor();const e=new Y.MeshData(a.key.id,{features:d,records:d,metrics:0},V.WGLSymbologyType.DEFAULT,!1,!1);for(d=[];b.next();){const g=b.readGraphic();
g.insertAfter=-1===g.insertAfter?-1:this._displayIds.get(g.insertAfter);g.displayId=this._displayIds.get(g.attributes[this.uid]);const h=new X(g.displayId);h.insertAfter=g.insertAfter;d.push(h);c.writeGraphic(e,b,a.level,this.container.stage.resourceManager)}a=e.serialize(a.tileInfoView.tileInfo.isWrappable);return 1!==a.length?new K.TileData:K.TileData.fromVertexData(a[0].message,d)};f._abortProcessingGraphic=function(a){this._graphicIdToAbortController.get(a)?.abort()};f._getNullSymbol=function(a){a=
a.geometry;return q.isPolyline(a)?E.errorPolylineSymbol2D:q.isPolygon(a)||q.isExtent(a)?E.errorPolygonSymbol2D:this.defaultPointSymbolEnabled?E.errorPointSymbol2D:null};f._flipUpdatingGraphics=function(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer);this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null;this.notifyChange("updating")},160);this.notifyChange("updating")};x._createClass(B,[{key:"updating",get:function(){return!this._attached||null!==this._updatingGraphicsTimer||
0<this._tileUpdateSet.size||0<this._tilesToUpdate.size||this._attributeStore.isUpdating()}}]);return B}(ia.GraphicsView(M.HandleOwnerMixin(t)));z.__decorate([A.property({constructOnly:!0})],t.prototype,"requestUpdateCallback",void 0);z.__decorate([A.property()],t.prototype,"container",void 0);z.__decorate([A.property({constructOnly:!0})],t.prototype,"graphics",void 0);z.__decorate([A.property()],t.prototype,"updating",null);z.__decorate([A.property()],t.prototype,"view",void 0);z.__decorate([A.property()],
t.prototype,"updateRequested",void 0);z.__decorate([A.property()],t.prototype,"defaultPointSymbolEnabled",void 0);return t=z.__decorate([P.subclass("esri.views.2d.layers.support.GraphicsView2D")],t)});