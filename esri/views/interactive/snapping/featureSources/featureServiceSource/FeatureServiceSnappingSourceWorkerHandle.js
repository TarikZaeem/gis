// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/workers/WorkerHandle ../../../../../geometry/support/typeUtils ../../../../../layers/graphics/dehydratedFeatures".split(" "),
function(g,e,h,r,n,t,k,z,A,u,v,w,x){g.FeatureServiceSnappingSourceWorkerHandle=function(p){function l(b){b=p.call(this,b)||this;b.schedule=null;b.hasZ=!1;b.elevationAlignPointsInFeatures=function(){var a=e._asyncToGenerator(function*(c){const d=[];for(const {points:m}of c)for(const {z:q}of m)d.push(q);return{elevations:d,drapedObjectIds:new Set,failedObjectIds:new Set}});return function(c){return a.apply(this,arguments)}}();b.queryForSymbologySnapping=e._asyncToGenerator(function*(){return{candidates:[],
sourceCandidateIndices:[]}});b.availability=0;b._workerHandleUpdating=!0;b._editId=0;return b}e._inheritsLoose(l,p);var f=l.prototype;f.destroy=function(){this._workerHandle.destroy()};f.initialize=function(){var b=this;this._workerHandle=new y(this.schedule,{alignElevation:function(){var a=e._asyncToGenerator(function*(c,{signal:d}){return{result:yield b.elevationAlignPointsInFeatures(c.points,d)}});return function(c,d){return a.apply(this,arguments)}}(),getSymbologyCandidates:function(){var a=e._asyncToGenerator(function*(c,
{signal:d}){return{result:yield b.queryForSymbologySnapping(c,d)}});return function(c,d){return a.apply(this,arguments)}}()});this.handles.add([this._workerHandle.on("notify-updating",({updating:a})=>this._workerHandleUpdating=a),this._workerHandle.on("notify-availability",({availability:a})=>this._set("availability",a))])};f.setup=function(){var b=e._asyncToGenerator(function*(a,c){const d=this._serviceInfoFromLayer(a.layer);n.isNone(d)||(a={configuration:this._convertConfiguration(a.configuration),
serviceInfo:d,spatialReference:a.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:a.layer.elevationInfo?.toJSON()},yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,c)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},c)))});return function(a,c){return b.apply(this,arguments)}}();f.configure=function(){var b=e._asyncToGenerator(function*(a,c){a=this._convertConfiguration(a);yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",
a,c));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},c))});return function(a,c){return b.apply(this,arguments)}}();f.refresh=function(){var b=e._asyncToGenerator(function*(a){yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},a));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},a))});return function(a){return b.apply(this,arguments)}}();f.fetchCandidates=function(){var b=e._asyncToGenerator(function*(a,
c){const d=a.point;a={distance:a.distance,mode:a.mode,point:x.makeDehydratedPoint(d[0],d[1],d[2],a.coordinateHelper.spatialReference.toJSON()),types:a.types,filter:n.isSome(a.filter)?a.filter.toJSON():null};return this._workerHandle.invoke(a,c)});return function(a,c){return b.apply(this,arguments)}}();f.updateTiles=function(){var b=e._asyncToGenerator(function*(a,c){a={tiles:a.tiles,tileInfo:n.isSome(a.tileInfo)?a.tileInfo.toJSON():null,tileSize:a.tileSize};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",
a,c));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},c))});return function(a,c){return b.apply(this,arguments)}}();f.applyEdits=function(){var b=e._asyncToGenerator(function*(a,c){var d=this._editId++;yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",{id:d},c));a=yield this.updatingHandles.addPromise(t.whenOrAbort(a.result,c));d={id:d,edits:{addedFeatures:a.addedFeatures?.map(({objectId:m})=>m).filter(n.isSome)??[],deletedFeatures:a.deletedFeatures?.map(({objectId:m,
globalId:q})=>({objectId:m,globalId:q}))??[],updatedFeatures:a.updatedFeatures?.map(({objectId:m})=>m).filter(n.isSome)??[]}};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",d,c));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},c))});return function(a,c){return b.apply(this,arguments)}}();f.getDebugInfo=function(b){return this._workerHandle.invokeMethod("getDebugInfo",{},b)};f.notifyElevationSourceChange=function(){var b=e._asyncToGenerator(function*(){yield this._workerHandle.invokeMethod("notifyElevationSourceChange",
{})});return function(){return b.apply(this,arguments)}}();f.notifySymbologyChange=function(){var b=e._asyncToGenerator(function*(){yield this._workerHandle.invokeMethod("notifySymbologyChange",{})});return function(){return b.apply(this,arguments)}}();f.setSymbologySnappingSupported=function(){var b=e._asyncToGenerator(function*(a){yield this._workerHandle.invokeMethod("setSymbologySnappingSupported",a)});return function(a){return b.apply(this,arguments)}}();f._convertConfiguration=function(b){return{filter:n.isSome(b.filter)?
b.filter.toJSON():null,customParameters:b.customParameters,viewType:b.viewType}};f._serviceInfoFromLayer=function(b){return"multipatch"===b.geometryType||"mesh"===b.geometryType?null:{url:b.parsedUrl?.path??"",fields:b.fields.map(a=>a.toJSON()),geometryType:w.featureGeometryTypeKebabDictionary.toJSON(b.geometryType),capabilities:b.capabilities,objectIdField:b.objectIdField,globalIdField:b.globalIdField,spatialReference:b.spatialReference.toJSON(),timeInfo:b.timeInfo?.toJSON()}};e._createClass(l,[{key:"updating",
get:function(){return this.updatingHandles.updating||this._workerHandleUpdating}}]);return l}(r.HandleOwner);h.__decorate([k.property({constructOnly:!0})],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"schedule",void 0);h.__decorate([k.property({constructOnly:!0})],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"hasZ",void 0);h.__decorate([k.property({constructOnly:!0})],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"elevationAlignPointsInFeatures",void 0);h.__decorate([k.property({constructOnly:!0})],
g.FeatureServiceSnappingSourceWorkerHandle.prototype,"queryForSymbologySnapping",void 0);h.__decorate([k.property({readOnly:!0})],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"updating",null);h.__decorate([k.property({readOnly:!0})],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",void 0);h.__decorate([k.property()],g.FeatureServiceSnappingSourceWorkerHandle.prototype,"_workerHandleUpdating",void 0);g.FeatureServiceSnappingSourceWorkerHandle=h.__decorate([u.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],
g.FeatureServiceSnappingSourceWorkerHandle);let y=function(p){function l(f,b){return p.call(this,"FeatureServiceSnappingSourceWorker","fetchCandidates",{},f,{strategy:"dedicated",client:b})||this}e._inheritsLoose(l,p);return l}(v.WorkerHandle);Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});