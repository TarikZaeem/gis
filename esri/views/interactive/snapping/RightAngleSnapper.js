// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../chunks/vec2 ../../../chunks/vec2f64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../support/elevationInfoUtils ./SnappingAlgorithm ./SnappingConstraint ./SnappingPoint ./snappingUtils ./candidates/RightAngleSnappingCandidate ../support/viewUtils".split(" "),function(w,B,C,l,D,x,p,q,r,E,h,F,y,t){r=function(z){function u(){return z.apply(this,arguments)||this}B._inheritsLoose(u,z);var v=u.prototype;v.snapNewVertex=
function(k,a){var c=a.editGeometryOperations.data.components[0],b=c.vertices.length;const d=[];if(2>b)return d;var {view:f}=this;const e=t.vectorToScreenPoint(k,a.spatialReference,q.absoluteHeightElevationInfo,f);var g=c.vertices[b-1];this.edgeExceedsShortLineThreshold(g.leftEdge,a)&&(b=h.anyMapPointToSnappingPoint(g.pos,f,a),g=h.anyMapPointToSnappingPoint(g.leftEdge.leftVertex.pos,f,a),this._checkForSnappingCandidate(d,g,b,k,e,a));b=c.vertices[0];this.edgeExceedsShortLineThreshold(b.rightEdge,a)&&
(c=h.anyMapPointToSnappingPoint(b.pos,f,a),f=h.anyMapPointToSnappingPoint(b.rightEdge.rightVertex.pos,f,a),this._checkForSnappingCandidate(d,f,c,k,e,a));return d};v.snapExistingVertex=function(k,a){const c=[];var b=C.unwrap(a.vertexHandle);if(3>b.component.vertices.length)return c;var {view:d}=this;const f=t.vectorToScreenPoint(k,a.spatialReference,q.absoluteHeightElevationInfo,d);var e=b.leftEdge;b=b.rightEdge;if(e&&e.leftVertex.leftEdge){var g=e.leftVertex.leftEdge;this.edgeExceedsShortLineThreshold(g,
a)&&(e=h.anyMapPointToSnappingPoint(g.rightVertex.pos,d,a),g=h.anyMapPointToSnappingPoint(g.leftVertex.pos,d,a),this._checkForSnappingCandidate(c,g,e,k,f,a))}b&&b.rightVertex.rightEdge&&(e=b.rightVertex.rightEdge,this.edgeExceedsShortLineThreshold(e,a)&&(b=h.anyMapPointToSnappingPoint(e.leftVertex.pos,d,a),d=h.anyMapPointToSnappingPoint(e.rightVertex.pos,d,a),this._checkForSnappingCandidate(c,d,b,k,f,a)));return c};v._checkForSnappingCandidate=function(k,a,c,b,d,f){const {spatialReference:e,pointer:g}=
f;l.subtract(m,c,a);const n=x.set(G,m[1],-m[0],0),A=l.dot(n,l.subtract(m,b,c))/l.squaredLength(n);b=h.asSnappingPoint(l.scaleAndAdd(p.clone(b),c,n,A));F.squaredScreenDistance(d,t.vectorToScreenPoint(b,e,q.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(g)&&!this.isVertical(b,c)&&!this.isVertical(c,a)&&(d=x.scaleAndAdd(p.create(),c,n,Math.sign(A)),k.push(new y.RightAngleSnappingCandidate({targetPoint:b,constraint:new E.VerticalHalfPlaneConstraint(c,h.asSnappingPoint(d)),previousVertex:a,
otherVertex:c,otherVertexType:y.OtherVertexType.CENTER,isDraped:"on-the-ground"===f.elevationInfo?.mode})))};return u}(r.SnappingAlgorithm);const m=D.create(),G=p.create();w.RightAngleSnapper=r;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});