// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../DimensionalDefinition ../LOD ../RasterStorageInfo ../TileInfo ./multidimensionalUtils ./RawBlockCache ../rasterFormats/pixelRangeUtils ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../geometry/Point ../../../geometry/Extent".split(" "),
function(z,C,A,ba,S,ca,da,t,ea,fa,E,ha,sa,ia,ja,ka,la,ma,na,T,O,G,oa,pa,I,x,U,J,K){A=function(V){function P(){var a=V.apply(this,arguments)||this;a.rasterJobHandler=null;a.datasetName=null;a.datasetFormat=null;a.hasUniqueSourceStorageInfo=!0;a.rasterInfo=null;a.ioConfig={sampling:"closest"};return a}z._inheritsLoose(P,V);var v=P.prototype;v.init=function(){var a=z._asyncToGenerator(function*(){const b=x.load();this.addResolvingPromise(b);yield this.when()});return function(){return a.apply(this,arguments)}}();
v.normalizeCtorArgs=function(a){a&&a.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:T.create(),...a.ioConfig}});return a};v.open=function(){var a=z._asyncToGenerator(function*(b){throw new S("BaseRaster:open-not-implemented","open() is not implemented");});return function(b){return a.apply(this,arguments)}}();v.fetchTile=function(){var a=z._asyncToGenerator(function*(b,c,d,e={}){const f=e.tileInfo||this.rasterInfo.storageInfo.tileInfo;b=this.getTileExtentFromTileInfo(b,
c,d,f);return this.fetchPixels(b,f.size[0],f.size[1],e)});return function(b,c,d){return a.apply(this,arguments)}}();v.identify=function(){var a=z._asyncToGenerator(function*(b,c={}){b=ha.ensureClass(J,b).clone().normalize();const {multidimensionalDefinition:d,timeExtent:e}=c;var {rasterInfo:f}=this;const {hasMultidimensionalTranspose:g,multidimensionalInfo:p}=f;var {transposedVariableName:k}=c,h=t.isSome(p)&&g&&(null!=e||O.isMultiSliceOrRangeDefinition(d));h&&!k&&(k=t.isSome(d)&&0<d.length?d[0].variableName??
void 0:p.variables[0].name,c={...c,transposedVariableName:k});c=this._getRequestOptionsWithSliceId(c);const {spatialReference:m,extent:u}=f;var {datumTransformation:q}=c;q=x.projectPoint(b,m,q);if(!u.intersects(q)||t.isSome(f.transform)&&(q=f.transform.inverseTransform(q),!f.nativeExtent.intersects(q)))return{location:q,value:null};let r=0;var n=t.isSome(k)&&t.isSome(p)&&f.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){h=this.primaryRasters.rasters[0];if(n)return h.identify(q,c);
({pixelSize:n}=f);c=3*n.x/2;n=3*n.y/2;c=new K({xmin:q.x-c,xmax:q.x+c,ymin:q.y-n,ymax:q.y+n,spatialReference:m});n={interpolation:"nearest"};({pixelBlock:h}=yield h.fetchPixels(c,3,3,n));({pixelBlock:c}=yield this.fetchPixels(c,3,3,n));if(t.isNone(h))return{location:q,value:null};h=!h.mask||h.mask[4]?h.pixels.map(F=>F[4]):null;var l;t.isSome(c)&&(l=!c.mask||c.mask[4]?c.pixels.map(F=>F[4]):void 0);return{location:q,value:h,processedValue:l,pyramidLevel:0}}if(!n)if(c.srcResolution)r=x.snapPyramid(c.srcResolution,
f,this.ioConfig.sampling).pyramidLevel;else if(r=yield this.computeBestPyramidLevelForLocation(b,c),null==r)return{location:q,value:null};l=this.identifyPixelLocation(q,r,null,n);if(null===l)return{location:q,value:null};const {row:w,col:y,rowOffset:D,colOffset:B,blockWidth:H}=l;l=k??t.unwrap(c.sliceId);l=G.getRasterId(this.url,l);f=`${r}/${w}/${y}`;k=G.getBlock(l,null,f);t.isNone(k)&&(k=this.fetchRawTile(r,w,y,c),G.putBlock(l,null,f,k));l=yield k;return t.isNone(l)||!l.pixels?.length?{location:q,
value:null}:this._processIdentifyResult(l,{srcLocation:q,position:D*H+B,pyramidLevel:r,useTransposedTile:!!n,requestSomeSlices:h,identifyOptions:c})});return function(b){return a.apply(this,arguments)}}();v.fetchPixels=function(){var a=z._asyncToGenerator(function*(b,c,d,e={}){b=x.snapExtent(b);e=this._getRequestOptionsWithSliceId(e);if(e.requestRawData)return this._fetchPixels(b,c,d,e);var f=x.getWorldWidth(b.spatialReference),g=x.getWorldWrapCount(b);if(t.isNone(f)||0===g||1===g&&this._isGlobalWrappableSource)return this._fetchPixels(b,
c,d,e);if(3<=g)return{extent:b,pixelBlock:null};const p=[],{xmin:k,xmax:h}=b,m=Math.round(f/(h-k)*c),u=m-Math.round((f/2-k)/(h-k)*c);let q=0;const r=[];for(let l=0;l<=g;l++){var n=new K({xmin:0===l?k:-f/2,xmax:l===g?h-f*l:f/2,ymin:b.ymin,ymax:b.ymax,spatialReference:b.spatialReference});const w=0===l?m-u:l===g?c-q:m;q+=w;r.push(w);n=e.disableWrapAround&&0<l?null:this._fetchPixels(n,w,d,e);p.push(n)}f=(yield Promise.all(p)).map(l=>l?.pixelBlock);g=null;c={width:c,height:d};g=this.rasterJobHandler?
(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:c,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:r},e)).pixelBlock:I.mosaic(f,c,{blockWidths:r});e=x.projectExtent(b,this.rasterInfo.spatialReference,e.datumTransformation);return{extent:b,srcExtent:e,pixelBlock:g}});return function(b,c,d){return a.apply(this,arguments)}}();v.fetchRawPixels=function(){var a=z._asyncToGenerator(function*(b,c,d,e={}){c={x:Math.floor(c.x),
y:Math.floor(c.y)};const f=yield this._fetchRawTiles(b,c,d,e),{nativeExtent:g,nativePixelSize:p,storageInfo:k}=this.rasterInfo;var h=2**b,m=p.x*h;h*=p.y;m=new K({xmin:g.xmin+m*c.x,xmax:g.xmin+m*(c.x+d.width-1),ymin:g.ymax-h*(c.y+d.height-1),ymax:g.ymax-h*c.y,spatialReference:g.spatialReference});if(!f)return{extent:m,srcExtent:m,pixelBlock:null};const {pixelBlocks:u,mosaicSize:q}=f;if(1===u.length&&t.isSome(u[0])&&u[0].width===d.width&&u[0].height===d.height)return{extent:m,srcExtent:m,pixelBlock:f.pixelBlocks[0]};
b={x:c.x%(0<b?k.pyramidBlockWidth:k.blockWidth),y:c.y%(0<b?k.pyramidBlockHeight:k.blockHeight)};d=this.rasterJobHandler?(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:q,destDimension:d,clipOffset:b,clipSize:d,coefs:null,sampleSpacing:null,interpolation:e.interpolation,alignmentInfo:null,blockWidths:null},e)).pixelBlock:I.mosaic(u,q,{clipOffset:b,clipSize:d});return{extent:m,srcExtent:m,pixelBlock:d}});return function(b,c,d){return a.apply(this,arguments)}}();v.fetchRawTile=
function(a,b,c,d){throw new S("BaseRaster:read-not-implemented","fetchRawTile() is not implemented");};v.computeExtent=function(a){return x.projectExtent(this.rasterInfo.extent,a)};v.decodePixelBlock=function(a,b){return!this.rasterJobHandler||b.useCanvas?pa.decode(a,b):this.rasterJobHandler.decode({data:a,options:b})};v.request=function(){var a=z._asyncToGenerator(function*(b,c,d=0){const {customFetchParameters:e}=this.ioConfig,{range:f,query:g,headers:p}=c;d=d??c.retryCount??this.ioConfig.retryCount;
const k=f?{Range:`bytes=${f.from}-${f.to}`}:null;try{return yield ba(b,{...c,query:{...g,...e},headers:{...p,...k}})}catch(h){if(0<d)return d--,this.request(b,c,d);throw h;}});return function(b,c){return a.apply(this,arguments)}}();v.getSliceIndex=function(a){const {multidimensionalInfo:b}=this.rasterInfo;return t.isNone(b)||t.isNone(a)||0===a.length?null:O.getSliceIndex(a,b)};v.getTileExtentFromTileInfo=function(a,b,c,d){a=t.unwrapOrThrow(d.lodAt(a));return this.getTileExtent({x:a.resolution,y:a.resolution},
b,c,d.origin,d.spatialReference,d.size)};v.updateTileInfo=function(){const {storageInfo:a,spatialReference:b,extent:c,pixelSize:d}=this.rasterInfo;if(!a.tileInfo){const f=[];var e=a.maximumPyramidLevel||0;let g=Math.max(d.x,d.y),p=1/.0254*96*g;for(let k=0;k<=e;k++)f.push(new ma({level:e-k,resolution:g,scale:p})),g*=2,p*=2;e=new J({x:c.xmin,y:c.ymax,spatialReference:b});a.tileInfo=new T({origin:e,size:[a.blockWidth,a.blockHeight],spatialReference:b,lods:f});a.isVirtualTileInfo=!0}};v.createRemoteDatasetStorageInfo=
function(a,b=512,c=512,d){const {width:e,height:f,nativeExtent:g,pixelSize:p,spatialReference:k}=a,h=new J({x:g.xmin,y:g.ymax,spatialReference:k});null==d&&(d=Math.max(0,Math.round(Math.log(Math.max(e,f))/Math.LN2-8)));const m=this.computeBlockBoundary(g,512,512,{x:g.xmin,y:g.ymax},[p],d);a.storageInfo=new na({blockWidth:b,blockHeight:c,pyramidBlockWidth:b,pyramidBlockHeight:c,origin:h,firstPyramidLevel:1,maximumPyramidLevel:d,blockBoundary:m})};v.computeBestPyramidLevelForLocation=function(){var a=
z._asyncToGenerator(function*(b,c){return 0});return function(b){return a.apply(this,arguments)}}();v.computeBlockBoundary=function(a,b,c,d,e,f=0,g=2){if(1===e.length&&0<f){e=[...e];let {x:h,y:m}=e[0];for(let u=0;u<f;u++)h*=g,m*=g,e.push({x:h,y:m})}f=[];const {x:p,y:k}=d;for(d=0;d<e.length;d++){const {x:h,y:m}=e[d];f.push({minCol:Math.floor((a.xmin-p+.1*h)/b/h),maxCol:Math.floor((a.xmax-p-.1*h)/b/h),minRow:Math.floor((k-a.ymax+.1*m)/c/m),maxRow:Math.floor((k-a.ymin-.1*m)/c/m)})}return f};v.getPyramidPixelSize=
function(a){const {nativePixelSize:b}=this.rasterInfo,{pyramidResolutions:c,pyramidScalingFactor:d}=this.rasterInfo.storageInfo;if(0===a)return b;if(t.isSome(c)&&c.length)return c[a-1];a=d**a;return{x:b.x*a,y:b.y*a}};v.identifyPixelLocation=function(a,b,c,d){const {spatialReference:e,nativeExtent:f,storageInfo:g}=this.rasterInfo,{maximumPyramidLevel:p,origin:k,transposeInfo:h}=g,m=d&&t.isSome(h)?h.tileSize[0]:g.blockWidth;d=d&&t.isSome(h)?h.tileSize[1]:g.blockHeight;a=x.projectPoint(a,e,c);if(!f.intersects(a)||
0>b||b>p)return null;c=this.getPyramidPixelSize(b);const {x:u,y:q}=c;c=(k.y-a.y)/q/d;const r=(a.x-k.x)/u/m;return{pyramidLevel:b,row:Math.floor(c),col:Math.floor(r),rowOffset:Math.min(d-1,Math.floor((c-Math.floor(c))*d)),colOffset:Math.min(m-1,Math.floor((r-Math.floor(r))*m)),blockWidth:m,srcLocation:a}};v.getTileExtent=function(a,b,c,d,e,f){const [g,p]=f;c=d.x+c*g*a.x;b=d.y-b*p*a.y;return new K({xmin:c,xmax:c+g*a.x,ymin:b-p*a.y,ymax:b,spatialReference:e})};v.getBlockWidthHeight=function(a){return{blockWidth:0<
a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}};v.isBlockOutside=function(a,b,c){a=this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<b||a.maxCol<c||a.minRow>b||a.minCol>c};v._fetchPixels=function(){var a=z._asyncToGenerator(function*(b,c,d,e={}){var f=x.getWorldWrapCount(b);if(2<=f)return{extent:b,pixelBlock:null};var g=this._getSourceDataInfo(b,
c,d,e);const {pyramidLevel:p,pyramidResolution:k,srcResolution:h,srcExtent:m,srcWidth:u,srcHeight:q}=g;if(0===u||0===q)return{extent:b,srcExtent:m,pixelBlock:null};var r=t.unwrap(this.rasterInfo.transform),n="gcs-shift"===r?.type,l=t.isSome(x.getWorldWidth(b.spatialReference));if(n||!l)f=x.getWorldWrapCount(g.srcExtent,n);var w=this.rasterInfo.storageInfo,y={x:Math.floor((m.xmin-w.origin.x)/k.x+.1),y:Math.floor((w.origin.y-m.ymax)/k.y+.1)};g=yield this._fetchRawTiles(p,y,{width:u,height:q,wrapCount:f},
e);if(!g)return{extent:b,srcExtent:m,pixelBlock:null};n=0<p?w.pyramidBlockWidth:w.blockWidth;const D=0<p?w.pyramidBlockHeight:w.blockHeight,B=n===u&&D===q&&0===y.x%n&&0===y.y%D;y=new J({x:(b.xmax-b.xmin)/c,y:(b.ymax-b.ymin)/d,spatialReference:b.spatialReference});const H=!b.spatialReference.equals(this.rasterInfo.spatialReference);({datumTransformation:w}=e);if(!H&&B&&1===g.pixelBlocks.length&&n===c&&D===d&&h.x===y.x&&h.y===y.y)return{extent:b,srcExtent:m,pixelBlock:g.pixelBlocks[0]};n=l&&t.isSome(x.getWorldWidth(m.spatialReference));
(l=e.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector"))&&!this.rasterJobHandler&&(yield x.load());f=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:b,srcBufferExtent:g.extent,pixelSize:y.toJSON(),datumTransformation:w,rasterTransform:r,hasWrapAround:0<f||n,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:l},e):x.getProjectionOffsetGrid({projectedExtent:b,srcBufferExtent:g.extent,pixelSize:y,datumTransformation:w,
rasterTransform:r,hasWrapAround:0<f||n,isAdaptive:!1,includeGCSGrid:l});r=!e.requestRawData;n={rows:f.spacing[0],cols:f.spacing[1]};y=t.unwrap(this._getRasterTileAlignmentInfo(p,g.extent.xmin));const {pixelBlocks:F,mosaicSize:L,isPartiallyFilled:Q}=g;g=null;this.rasterJobHandler?(c=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:L,destDimension:r?{width:c,height:d}:null,coefs:r?f.coefficients:null,sampleSpacing:r?n:null,projectDirections:l,gcsGrid:l?f.gcsGrid:null,isUV:"vector-uv"===
this.rasterInfo.dataType,interpolation:e.interpolation,alignmentInfo:y,blockWidths:null},e),{pixelBlock:r,localNorthDirections:g}=c):(y=I.mosaic(F,L,{alignmentInfo:y}),r=r?I.approximateTransform(y,{width:c,height:d},f.coefficients,n,e.interpolation):y,l&&f.gcsGrid&&(g=I.getLocalArithmeticNorthRotations({width:c,height:d},f.gcsGrid),r=U.convertToLocalDirections(r,this.rasterInfo.dataType,g)));return e.requestRawData||l?{srcExtent:m,pixelBlock:r,transformGrid:f,localNorthDirections:g,extent:b,isPartiallyFilled:Q}:
{srcExtent:m,extent:b,pixelBlock:r}});return function(b,c,d){return a.apply(this,arguments)}}();v._fetchRawTiles=function(){var a=z._asyncToGenerator(function*(b,c,d,e){const {origin:f,blockBoundary:g}=this.rasterInfo.storageInfo,{blockWidth:p,blockHeight:k}=this.getBlockWidthHeight(b);let {x:h,y:m}=c,{width:u,height:q,wrapCount:r}=d;var n=this._getRasterTileAlignmentInfo(b,0);e.buffer&&(h-=e.buffer.cols,m-=e.buffer.rows,u+=2*e.buffer.cols,q+=2*e.buffer.rows);var l=0,w=0;let y=0;r&&t.isSome(n)&&({worldColumnCountFromOrigin:w,
originColumnOffset:y,rightPadding:l}=n,w*n.blockWidth-l>=h+u&&(l=0));c=Math.floor(h/p);d=Math.floor(m/k);const D=Math.floor((h+u+l-1)/p);l=Math.floor((m+q+l-1)/k);var B=g[b];if(!B)return null;const {minRow:H,minCol:F,maxCol:L,maxRow:Q}=B;if(0===r&&(l<H||D<F||d>Q||c>L))return null;B=[];let W=!1;const qa=null==this.ioConfig.allowPartialFill?e.allowPartialFill:this.ioConfig.allowPartialFill;for(let M=d;M<=l;M++)for(let N=c;N<=D;N++){let R=N;!e.disableWrapAround&&r&&t.isSome(n)&&w<=N&&(R=N-w-y);if(M>=
H&&R>=F&&Q>=M&&L>=R){const X=this._fetchRawTile(b,M,R,e);qa?B.push(new Promise(Y=>{X.then(ra=>Y(ra)).catch(()=>{W=!0;Y(null)})})):B.push(X)}else B.push(Promise.resolve(null))}if(0===B.length)return null;e=yield Promise.all(B);n={height:(l-d+1)*k,width:(D-c+1)*p};({spatialReference:w}=this.rasterInfo);b=this.getPyramidPixelSize(b);const {x:Z,y:aa}=b;return{extent:new K({xmin:f.x+c*p*Z,xmax:f.x+(D+1)*p*Z,ymin:f.y-(l+1)*k*aa,ymax:f.y-d*k*aa,spatialReference:w}),pixelBlocks:e,mosaicSize:n,isPartiallyFilled:W}});
return function(b,c,d,e){return a.apply(this,arguments)}}();v._fetchRawTile=function(a,b,c,d){var e=this.rasterInfo.storageInfo.blockBoundary[a];if(!e)return Promise.resolve(null);const {minRow:f,minCol:g,maxCol:p,maxRow:k}=e;if(b<f||c<g||b>k||c>p)return Promise.resolve(null);const h=G.getRasterId(this.url,d.sliceId),m=`${a}/${b}/${c}`;e=G.getBlock(h,d.registryId,m);if(t.isNone(e)){const u=new AbortController;e=this.fetchRawTile(a,b,c,{...d,signal:u.signal});G.putBlock(h,d.registryId,m,e,u);e.catch(()=>
G.deleteBlock(h,d.registryId,m))}if(d.signal)fa.onAbort(d,()=>{G.decreaseRefCount(h,d.registryId,m)});return e};v._computeMagDirValues=function(a){const {bandCount:b,dataType:c}=this.rasterInfo;if((2!==b||"vector-magdir"!==c)&&"vector-uv"!==c||2!==a?.length||!a[0]?.length)return null;var d=a[0].length;if("vector-magdir"===c)return d=a[1].map(p=>(p+360)%360),[a[0],d];const [e,f]=a;a=[];const g=[];for(let p=0;p<d;p++){const [k,h]=U.uvComponentToVector([e[p],f[p]]);a.push(k);g.push(h)}return[a,g]};v._getRasterTileAlignmentInfo=
function(a,b){null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=x.getRasterDatasetAlignmentInfo(this.rasterInfo));return t.isNone(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:b,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[a]}};v._getSourceDataInfo=function(a,b,c,d={}){const e={datumTransformation:d.datumTransformation,pyramidLevel:0,pyramidResolution:null,
srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};d.srcResolution&&(e.srcResolution=d.srcResolution,this._updateSourceDataInfo(a,e));var f=this.rasterInfo.storageInfo.maximumPyramidLevel||0;const {srcWidth:g,srcHeight:p,pyramidLevel:k}=e;var h=g/b;const m=p/c,u=k<f&&16<=h*m;var q=k===f&&this._requireTooManySrcTiles(g,p,b,c);if(u||q||0===g||0===p){q=new J({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/c,spatialReference:a.spatialReference});q=x.projectResolution(q,this.rasterInfo.spatialReference,
a,e.datumTransformation);const r=!q||d.srcResolution&&q.x+q.y<d.srcResolution.x+d.srcResolution.y;u&&d.srcResolution&&r&&(h=Math.round(Math.log(Math.max(h,m))/Math.LN2)-1,f-k+3>=h&&(f=2**h,q={x:d.srcResolution.x*f,y:d.srcResolution.y*f}));q&&(e.srcResolution=q,this._updateSourceDataInfo(a,e))}this._requireTooManySrcTiles(e.srcWidth,e.srcHeight,b,c)&&(e.srcWidth=0,e.srcHeight=0);return e};v._requireTooManySrcTiles=function(a,b,c,d){const {tileInfo:e}=this.rasterInfo.storageInfo;return 256<=Math.ceil(a/
e.size[0])*Math.ceil(b/e.size[1])||8<a/c||8<b/d};v._updateSourceDataInfo=function(a,b){b.srcWidth=0;b.srcHeight=0;var c=this.rasterInfo.spatialReference;const {srcResolution:d,datumTransformation:e}=b,{pyramidLevel:f,pyramidResolution:g,excessiveReading:p}=x.snapPyramid(d,this.rasterInfo,this.ioConfig.sampling);p||(a=b.srcExtent||x.projectExtent(a,c,e),null!=a&&((c=t.unwrap(this.rasterInfo.transform))&&(a=c.inverseTransform(a)),b.srcExtent=a,c=Math.ceil((a.xmax-a.xmin)/g.x-.1),a=Math.ceil((a.ymax-
a.ymin)/g.y-.1),b.pyramidLevel=f,b.pyramidResolution=g,b.srcWidth=c,b.srcHeight=a))};v._getRequestOptionsWithSliceId=function(a){t.isSome(this.rasterInfo.multidimensionalInfo)&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)});return a};v._processIdentifyResult=function(a,b){const {srcLocation:c,position:d,pyramidLevel:e,useTransposedTile:f}=b,g=a.pixels[0].length/a.width/a.height;if(a.mask&&!a.mask[d])return{location:c,value:null};const {multidimensionalInfo:p}=
this.rasterInfo;if(t.isNone(p)||!f)return b=a.pixels.map(n=>n[d]),a={location:c,value:b,pyramidLevel:e},b=this._computeMagDirValues(b.map(n=>[n])),b?.length&&(a.magdirValue=b.map(n=>n[0])),a;let k=a.pixels.map(n=>n.slice(d*g,d*g+g)),h=this._computeMagDirValues(k);const {requestSomeSlices:m,identifyOptions:u}=b;let q=O.createSlices(p,u.transposedVariableName);if(m){const n=O.getSliceIds(q,t.unwrap(u.multidimensionalDefinition),t.unwrap(u.timeExtent));k=k.map(l=>n.map(w=>l[w]));h=h?.map(l=>n.map(w=>
l[w]));q=n.map(l=>q[l])}b=a.noDataValues||this.rasterInfo.noDataValue;a={pixels:k,pixelType:a.pixelType};let r;t.isSome(b)&&(oa.convertNoDataToMask(a,b),r=a.mask);a=q.map((n,l)=>{n={value:0===r?.[l]?null:k.map(w=>w[l]),multidimensionalDefinition:n.multidimensionalDefinition.map(w=>new la({...w,isSlice:!0}))};h?.length&&(n.magdirValue=[h[0][l],h[1][l]]);return n});return{location:c,value:null,dataSeries:a,pyramidLevel:e}};z._createClass(P,[{key:"_isGlobalWrappableSource",get:function(){const {rasterInfo:a}=
this,b=x.getWorldWidth(a.spatialReference);return t.isSome(b)&&a.extent.width>=b/2}},{key:"url",set:function(a){this._set("url",ja.sanitizeUrl(a,da.getLogger(this.declaredClass)))}}]);return P}(ea.EsriPromiseMixin(ca.JSONSupport));C.__decorate([E.property()],A.prototype,"_rasterTileAlighmentInfo",void 0);C.__decorate([E.property({readOnly:!0})],A.prototype,"_isGlobalWrappableSource",null);C.__decorate([E.property(ka.url)],A.prototype,"url",null);C.__decorate([E.property({type:String,json:{write:!0}})],
A.prototype,"datasetName",void 0);C.__decorate([E.property({type:String,json:{write:!0}})],A.prototype,"datasetFormat",void 0);C.__decorate([E.property()],A.prototype,"hasUniqueSourceStorageInfo",void 0);C.__decorate([E.property()],A.prototype,"rasterInfo",void 0);C.__decorate([E.property()],A.prototype,"ioConfig",void 0);C.__decorate([E.property()],A.prototype,"sourceJSON",void 0);return A=C.__decorate([ia.subclass("esri.layers.support.rasterDatasets.BaseRaster")],A)});