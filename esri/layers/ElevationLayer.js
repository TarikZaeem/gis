// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../request ../core/Error ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../geometry/HeightModelInfo ./Layer ./mixins/ArcGISCachedService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./support/commonProperties ./support/ElevationTileData ./support/LercDecoder".split(" "),
function(t,l,f,u,w,p,d,q,x,g,K,L,y,z,A,B,C,D,E,F,G,H,I){d=function(v){function n(...a){a=v.call(this,...a)||this;a.copyright=null;a.heightModelInfo=null;a.path=null;a.minScale=void 0;a.maxScale=void 0;a.opacity=1;a.operationalLayerType="ArcGISTiledElevationServiceLayer";a.sourceJSON=null;a.type="elevation";a.url=null;a.version=null;a._lercDecoder=I.acquireDecoder();return a}l._inheritsLoose(n,v);var h=n.prototype;h.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};h.destroy=
function(){this._lercDecoder=p.releaseMaybe(this._lercDecoder)};h.readVersion=function(a,b){(a=b.currentVersion)||(a=9.3);return a};h.load=function(a){const b=p.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let c=0;c<e.typeKeywords.length;c++)if("elevation 3d layer"===e.typeKeywords[c].toLowerCase())return!0;throw new w("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",
{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"});}},a).catch(q.throwIfAbortError).then(()=>this._fetchImageService(b)));return Promise.resolve(this)};h.fetchTile=function(a,b,e,c){c=c||{signal:null};const k=p.isSome(c.signal)?c.signal:c.signal=(new AbortController).signal,m={responseType:"array-buffer",signal:k},J={noDataValue:c.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(a,b,e,c)).then(()=>u(this.getTileUrl(a,b,e),m)).then(r=>this._lercDecoder.decode(r.data,
J,k)).then(r=>new H.ElevationTileData(r))};h.getTileUrl=function(a,b,e){const c=x.objectToQuery({...this.parsedUrl.query,blankTile:!this.tilemapCache&&this.supportsBlankTile?!1:null});return`${this.parsedUrl.path}/tile/${a}/${b}/${e}${c?"?"+c:""}`};h.queryElevation=function(){var a=l._asyncToGenerator(function*(b,e){const {ElevationQuery:c}=yield new Promise((k,m)=>t(["./support/ElevationQuery"],k,m));q.throwIfAborted(e);return(new c).query(this,b,e)});return function(b,e){return a.apply(this,arguments)}}();
h.createElevationSampler=function(){var a=l._asyncToGenerator(function*(b,e){const {ElevationQuery:c}=yield new Promise((k,m)=>t(["./support/ElevationQuery"],k,m));q.throwIfAborted(e);return(new c).createSampler(this,b,e)});return function(b,e){return a.apply(this,arguments)}}();h._fetchTileAvailability=function(a,b,e,c){return this.tilemapCache?this.tilemapCache.fetchAvailability(a,b,e,c):Promise.resolve("unknown")};h._fetchImageService=function(){var a=l._asyncToGenerator(function*(b){if(this.sourceJSON)return this.sourceJSON;
b=yield u(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:b});b.ssl&&(this.url=this.url?.replace(/^http:/i,"https:"));this.sourceJSON=b.data;this.read(b.data,{origin:"service",url:this.parsedUrl})});return function(b){return a.apply(this,arguments)}}();l._createClass(n,[{key:"hasOverriddenFetchTile",get:function(){return!this.fetchTile.__isDefault__}}]);return n}(C.ArcGISCachedService(D.ArcGISService(E.OperationalLayer(F.PortalLayer(d.MultiOriginJSONMixin(B))))));
f.__decorate([g.property({json:{read:{source:"copyrightText"}}})],d.prototype,"copyright",void 0);f.__decorate([g.property({readOnly:!0,type:A})],d.prototype,"heightModelInfo",void 0);f.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],d.prototype,"path",void 0);f.__decorate([g.property({type:["show","hide"]})],d.prototype,"listMode",void 0);f.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},
"web-document":{read:!1,write:!1}}},readOnly:!0})],d.prototype,"minScale",void 0);f.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],d.prototype,"maxScale",void 0);f.__decorate([g.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],d.prototype,"opacity",void 0);f.__decorate([g.property({type:["ArcGISTiledElevationServiceLayer"]})],d.prototype,"operationalLayerType",
void 0);f.__decorate([g.property()],d.prototype,"sourceJSON",void 0);f.__decorate([g.property({json:{read:!1},value:"elevation",readOnly:!0})],d.prototype,"type",void 0);f.__decorate([g.property(G.url)],d.prototype,"url",void 0);f.__decorate([g.property()],d.prototype,"version",void 0);f.__decorate([y.reader("version",["currentVersion"])],d.prototype,"readVersion",null);d=f.__decorate([z.subclass("esri.layers.ElevationLayer")],d);d.prototype.fetchTile.__isDefault__=!0;return d});