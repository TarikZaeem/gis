// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../rasterRenderers ../../request ../../core/Error ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/accessorSupport/decorators/subclass ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/MultidimensionalSubset ../support/RasterFunction ../support/RasterJobHandler ../support/TileInfo ../support/rasterDatasets/FunctionRaster ../support/rasterDatasets/multidimensionalUtils ../support/rasterFunctions/rasterFunctionHelper ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(B,t,h,W,F,G,C,H,k,m,X,Y,I,J,K,L,M,N,D,O,P,Q,w,R,S,v,T,U,V){const E=H.getLogger("esri.layers.mixins.ImageryTileMixin");B.ImageryTileMixin=g=>{function z(x){if(!x.raster||!x.rasterInfo)throw new C("imagery-tile","no raster");}g=function(x){function A(...c){var a=x.call(this,...c)||this;a._isConstructedFromFunctionRaster=!1;a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a.bandIds=null;a.copyright=null;a.interpolation="nearest";a.multidimensionalSubset=null;a.raster=null;
a.rasterFunction=null;a.rasterInfo=null;a.sourceJSON=null;a.spatialReference=null;a.symbolizer=null;a._isConstructedFromFunctionRaster="Function"===c[0]?.raster?.datasetFormat;return a}t._inheritsLoose(A,x);var l=A.prototype;l.convertVectorFieldData=function(){var c=t._asyncToGenerator(function*(a,b){if(k.isNone(a)||!this.rasterInfo)return null;const d=this._rasterJobHandler.instance,e=this.rasterInfo.dataType;return d?d.convertVectorFieldData({pixelBlock:a,dataType:e},b):S.convertVectorFieldData(a,
e)});return function(a,b){return c.apply(this,arguments)}}();l.createFlowMesh=function(){var c=t._asyncToGenerator(function*(a,b){const d=this._rasterJobHandler.instance;return d?d.createFlowMesh(a,b):U.createFlowMesh(a.meshType,a.simulationSettings,a.flowData,k.isSome(b.signal)?b.signal:(new AbortController).signal)});return function(a,b){return c.apply(this,arguments)}}();l.normalizeRasterFetchOptions=function(c){var {multidimensionalInfo:a}=this.rasterInfo??{};if(k.isNone(a))return c;let b=c.multidimensionalDefinition||
this.multidimensionalDefinition;if(k.isNone(b)||!b.length)b=w.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset});var d=c.timeExtent||this.timeExtent;if(k.isSome(b)&&k.isSome(d)&&(k.isSome(d.start)||k.isSome(d.end))){b=b.map(f=>f.clone());var e=a.variables.find(({name:f})=>f===b[0].variableName)?.dimensions?.find(({name:f})=>"StdTime"===f);a=b.find(({dimensionName:f})=>"StdTime"===f);if(!e||!a)return{...c,multidimensionalDefinition:null};
const {start:n,end:r}=d;d=k.isNone(n)?null:n.getTime();const y=k.isNone(r)?null:r.getTime(),p=d??y,q=y??d;if(k.isSome(e.values))e=e.values.filter(f=>{if(Array.isArray(f)){if(p===q)return f[0]<=p&&f[1]>=p;const u=f[0]>=p&&f[1]<=q||f[0]<p&&f[1]>q;return f[0]<=p&&f[1]>p||f[0]<q&&f[1]>=q||u}return p===q?f===p:f>=p&&f<=q}),e.length?(e=e.sort((f,u)=>p===q?(f[0]??f)-(u[0]??u):Math.abs((f[1]??f)-q)-Math.abs((u[1]??u)-q))[0],a.values=[e]):b=null;else if(e.hasRegularIntervals&&e.extent){const [f,u]=e.extent;
p>u||q<f?b=null:a.values=p===q?[p]:[Math.max(f,p),Math.min(u,q)]}}return k.isSome(b)&&w.hasExcludedVariableOrDimension(b,this.multidimensionalSubset)?{...c,multidimensionalDefinition:null}:{...c,multidimensionalDefinition:b}};l.updateRasterFunction=function(){var c=t._asyncToGenerator(function*(){if("imagery-tile"===this.type&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson))if(this._isConstructedFromFunctionRaster&&
"Function"===this.raster.datasetFormat){var a=this.raster.rasterFunction.toJSON();!this.rasterFunction&&a&&this._set("rasterFunction",D.fromJSON(a));this._cachedRasterFunctionJson=this.rasterFunction?.toJSON()}else{var b=this.raster;a=!1;if("Function"===b.datasetFormat){var d=b.primaryRasters.rasters;b=d[0];a=!0}else d=[b];var {rasterFunction:e}=this;if(e){const r={raster:b};1<d.length&&d.forEach(y=>r[y.url]=y);b=R.create(e.rasterFunctionDefinition??e.toJSON(),r);b=new Q({rasterFunction:b});b.rasterJobHandler=
this._rasterJobHandler.instance;yield b.open();this._cachedRasterFunctionJson=this.rasterFunction?.toJSON();this.raster=b}else this.raster=b,this._cachedRasterFunctionJson=null;this._cachedRendererJson=null;if(a||e){({bandIds:a}=this);var {bandCount:n}=this.raster.rasterInfo;e=a?.length?a.some(r=>r>=n):3<=n;a&&(e||"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null);this._configDefaultRenderer("auto")}}});return function(){return c.apply(this,arguments)}}();l.updateRenderer=function(){var c=
t._asyncToGenerator(function*(){const {loaded:a,symbolizer:b}=this;if(a&&b){var {rasterInfo:d}=this.raster,e=w.getDefaultVariablInfo(d,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,n=v.normalizeRendererJSON({...this.renderer.toJSON(),variableName:e});if(JSON.stringify(this._cachedRendererJson)!==JSON.stringify(n)){var r=this._rasterJobHandler.instance;r&&(b.rasterInfo=v.getVariableRasterInfo(d,e),b.rendererJSON=n,b.bind(),yield r.updateSymbolizer(b),
this._cachedRendererJson=n)}}});return function(){return c.apply(this,arguments)}}();l.applyRenderer=function(){var c=t._asyncToGenerator(function*(a,b){var d=a&&a.pixelBlock;if(!(k.isSome(d)&&d.pixels&&0<d.pixels.length))return null;yield this.updateRenderer();d=this._rasterJobHandler.instance;const e=this.bandIds??[];return d?yield d.symbolize({...a,simpleStretchParams:b,bandIds:e}):this.symbolizer.symbolize({...a,simpleStretchParams:b,bandIds:e})});return function(a,b){return c.apply(this,arguments)}}();
l.getTileUrl=function(c,a,b){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${c}/${a}/${b}`:""};l.getCompatibleTileInfo=function(c,a,b=!1){if(!this.loaded||k.isNone(a))return null;if(b&&c.equals(this.spatialReference))return this.tileInfo;b=J.getInfo(c);return P.create({size:256,spatialReference:c,origin:b?{x:b.origin[0],y:b.origin[1]}:{x:a.xmin,y:a.ymax}})};l.getCompatibleFullExtent=function(c){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(c)?
this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(c):null};l.fetchTile=function(){var c=t._asyncToGenerator(function*(a,b,d,e={}){z(this);if(e.requestAsImageElement)return a=this.getTileUrl(a,b,d),G(a,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:e.signal}).then(r=>r.data);const {rasterInfo:n}=this;if(k.isSome(n.multidimensionalInfo)&&(e=this.normalizeRasterFetchOptions(e),k.isNone(e.multidimensionalDefinition)))return{extent:this.raster.getTileExtentFromTileInfo(a,
b,d,e.tileInfo||n.storageInfo.tileInfo),pixelBlock:null};yield this._initJobHandler();yield this.updateRasterFunction();"raster-shaded-relief"===this.renderer.type&&(e={...e,buffer:{cols:1,rows:1}});return this.raster.fetchTile(a,b,d,e)});return function(a,b,d){return c.apply(this,arguments)}}();l.fetchPixels=function(){var c=t._asyncToGenerator(function*(a,b,d,e={}){if(k.isSome(this.rasterInfo.multidimensionalInfo)&&(e=this.normalizeRasterFetchOptions(e),k.isNone(e.multidimensionalDefinition)))return{extent:a,
pixelBlock:null};yield this._initJobHandler();yield this.updateRasterFunction();return this.raster.fetchPixels(a,b,d,e)});return function(a,b,d){return c.apply(this,arguments)}}();l.identify=function(){var c=t._asyncToGenerator(function*(a,b={}){const {raster:d,rasterInfo:e}=this;if(k.isSome(e.multidimensionalInfo)&&(!e.hasMultidimensionalTranspose||!(w.isMultiSliceOrRangeDefinition(b.multidimensionalDefinition)||b.transposedVariableName||b.timeExtent))&&(b=this.normalizeRasterFetchOptions(b),k.isNone(b.multidimensionalDefinition)))return{location:a,
value:null};const n=this.multidimensionalSubset?.areaOfInterest;if(n&&!n.contains(a))throw new C("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return d.identify(a,b)});return function(a){return c.apply(this,arguments)}}();l.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};l.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};
l.hasStandardTime=function(){const c=this.rasterInfo?.multidimensionalInfo;if(k.isNone(c)||"standard-time"!==this.rasterInfo?.dataType)return!1;const a=this.multidimensionalDefinition,b=a?.[0]?.variableName;return c.variables.some(d=>d.name===b&&(!a?.[0].dimensionName||d.dimensions.some(e=>"StdTime"===e.name)))};l.getStandardTimeValue=function(c){return(new Date(864E5*(c-25569))).toString()};l.getMultidimensionalSubsetVariables=function(c){return w.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,
c??this.rasterInfo?.multidimensionalInfo)};l._configDefaultSettings=function(){this._configDefaultInterpolation();this.multidimensionalDefinition||(this.multidimensionalDefinition=w.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));this._configDefaultRenderer()};l._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const c=new O;this._rasterJobHandler.connectionPromise=
c.initialize().then(()=>{z(this);this._rasterJobHandler.instance=c;this.raster.rasterJobHandler=c;this.renderer&&this.updateRenderer();"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()}).catch(()=>{});return this._rasterJobHandler.connectionPromise};l._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=
null;this.raster&&(this.raster.rasterJobHandler=null)};l._configDefaultInterpolation=function(){if(null==this.interpolation){z(this);var {raster:c}=this;c=v.getDefaultInterpolation(c.rasterInfo,c.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",c)}};l._configDefaultRenderer=function(c="no"){z(this);var {rasterInfo:a}=this.raster;!this.bandIds&&1<a.bandCount&&(this.bandIds=v.getDefaultBandCombination(a));var b=w.getDefaultVariablInfo(a,{multidimensionalDefinition:this.multidimensionalDefinition,
multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===c){var d=v.createDefaultRenderer(a,{bandIds:this.bandIds,variableName:b});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===d.type&&(1E24<(a.statistics?.[0].max??0)||-1E24>(a.statistics?.[0].min??0))&&(d.dynamicRangeAdjustment=!0,d.statistics=null,"none"===d.stretchType&&(d.stretchType="min-max"));this.renderer=d}d=v.normalizeRendererJSON({...this.renderer.toJSON(),variableName:b});a=v.getVariableRasterInfo(a,
b);this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=a):this.symbolizer=new T({rendererJSON:d,rasterInfo:a});a=this.symbolizer.bind();a.success?"auto"===c&&({colormap:a}=this.raster.rasterInfo,c=this.renderer,k.isSome(a)?"raster-colormap"!==c.type?this._configDefaultRenderer("override"):(a=v.createDefaultRenderer(this.raster.rasterInfo),JSON.stringify(a)!==JSON.stringify(c)&&this._configDefaultRenderer("override")):"raster-stretch"===c.type&&(a=this.bandIds?.length,b=c.statistics?.length,
!c.dynamicRangeAdjustment&&b&&a&&b!==a&&this._configDefaultRenderer("override"))):(E.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer."),"auto"===c&&this._configDefaultRenderer("override"))};t._createClass(A,[{key:"fullExtent",get:function(){return this.rasterInfo?.extent}},{key:"multidimensionalDefinition",set:function(c){this._set("multidimensionalDefinition",c);this.updateRenderer()}},{key:"tileInfo",get:function(){return this.rasterInfo?.storageInfo.tileInfo}},
{key:"url",set:function(c){this._set("url",K.sanitizeUrl(c,E))}},{key:"renderer",set:function(c){this._set("renderer",c);this.updateRenderer()}}]);return A}(g);h.__decorate([m.property()],g.prototype,"_cachedRendererJson",void 0);h.__decorate([m.property()],g.prototype,"_cachedRasterFunctionJson",void 0);h.__decorate([m.property()],g.prototype,"_compatibleFullExtent",void 0);h.__decorate([m.property()],g.prototype,"_isConstructedFromFunctionRaster",void 0);h.__decorate([m.property()],g.prototype,
"_rasterJobHandler",void 0);h.__decorate([m.property()],g.prototype,"bandIds",void 0);h.__decorate([m.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],g.prototype,"copyright",void 0);h.__decorate([m.property({json:{read:!1}})],g.prototype,"fullExtent",null);h.__decorate([m.property()],g.prototype,"interpolation",void 0);h.__decorate([m.property()],g.prototype,"ioConfig",void 0);h.__decorate([m.property({type:[M],json:{write:!0}})],g.prototype,"multidimensionalDefinition",null);
h.__decorate([m.property({type:N,json:{write:!0}})],g.prototype,"multidimensionalSubset",void 0);h.__decorate([m.property()],g.prototype,"raster",void 0);h.__decorate([m.property({type:D})],g.prototype,"rasterFunction",void 0);h.__decorate([m.property()],g.prototype,"rasterInfo",void 0);h.__decorate([m.property()],g.prototype,"sourceJSON",void 0);h.__decorate([m.property({readOnly:!0,type:V,json:{read:!1}})],g.prototype,"spatialReference",void 0);h.__decorate([m.property({json:{read:!1}})],g.prototype,
"tileInfo",null);h.__decorate([m.property(L.url)],g.prototype,"url",null);h.__decorate([m.property({types:F.rasterRendererTypes})],g.prototype,"renderer",null);h.__decorate([m.property()],g.prototype,"symbolizer",void 0);return g=h.__decorate([I.subclass("esri.layers.ImageryTileMixin")],g)};Object.defineProperty(B,Symbol.toStringTag,{value:"Module"})});