// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.26/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Accessor ../../core/Error ../../core/Logger ../../core/maybe ../../core/sql ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/accessorSupport/decorators/subclass ../../geohash/geohashUtils ../../geometry/Polygon ../../geometry/projection ../../geometry/support/spatialReferenceUtils ./SessionMemoryStorage ../../rest/knowledgeGraphService ../../rest/knowledgeGraph/GraphQueryStreaming ../../rest/support/Query".split(" "),
function(t,D,C,U,L,V,p,O,E,ba,ca,W,P,X,Q,R,M,S,H,Y){const Z=V.getLogger("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager");t.KnowledgeGraphLayerDataManager=function(T){function N(l){var b=T.call(this,l)||this;b.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map};b.entityTypeNames=new Set;b.relationshipTypeNames=new Set;b.geographicLookup=new Map;b.sublayerCaches=new Map;b._processingCacheUpdatesLookup=new Map;b._memberIdTypeLookup=new Map;const c=
new Map;l.knowledgeGraph.dataModel.entityTypes?.forEach(f=>{f.name&&(c.set(f.name,"entity"),b._processingCacheUpdatesLookup.set(f.name,[]),l.inclusionModeDefinition&&!l.inclusionModeDefinition?.generateAllSublayers||b.entityTypeNames.add(f.name),f.properties?.forEach(d=>{d.geometryType&&"esriGeometryNull"!==d.geometryType&&b.geographicLookup.set(f.name,{name:d.name?d.name:"",geometryType:d.geometryType})}))});l.knowledgeGraph.dataModel.relationshipTypes?.forEach(f=>{f.name&&(c.set(f.name,"relationship"),
b._processingCacheUpdatesLookup.set(f.name,[]),l.inclusionModeDefinition&&!l.inclusionModeDefinition?.generateAllSublayers||b.relationshipTypeNames.add(f.name),f.properties?.forEach(d=>{d.geometryType&&"esriGeometryNull"!==d.geometryType&&b.geographicLookup.set(f.name,{name:d.name?d.name:"",geometryType:d.geometryType})}))});l.inclusionModeDefinition?.namedTypeDefinitions.forEach((f,d)=>{if("entity"===c.get(d))b.entityTypeNames.add(d);else if("relationship"===c.get(d))b.relationshipTypeNames.add(d);
else{Z.warn(`A named type, ${d}, was in the inclusion list that wasn't in the data model and will be removed`);l.inclusionModeDefinition?.namedTypeDefinitions.delete(d);return}const k=new Map;f.members?.forEach(q=>{b._memberIdTypeLookup.set(q.id,d);const m=b.getById(q.id);m&&k.set(q.id,m)});b.sublayerCaches.set(d,k)});return b}D._inheritsLoose(N,T);var F=N.prototype;F.addToLayerInclusionSet=function(){var l=D._asyncToGenerator(function*(b,c=!1){b.forEach((f,d)=>{if(!this.inclusionModeDefinition)throw new L("knowledge-graph:layer-data-manager",
"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");if(!this.inclusionModeDefinition.namedTypeDefinitions.has(f)){var k=new Map;k.set(d,{id:d});this.inclusionModeDefinition.namedTypeDefinitions.set(f,{useAllData:!1,members:k});this._memberIdTypeLookup.set(d,f)}else if(this.inclusionModeDefinition.namedTypeDefinitions.has(f)){k=this.inclusionModeDefinition.namedTypeDefinitions.get(f);if(k.useAllData)throw new L("knowledge-graph:layer-data-manager",
"You cannot add members to an exclusion list for a sublayer where the sublayer is set to always retrieve its entire data set");k.members||(k.members=new Map);k.members.set(d,{id:d});this._memberIdTypeLookup.set(d,f)}});c&&(yield this.refreshCacheContent(Array.from(b.keys())))});return function(b){return l.apply(this,arguments)}}();F.getById=function(l){return M.getInstance().readFromStoreById(l)};F.getData=function(){var l=D._asyncToGenerator(function*(b,c,f){if(c.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&
0<this.inclusionModeDefinition.namedTypeDefinitions.size&&!this.inclusionModeDefinition.namedTypeDefinitions.has(c.objectType.name))return[];b=b?b:new Y({where:"1\x3d1",outFields:["*"]});if("link-chart"===c.parentCompositeLayer.type){const d=c.parentCompositeLayer;f=this._processingCacheUpdatesLookup.get(c.objectType.name?c.objectType.name:"");const k=p.unwrap(b.outFields),q=p.unwrap(b.geometry);let m="",w="";q&&q.extent&&(m=P.encodeGeohash(q.extent.ymin,q.extent.xmin,12),w=P.encodeGeohash(q.extent.ymax,
q.extent.xmax,12));k&&1===k.length&&"ESRI__ID"===k[0]&&"1\x3d1"===p.unwrap(b.where)||(yield Promise.all(f?f:[]));const a=[];(this.sublayerCaches.has(c.objectType.name?c.objectType.name:"")?Array.from(this.sublayerCaches.get(c.objectType.name)?.values()):[]).forEach(h=>{h.geometry=d.linkChartDiagramLookup.get(h.attributes[c.objectIdField]);h.attributes.ESRI__LAYOUT_GEOMETRY=h.geometry;if(m&&w){const n=d.linkChartGeohashLookup.get(h.attributes[c.objectIdField]);n?n>=m&&n<=w&&a.push(h):a.push(h)}else a.push(h)});
return a}return this.retrieveDataFromService(b,c,f)});return function(b,c,f){return l.apply(this,arguments)}}();F.refreshCacheContent=function(){var l=D._asyncToGenerator(function*(b,c,f){var d=this;const k=M.getInstance(),q=[],m=new Map,w=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach(a=>{a.name&&w.set(a.name,a)});this.knowledgeGraph.dataModel.relationshipTypes?.forEach(a=>{a.name&&w.set(a.name,a)});b||this.inclusionModeDefinition?b?b.forEach(a=>{if(this._memberIdTypeLookup.has(a)){const h=
this._memberIdTypeLookup.get(a);m.has(h)?m.get(h)?.push(a):m.set(h,[a])}}):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((a,h)=>{a.useAllData?m.set(h,null):a.members&&a.members.forEach(n=>{m.has(h)&&null!==m.get(h)?m.get(h)?.push(n.id):m.set(h,[n.id])})}):(this.knowledgeGraph.dataModel.entityTypes?.forEach(a=>{a.name&&m.set(a.name,null)}),this.knowledgeGraph.dataModel.entityTypes?.forEach(a=>{a.name&&m.set(a.name,null)}));for(const [a,h]of m)b=new Promise(n=>{(function(){var u=D._asyncToGenerator(function*(){const g=
new Set,r=[];let v="",y=!1;c||w.get(a)?.properties?.forEach(e=>{e.name&&g.add(e.name)});if(f&&d.geographicLookup.has(a)){var x=d.geographicLookup.get(a)?.name;x&&g.add(x)}if(d.entityTypeNames.has(a))v=`MATCH (n:${a}) ${h?"WHERE id(n) IN $ids ":""}return ID(n)`,g.forEach(e=>{v+=`, n.${e}`;r.push(e)});else if(d.relationshipTypeNames.has(a))y=!0,v=`MATCH ()-[n:${a}]->() ${h?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`;else throw new L("knowledge-graph:layer-data-manager",
`The graph type of ${a} could not be determined.  Was this type set in the KG data model?`);x=h?new H({openCypherQuery:v,bindParameters:{ids:h}}):new H({openCypherQuery:v});for(x=(yield S.executeQueryStreaming(d.knowledgeGraph,x)).resultRowsStream.getReader();;){const {done:e,value:A}=yield x.read();if(e)break;var B=[];for(let G=0;G<A.length;G++){const I=A[G];let z=0,K=0;const J={properties:{}};J.id=I[z];z++;K++;y&&(J.originId=I[z],z++,K++,J.destinationId=I[z],z++,K++);for(;z<I.length;z++)J.properties[r[z-
K]]=I[z];B.push(J)}B=k.writeToStore(B,"ESRI__ID",d.geographicLookup.get(a)?.name);d.sublayerCaches.has(a)||d.sublayerCaches.set(a,new Map);const aa=d.sublayerCaches.get(a);B.forEach(G=>{aa?.set(G.attributes.ESRI__ID,G)})}});return function(){return u.apply(this,arguments)}})()().then(()=>{n(null)})}),q.push(b),this._processingCacheUpdatesLookup.get(a)?.push(b);yield Promise.all(q)});return function(b,c,f){return l.apply(this,arguments)}}();F.removeFromLayer=function(l){const b=new Set;l.forEach(c=>
{this._memberIdTypeLookup.get(c)&&b.add(this._memberIdTypeLookup.get(c));this._memberIdTypeLookup.delete(c);this.inclusionModeDefinition?.namedTypeDefinitions.forEach(f=>{f.members?.has(c)&&f.members.delete(c)})});b.forEach(c=>{this.sublayerCaches.get(c)?.forEach((f,d)=>{l.includes(d)&&this.sublayerCaches.get(c)?.delete(d)})})};F.retrieveDataFromService=function(){var l=D._asyncToGenerator(function*(b,c,f){const d=M.getInstance(),k=new Set,q=[];let m="",w=[];var a=c.parentCompositeLayer.sublayerIdsCache.get(c.objectType.name);
const h="relationship"===c.graphType;if(!this.inclusionModeDefinition?.namedTypeDefinitions?.get(c.objectType.name)?.useAllData)if(p.isSome(b.objectIds)&&a&&0<a.length){const g=p.unwrap(b.objectIds);b.objectIds=a.filter(r=>g.includes(r))}else if(p.isSome(b.objectIds))a=p.unwrap(b.objectIds);else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(c.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(c.objectType.name)?.members||1>this.inclusionModeDefinition.namedTypeDefinitions.get(c.objectType.name)?.members?.size))return b.objectIds=
[],[];b.objectIds=a}if(p.isSome(b.outFields)){var n=p.unwrap(b.outFields);n.includes("*")?c.fields.forEach(g=>{k.add(g.name)}):n.forEach(g=>{"ESRI__ID"!==g&&g!==c.geometryFieldName&&k.add(g)})}if(p.isSome(b.geometry)){a=p.unwrap(b.geometry);a?.extent?.spatialReference&&!a.spatialReference?.isWGS84?(yield Q.initializeProjection(a.extent.spatialReference,R.WGS84),a=Q.project(a.extent,R.WGS84)):a=a.extent;if(p.isSome(b.where)&&"1\x3d1"!==p.unwrap(b.where)){const g=yield O.parseWhereClause(p.unwrap(b.where).toUpperCase(),
c.fieldsIndex);c.fields.forEach(r=>{g.fieldNames.includes(r.name)&&k.add(r.name)})}m=h?`Match ()-[n:${c.objectType.name}]-() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${c.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${c.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${c.geometryFieldName}) return ID(n)`;p.unwrap(b).returnGeometry&&c.geometryFieldName&&k.add(c.geometryFieldName);k.forEach(g=>{m+=`, n.${g}`;q.push(g)});b=new H({openCypherQuery:m,
bindParameters:{param_filter_geom:new X({rings:[[[a.xmin,a.ymin],[a.xmin,a.ymax],[a.xmax,a.ymax],[a.xmax,a.ymin],[a.xmin,a.ymin]]]})}})}else{n="";if(p.isSome(b.where)&&"1\x3d1"!==p.unwrap(b.where)){const r=yield O.parseWhereClause(p.unwrap(b.where),c.fieldsIndex);c.fields.forEach(e=>{r.fieldNames.includes(e.name)&&k.add(e.name)});const v=["column-reference","string","number","binary-expression"],y="\x3d \x3c \x3c\x3d \x3c\x3e \x3e \x3e\x3d AND OR LIKE".split(" ");let x=!1;const B=e=>{if("column-reference"===
e.type)return`n.${e.column}`;if("string"===e.type)return`'${e.value}'`;if("number"===e.type)return`${e.value}`;if("binary-expression"===e.type&&v.includes(e.left.type)&&v.includes(e.right.type)&&y.includes(e.operator))return`${B(e.left)} ${e.operator} ${B(e.right)}`;if("binary-expression"===e.type&&"LIKE"===e.operator){let A="";if("function"===e.left.type&&"column-reference"===e.left.args.value[0].type)A+=`lower(n.${e.left.args.value[0].column})`;else if("column-reference"===e.left.type)A+=`lower(n.${e.left.column})`;
else return x=!0,"";A+=" CONTAINS (";if("string"===e.right.type)e=e.right.value,"%"===e.charAt(0)&&(e=e.slice(1)),"%"===e.charAt(e.length-1)&&(e=e.slice(0,-1)),A+=`'${e.toLowerCase()}')`;else return x=!0,"";return A}x=!0;return""};n=B(r.parseTree);x&&(n="")}let g="";g=h?`Match ()-[n:${c.objectType.name}]-()`:`Match (n:${c.objectType.name})`;var u=!1;a&&(u=!0,g+=" WHERE ID(n) IN $ids");n&&(g=u?g+" AND":g+" WHERE",g+=` ${n}`);g+=" return ID(n)";h&&(g+=", id(startNode(n)), id(endNode(n))");p.unwrap(b).returnGeometry&&
c.geometryFieldName&&k.add(c.geometryFieldName);k.forEach(r=>{g+=`, n.${r}`;q.push(r)});b=a?new H({openCypherQuery:g,bindParameters:{ids:a}}):new H({openCypherQuery:g})}for(f=(yield S.executeQueryStreaming(c.parentCompositeLayer.dataManager.knowledgeGraph,b,f)).resultRowsStream.getReader();;){const {done:g,value:r}=yield f.read();if(g)break;b=[];for(a=0;a<r.length;a++){n=r[a];let v=u=0;const y={properties:{}};y.id=n[u];u++;v++;h&&(y.originId=n[u],u++,v++,y.destinationId=n[u],u++,v++);for(;u<n.length;u++)y.properties[q[u-
v]]=n[u];b.push(y)}w=w.concat(d.writeToStore(b,"ESRI__ID",c.parentCompositeLayer.dataManager.geographicLookup.get(c.objectType.name)?.name))}return w});return function(b,c,f){return l.apply(this,arguments)}}();return N}(U);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"knowledgeGraph",void 0);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"inclusionModeDefinition",void 0);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"entityTypeNames",
void 0);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"relationshipTypeNames",void 0);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"geographicLookup",void 0);C.__decorate([E.property()],t.KnowledgeGraphLayerDataManager.prototype,"sublayerCaches",void 0);t.KnowledgeGraphLayerDataManager=C.__decorate([W.subclass("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],t.KnowledgeGraphLayerDataManager);t.GEOHASH_ENCODING_PRECISION=
12;t.MOCK_DESTINATION_ID_FIELD_NAME="ESRI__DESTINATION_ID";t.MOCK_LAYOUT_GEOMETRY_FIELD_NAME="ESRI__LAYOUT_GEOMETRY";t.MOCK_OID_FIELD_NAME="ESRI__ID";t.MOCK_ORIGIN_ID_FIELD_NAME="ESRI__ORIGIN_ID";Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});